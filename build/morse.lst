ARM GAS  /tmp/cctTYZrL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"morse.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.delay,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	delay:
  27              	.LFB124:
  28              		.file 1 "Ourwares/morse.c"
   1:Ourwares/morse.c **** /******************************************************************************
   2:Ourwares/morse.c **** * File Name          : morse.c
   3:Ourwares/morse.c **** * Date First Issued  : 02/13/2019
   4:Ourwares/morse.c **** * Description        : Morse code
   5:Ourwares/morse.c **** *******************************************************************************/
   6:Ourwares/morse.c **** #include <stdint.h>
   7:Ourwares/morse.c **** #include "DTW_counter.h"
   8:Ourwares/morse.c **** #include "stm32f4xx_hal.h"
   9:Ourwares/morse.c **** 
  10:Ourwares/morse.c **** #define TICPERSEC (186000000)
  11:Ourwares/morse.c **** #define TIC_DIT (TICPERSEC/6)
  12:Ourwares/morse.c **** #define TIC_DAH (TIC_DIT*4)
  13:Ourwares/morse.c **** #define TIC_IDIT (TIC_DIT*1.3)
  14:Ourwares/morse.c **** #define TIC_ICHAR (TIC_IDIT*4)
  15:Ourwares/morse.c **** #define TIC_IWORD (TIC_ICHAR *3)
  16:Ourwares/morse.c **** #define TIC_PAUSE (TICPERSEC*1) // Pause between code sequence
  17:Ourwares/morse.c **** 
  18:Ourwares/morse.c **** #define LEDALL (GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15)
  19:Ourwares/morse.c **** 
  20:Ourwares/morse.c **** struct MORSE_ELEMENT
  21:Ourwares/morse.c **** {
  22:Ourwares/morse.c **** 	char c;
  23:Ourwares/morse.c **** 	uint8_t dd;
  24:Ourwares/morse.c **** 	uint8_t ct;
  25:Ourwares/morse.c **** };
  26:Ourwares/morse.c **** 
  27:Ourwares/morse.c **** const struct MORSE_ELEMENT mrse[] = {
  28:Ourwares/morse.c **** {'A', 0b01000000, 2}, 
  29:Ourwares/morse.c **** {'B', 0b10000000, 4}, 
  30:Ourwares/morse.c **** {'C', 0b10100000, 4}, 
ARM GAS  /tmp/cctTYZrL.s 			page 2


  31:Ourwares/morse.c **** {'D', 0b10000000, 3}, 
  32:Ourwares/morse.c **** {'E', 0b00000000, 1}, 
  33:Ourwares/morse.c **** {'F', 0b00100000, 4}, 
  34:Ourwares/morse.c **** {'G', 0b11000000, 3}, 
  35:Ourwares/morse.c **** {'H', 0b00000000, 4},
  36:Ourwares/morse.c **** {'I', 0b00000000, 2}, 
  37:Ourwares/morse.c **** {'J', 0b01110000, 4}, 
  38:Ourwares/morse.c **** {'K', 0b10100000, 3}, 
  39:Ourwares/morse.c **** {'L', 0b01000000, 4}, 
  40:Ourwares/morse.c **** {'M', 0b11000000, 2}, 
  41:Ourwares/morse.c **** {'N', 0b10000000, 2}, 
  42:Ourwares/morse.c **** {'O', 0b11100000, 3}, 
  43:Ourwares/morse.c **** {'P', 0b01100000, 4}, 
  44:Ourwares/morse.c **** {'Q', 0b11010000, 4}, 
  45:Ourwares/morse.c **** {'R', 0b01000000, 3}, 
  46:Ourwares/morse.c **** {'S', 0b00000000, 3}, 
  47:Ourwares/morse.c **** {'T', 0b10000000, 1}, 
  48:Ourwares/morse.c **** {'U', 0b00100000, 3}, 
  49:Ourwares/morse.c **** {'V', 0b00010000, 4}, 
  50:Ourwares/morse.c **** {'W', 0b01100000, 3}, 
  51:Ourwares/morse.c **** {'X', 0b10010000, 4}, 
  52:Ourwares/morse.c **** {'Y', 0b10110000, 4}, 
  53:Ourwares/morse.c **** {'Z', 0b11000000, 4}, 
  54:Ourwares/morse.c **** {'0', 0b11111000, 5}, 
  55:Ourwares/morse.c **** {'1', 0b01111000, 5}, 
  56:Ourwares/morse.c **** {'2', 0b00111000, 5}, 
  57:Ourwares/morse.c **** {'3', 0b00011000, 5}, 
  58:Ourwares/morse.c **** {'4', 0b00001000, 5}, 
  59:Ourwares/morse.c **** {'5', 0b00000000, 5}, 
  60:Ourwares/morse.c **** {'6', 0b10000000, 5}, 
  61:Ourwares/morse.c **** {'7', 0b11000000, 5}, 
  62:Ourwares/morse.c **** {'8', 0b11100000, 5}, 
  63:Ourwares/morse.c **** {'9', 0b11110000, 5}, 
  64:Ourwares/morse.c **** {'.', 0b01010100, 6}, 
  65:Ourwares/morse.c **** {',', 0b11001100, 6}, 
  66:Ourwares/morse.c **** {'?', 0b00110000, 6}, 
  67:Ourwares/morse.c **** {'-', 0b10001000, 5}, 
  68:Ourwares/morse.c **** {'@', 0b01101000, 6}, 
  69:Ourwares/morse.c **** {'_', 0b00110100, 6}, 
  70:Ourwares/morse.c **** {'+', 0b01010000, 5}, 
  71:Ourwares/morse.c **** {';', 0b10101000, 6}, 
  72:Ourwares/morse.c **** {'&', 0b01000000, 5},
  73:Ourwares/morse.c **** {'/', 0b10010000, 5},
  74:Ourwares/morse.c **** {'(', 0b10110000, 5},
  75:Ourwares/morse.c **** {')', 0b10110100, 6},
  76:Ourwares/morse.c **** };
  77:Ourwares/morse.c **** 
  78:Ourwares/morse.c **** /* *************************************************************************
  79:Ourwares/morse.c ****  * static void delay(uint32_t ticks, uint8_t on);
  80:Ourwares/morse.c ****  * @brief	: Delay based on DTW counter with LEDs ON
  81:Ourwares/morse.c ****  * @param	: ticks = DTW count to delay
  82:Ourwares/morse.c ****  * @param	: on = GPIO_PIN_SET or GPIO_PIN_RESET
  83:Ourwares/morse.c ****  * *************************************************************************/
  84:Ourwares/morse.c **** static void delay(uint32_t ticks, uint8_t on)
  85:Ourwares/morse.c **** {
  29              		.loc 1 85 0
  30              		.cfi_startproc
ARM GAS  /tmp/cctTYZrL.s 			page 3


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0D46     		mov	r5, r1
  86:Ourwares/morse.c **** 	uint32_t tx = DTWTIME + ticks;
  42              		.loc 1 86 0
  43 0004 074B     		ldr	r3, .L5
  44 0006 1C68     		ldr	r4, [r3]
  45 0008 0444     		add	r4, r4, r0
  46              	.LVL1:
  87:Ourwares/morse.c **** 	while ((int32_t)(tx - DTWTIME) > 0)
  47              		.loc 1 87 0
  48 000a 05E0     		b	.L2
  49              	.LVL2:
  50              	.L3:
  88:Ourwares/morse.c **** 	{
  89:Ourwares/morse.c **** 			HAL_GPIO_WritePin(GPIOD, LEDALL, on); 
  51              		.loc 1 89 0
  52 000c 2A46     		mov	r2, r5
  53 000e 4FF47041 		mov	r1, #61440
  54 0012 0548     		ldr	r0, .L5+4
  55 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
  57              	.L2:
  87:Ourwares/morse.c **** 	while ((int32_t)(tx - DTWTIME) > 0)
  58              		.loc 1 87 0
  59 0018 024B     		ldr	r3, .L5
  60 001a 1B68     		ldr	r3, [r3]
  61 001c E31A     		subs	r3, r4, r3
  62 001e 002B     		cmp	r3, #0
  63 0020 F4DC     		bgt	.L3
  90:Ourwares/morse.c **** 	}
  91:Ourwares/morse.c **** 	return;
  92:Ourwares/morse.c **** }
  64              		.loc 1 92 0
  65 0022 38BD     		pop	{r3, r4, r5, pc}
  66              	.LVL4:
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0024 041000E0 		.word	-536866812
  71 0028 000C0240 		.word	1073875968
  72              		.cfi_endproc
  73              	.LFE124:
  75              		.section	.text.morse_generate,"ax",%progbits
  76              		.align	2
  77              		.thumb
  78              		.thumb_func
  80              	morse_generate:
  81              	.LFB125:
ARM GAS  /tmp/cctTYZrL.s 			page 4


  93:Ourwares/morse.c **** 
  94:Ourwares/morse.c **** /* *************************************************************************
  95:Ourwares/morse.c ****  * static void morse_generate(char c);
  96:Ourwares/morse.c ****  *	@brief	: c = character to send as Morse cdoe
  97:Ourwares/morse.c ****  * *************************************************************************/
  98:Ourwares/morse.c **** static void morse_generate(char c)
  99:Ourwares/morse.c **** {
  82              		.loc 1 99 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL5:
  87 0000 38B5     		push	{r3, r4, r5, lr}
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 3, -16
  91              		.cfi_offset 4, -12
  92              		.cfi_offset 5, -8
  93              		.cfi_offset 14, -4
  94              	.LVL6:
 100:Ourwares/morse.c **** 	const struct MORSE_ELEMENT* ptbl = mrse;
 101:Ourwares/morse.c **** 	int i;
 102:Ourwares/morse.c **** 	uint8_t ct;
 103:Ourwares/morse.c **** 	uint8_t dd;
 104:Ourwares/morse.c **** 	
 105:Ourwares/morse.c **** 	for (i = 0; i < (74 - 16); i++)
  95              		.loc 1 105 0
  96 0002 0022     		movs	r2, #0
 100:Ourwares/morse.c **** 	const struct MORSE_ELEMENT* ptbl = mrse;
  97              		.loc 1 100 0
  98 0004 134B     		ldr	r3, .L17
  99              		.loc 1 105 0
 100 0006 22E0     		b	.L8
 101              	.LVL7:
 102              	.L15:
 106:Ourwares/morse.c **** 	{
 107:Ourwares/morse.c **** 		if (ptbl->c == c)
 103              		.loc 1 107 0
 104 0008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 105 000a 8142     		cmp	r1, r0
 106 000c 1DD1     		bne	.L9
 108:Ourwares/morse.c **** 		{
 109:Ourwares/morse.c **** 				ct = ptbl->ct;
 107              		.loc 1 109 0
 108 000e 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 109              	.LVL8:
 110:Ourwares/morse.c **** 				dd = ptbl->dd;	
 110              		.loc 1 110 0
 111 0010 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 112              	.LVL9:
 111:Ourwares/morse.c **** 				while (ct > 0)
 113              		.loc 1 111 0
 114 0012 13E0     		b	.L10
 115              	.LVL10:
 116              	.L13:
 112:Ourwares/morse.c **** 				{
 113:Ourwares/morse.c **** 					if ((dd & 0x80) == 0)
ARM GAS  /tmp/cctTYZrL.s 			page 5


 117              		.loc 1 113 0
 118 0014 15F0800F 		tst	r5, #128
 119 0018 04D1     		bne	.L11
 114:Ourwares/morse.c **** 					{ // Here, dot
 115:Ourwares/morse.c **** 						delay(TIC_DIT, GPIO_PIN_SET);
 120              		.loc 1 115 0
 121 001a 0121     		movs	r1, #1
 122 001c 0E48     		ldr	r0, .L17+4
 123 001e FFF7FEFF 		bl	delay
 124              	.LVL11:
 125 0022 03E0     		b	.L12
 126              	.L11:
 116:Ourwares/morse.c **** 					}
 117:Ourwares/morse.c **** 					else
 118:Ourwares/morse.c **** 					{ // Here, dash
 119:Ourwares/morse.c **** 						delay(TIC_DAH, GPIO_PIN_SET);						
 127              		.loc 1 119 0
 128 0024 0121     		movs	r1, #1
 129 0026 0D48     		ldr	r0, .L17+8
 130 0028 FFF7FEFF 		bl	delay
 131              	.LVL12:
 132              	.L12:
 120:Ourwares/morse.c **** 					}
 121:Ourwares/morse.c **** 					delay(TIC_IDIT, GPIO_PIN_RESET);
 133              		.loc 1 121 0
 134 002c 0021     		movs	r1, #0
 135 002e 0C48     		ldr	r0, .L17+12
 136 0030 FFF7FEFF 		bl	delay
 137              	.LVL13:
 122:Ourwares/morse.c **** 					dd = dd << 1;
 138              		.loc 1 122 0
 139 0034 6D00     		lsls	r5, r5, #1
 140              	.LVL14:
 141 0036 EDB2     		uxtb	r5, r5
 142              	.LVL15:
 123:Ourwares/morse.c **** 					ct -= 1;
 143              		.loc 1 123 0
 144 0038 013C     		subs	r4, r4, #1
 145              	.LVL16:
 146 003a E4B2     		uxtb	r4, r4
 147              	.LVL17:
 148              	.L10:
 111:Ourwares/morse.c **** 				{
 149              		.loc 1 111 0
 150 003c 002C     		cmp	r4, #0
 151 003e E9D1     		bne	.L13
 124:Ourwares/morse.c **** 				}
 125:Ourwares/morse.c **** 				delay(TIC_ICHAR,GPIO_PIN_RESET);
 152              		.loc 1 125 0
 153 0040 0021     		movs	r1, #0
 154 0042 0848     		ldr	r0, .L17+16
 155 0044 FFF7FEFF 		bl	delay
 156              	.LVL18:
 126:Ourwares/morse.c **** 				return;
 157              		.loc 1 126 0
 158 0048 38BD     		pop	{r3, r4, r5, pc}
 159              	.LVL19:
ARM GAS  /tmp/cctTYZrL.s 			page 6


 160              	.L9:
 127:Ourwares/morse.c **** 		}
 128:Ourwares/morse.c **** 		ptbl++;
 161              		.loc 1 128 0 discriminator 2
 162 004a 0333     		adds	r3, r3, #3
 163              	.LVL20:
 105:Ourwares/morse.c **** 	{
 164              		.loc 1 105 0 discriminator 2
 165 004c 0132     		adds	r2, r2, #1
 166              	.LVL21:
 167              	.L8:
 105:Ourwares/morse.c **** 	{
 168              		.loc 1 105 0 is_stmt 0 discriminator 1
 169 004e 392A     		cmp	r2, #57
 170 0050 DADD     		ble	.L15
 171 0052 38BD     		pop	{r3, r4, r5, pc}
 172              	.LVL22:
 173              	.L18:
 174              		.align	2
 175              	.L17:
 176 0054 00000000 		.word	.LANCHOR0
 177 0058 C005D901 		.word	31000000
 178 005c 00176407 		.word	124000000
 179 0060 E0ED6602 		.word	40300000
 180 0064 80B79B09 		.word	161200000
 181              		.cfi_endproc
 182              	.LFE125:
 184              		.section	.text.morse_string,"ax",%progbits
 185              		.align	2
 186              		.global	morse_string
 187              		.thumb
 188              		.thumb_func
 190              	morse_string:
 191              	.LFB126:
 129:Ourwares/morse.c **** 	}	
 130:Ourwares/morse.c **** 	return;
 131:Ourwares/morse.c **** }
 132:Ourwares/morse.c **** /* *************************************************************************
 133:Ourwares/morse.c ****  * void morse_string(char* p);
 134:Ourwares/morse.c ****  *	@brief	: Send a character string as Morse code
 135:Ourwares/morse.c ****  * @param	: p = pointer to string
 136:Ourwares/morse.c ****  * *************************************************************************/
 137:Ourwares/morse.c **** void morse_string(char* p)
 138:Ourwares/morse.c **** {
 192              		.loc 1 138 0 is_stmt 1
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL23:
 197 0000 10B5     		push	{r4, lr}
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 0446     		mov	r4, r0
 139:Ourwares/morse.c **** 	while(*p != 0)
 203              		.loc 1 139 0
ARM GAS  /tmp/cctTYZrL.s 			page 7


 204 0004 0AE0     		b	.L20
 205              	.LVL24:
 206              	.L23:
 140:Ourwares/morse.c **** 	{
 141:Ourwares/morse.c **** 		if (*p != ' ')
 207              		.loc 1 141 0
 208 0006 2028     		cmp	r0, #32
 209 0008 03D0     		beq	.L21
 142:Ourwares/morse.c **** 		{
 143:Ourwares/morse.c **** 			morse_generate(*p++);
 210              		.loc 1 143 0
 211 000a 0134     		adds	r4, r4, #1
 212              	.LVL25:
 213 000c FFF7FEFF 		bl	morse_generate
 214              	.LVL26:
 215 0010 04E0     		b	.L20
 216              	.L21:
 144:Ourwares/morse.c **** 		}
 145:Ourwares/morse.c **** 		else
 146:Ourwares/morse.c **** 		{
 147:Ourwares/morse.c **** 			delay(TIC_IWORD,GPIO_PIN_RESET);
 217              		.loc 1 147 0
 218 0012 0021     		movs	r1, #0
 219 0014 0348     		ldr	r0, .L25
 220 0016 FFF7FEFF 		bl	delay
 221              	.LVL27:
 148:Ourwares/morse.c **** 			p++;
 222              		.loc 1 148 0
 223 001a 0134     		adds	r4, r4, #1
 224              	.LVL28:
 225              	.L20:
 139:Ourwares/morse.c **** 	{
 226              		.loc 1 139 0
 227 001c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 228 001e 0028     		cmp	r0, #0
 229 0020 F1D1     		bne	.L23
 149:Ourwares/morse.c **** 		}
 150:Ourwares/morse.c **** 	}
 151:Ourwares/morse.c **** 
 152:Ourwares/morse.c **** 	return;		
 153:Ourwares/morse.c **** }
 230              		.loc 1 153 0
 231 0022 10BD     		pop	{r4, pc}
 232              	.LVL29:
 233              	.L26:
 234              		.align	2
 235              	.L25:
 236 0024 8026D31C 		.word	483600000
 237              		.cfi_endproc
 238              	.LFE126:
 240              		.section	.text.morse_number,"ax",%progbits
 241              		.align	2
 242              		.global	morse_number
 243              		.thumb
 244              		.thumb_func
 246              	morse_number:
 247              	.LFB127:
ARM GAS  /tmp/cctTYZrL.s 			page 8


 154:Ourwares/morse.c **** /* *************************************************************************
 155:Ourwares/morse.c ****  * void morse_number(uint32_t n);
 156:Ourwares/morse.c ****  *	@brief	: Send a character string as Morse code
 157:Ourwares/morse.c ****  * @param	: nx = number to send
 158:Ourwares/morse.c ****  * *************************************************************************/
 159:Ourwares/morse.c **** void morse_number(uint32_t nx)
 160:Ourwares/morse.c **** {
 248              		.loc 1 160 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 16
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              	.LVL30:
 253 0000 10B5     		push	{r4, lr}
 254              	.LCFI3:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 4, -8
 257              		.cfi_offset 14, -4
 258 0002 84B0     		sub	sp, sp, #16
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 24
 261              	.LVL31:
 161:Ourwares/morse.c **** 	char c[11];
 162:Ourwares/morse.c **** 	int i = 0;
 262              		.loc 1 162 0
 263 0004 0024     		movs	r4, #0
 264              	.LVL32:
 265              	.L28:
 163:Ourwares/morse.c **** 	do
 164:Ourwares/morse.c **** 	{
 165:Ourwares/morse.c **** 		c[i] = (nx % 10) + '0';
 266              		.loc 1 165 0 discriminator 1
 267 0006 104B     		ldr	r3, .L32
 268 0008 A3FB0023 		umull	r2, r3, r3, r0
 269 000c DB08     		lsrs	r3, r3, #3
 270 000e 1A46     		mov	r2, r3
 271 0010 03EB8303 		add	r3, r3, r3, lsl #2
 272 0014 5900     		lsls	r1, r3, #1
 273 0016 431A     		subs	r3, r0, r1
 274 0018 04A9     		add	r1, sp, #16
 275 001a 2144     		add	r1, r1, r4
 276 001c 3033     		adds	r3, r3, #48
 277 001e 01F80C3C 		strb	r3, [r1, #-12]
 166:Ourwares/morse.c **** 		nx = nx/10;
 278              		.loc 1 166 0 discriminator 1
 279 0022 1046     		mov	r0, r2
 280              	.LVL33:
 167:Ourwares/morse.c **** 		i += 1;
 281              		.loc 1 167 0 discriminator 1
 282 0024 0134     		adds	r4, r4, #1
 283              	.LVL34:
 168:Ourwares/morse.c **** 	} while (nx != 0);
 284              		.loc 1 168 0 discriminator 1
 285 0026 002A     		cmp	r2, #0
 286 0028 EDD1     		bne	.L28
 287 002a 05E0     		b	.L29
 288              	.LVL35:
 289              	.L30:
ARM GAS  /tmp/cctTYZrL.s 			page 9


 169:Ourwares/morse.c **** 
 170:Ourwares/morse.c **** 	while (--i >= 0)
 171:Ourwares/morse.c **** 	{
 172:Ourwares/morse.c **** 		morse_generate(c[i]);
 290              		.loc 1 172 0
 291 002c 04AB     		add	r3, sp, #16
 292 002e 2344     		add	r3, r3, r4
 293 0030 13F80C0C 		ldrb	r0, [r3, #-12]	@ zero_extendqisi2
 294 0034 FFF7FEFF 		bl	morse_generate
 295              	.LVL36:
 296              	.L29:
 170:Ourwares/morse.c **** 	{
 297              		.loc 1 170 0
 298 0038 013C     		subs	r4, r4, #1
 299              	.LVL37:
 300 003a F7D5     		bpl	.L30
 173:Ourwares/morse.c **** 
 174:Ourwares/morse.c **** 	}
 175:Ourwares/morse.c **** 	delay(TIC_IWORD,GPIO_PIN_RESET);
 301              		.loc 1 175 0
 302 003c 0021     		movs	r1, #0
 303 003e 0348     		ldr	r0, .L32+4
 304 0040 FFF7FEFF 		bl	delay
 305              	.LVL38:
 176:Ourwares/morse.c **** 	return;
 177:Ourwares/morse.c **** }
 306              		.loc 1 177 0
 307 0044 04B0     		add	sp, sp, #16
 308              	.LCFI5:
 309              		.cfi_def_cfa_offset 8
 310              		@ sp needed
 311 0046 10BD     		pop	{r4, pc}
 312              	.LVL39:
 313              	.L33:
 314              		.align	2
 315              	.L32:
 316 0048 CDCCCCCC 		.word	-858993459
 317 004c 8026D31C 		.word	483600000
 318              		.cfi_endproc
 319              	.LFE127:
 321              		.section	.text.morse_trap,"ax",%progbits
 322              		.align	2
 323              		.global	morse_trap
 324              		.thumb
 325              		.thumb_func
 327              	morse_trap:
 328              	.LFB128:
 178:Ourwares/morse.c **** /* *************************************************************************
 179:Ourwares/morse.c ****  * void morse_trap(uint8_t x);
 180:Ourwares/morse.c ****  *	@brief	: Disable interrupts, Send 'x' and endless loop
 181:Ourwares/morse.c ****  * @param	: x = trap number to flash
 182:Ourwares/morse.c ****  * *************************************************************************/
 183:Ourwares/morse.c **** void morse_trap(uint8_t x)
 184:Ourwares/morse.c **** {
 329              		.loc 1 184 0
 330              		.cfi_startproc
 331              		@ Volatile: function does not return.
ARM GAS  /tmp/cctTYZrL.s 			page 10


 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL40:
 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI6:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 340 0002 0446     		mov	r4, r0
 185:Ourwares/morse.c **** 	/* Disable global interrupts */
 186:Ourwares/morse.c **** __asm__ volatile ("CPSID I");
 341              		.loc 1 186 0
 342              		.syntax unified
 343              	@ 186 "Ourwares/morse.c" 1
 344 0004 72B6     		CPSID I
 345              	@ 0 "" 2
 346              	.LVL41:
 347              		.thumb
 348              		.syntax unified
 349              	.L35:
 187:Ourwares/morse.c **** 	while(1==1)
 188:Ourwares/morse.c **** 	{
 189:Ourwares/morse.c **** 		morse_number(x);
 350              		.loc 1 189 0 discriminator 1
 351 0006 2046     		mov	r0, r4
 352 0008 FFF7FEFF 		bl	morse_number
 353              	.LVL42:
 190:Ourwares/morse.c **** 		delay(TIC_PAUSE,GPIO_PIN_RESET);	
 354              		.loc 1 190 0 discriminator 1
 355 000c 0021     		movs	r1, #0
 356 000e 0248     		ldr	r0, .L37
 357 0010 FFF7FEFF 		bl	delay
 358              	.LVL43:
 359 0014 F7E7     		b	.L35
 360              	.L38:
 361 0016 00BF     		.align	2
 362              	.L37:
 363 0018 8022160B 		.word	186000000
 364              		.cfi_endproc
 365              	.LFE128:
 367              		.section	.text.morse_hex,"ax",%progbits
 368              		.align	2
 369              		.global	morse_hex
 370              		.thumb
 371              		.thumb_func
 373              	morse_hex:
 374              	.LFB129:
 191:Ourwares/morse.c **** 	}
 192:Ourwares/morse.c **** }
 193:Ourwares/morse.c **** /* *************************************************************************
 194:Ourwares/morse.c ****  * void morse_hex(uint32_t n);
 195:Ourwares/morse.c ****  *	@brief	: Send a  hex number, skip leading zeroes
 196:Ourwares/morse.c ****  * @param	: nx = number to send
 197:Ourwares/morse.c ****  * *************************************************************************/
 198:Ourwares/morse.c **** static const char h[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 199:Ourwares/morse.c **** void morse_hex(uint32_t nx)
 200:Ourwares/morse.c **** {
ARM GAS  /tmp/cctTYZrL.s 			page 11


 375              		.loc 1 200 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              	.LVL44:
 380 0000 38B5     		push	{r3, r4, r5, lr}
 381              	.LCFI7:
 382              		.cfi_def_cfa_offset 16
 383              		.cfi_offset 3, -16
 384              		.cfi_offset 4, -12
 385              		.cfi_offset 5, -8
 386              		.cfi_offset 14, -4
 387 0002 0546     		mov	r5, r0
 388              	.LVL45:
 201:Ourwares/morse.c **** 	uint8_t c;
 202:Ourwares/morse.c **** 	uint8_t sw = 0;
 203:Ourwares/morse.c **** 	int8_t i;
 204:Ourwares/morse.c **** 
 205:Ourwares/morse.c **** 	morse_generate('X');	// Hex prefix (but skip '0' in front of X)
 389              		.loc 1 205 0
 390 0004 5820     		movs	r0, #88
 391              	.LVL46:
 392 0006 FFF7FEFF 		bl	morse_generate
 393              	.LVL47:
 206:Ourwares/morse.c **** 
 207:Ourwares/morse.c **** 	uint32_t mask = 0xf0000000;
 208:Ourwares/morse.c **** 
 209:Ourwares/morse.c **** 	if (nx == 0)
 394              		.loc 1 209 0
 395 000a 8DB9     		cbnz	r5, .L45
 210:Ourwares/morse.c **** 	{
 211:Ourwares/morse.c **** 		morse_generate('0');
 396              		.loc 1 211 0
 397 000c 3020     		movs	r0, #48
 398 000e FFF7FEFF 		bl	morse_generate
 399              	.LVL48:
 212:Ourwares/morse.c **** 		return;
 400              		.loc 1 212 0
 401 0012 38BD     		pop	{r3, r4, r5, pc}
 402              	.LVL49:
 403              	.L44:
 213:Ourwares/morse.c **** 	}
 214:Ourwares/morse.c **** 	
 215:Ourwares/morse.c **** 	for (i = 0; i < 8; i++)
 216:Ourwares/morse.c **** 	{
 217:Ourwares/morse.c **** 		if (((nx & mask) != 0) || (sw != 0))
 404              		.loc 1 217 0
 405 0014 15F0704F 		tst	r5, #-268435456
 406 0018 00D1     		bne	.L42
 407              		.loc 1 217 0 is_stmt 0 discriminator 1
 408 001a 2BB1     		cbz	r3, .L43
 409              	.L42:
 410              	.LVL50:
 218:Ourwares/morse.c **** 		{
 219:Ourwares/morse.c **** 			sw = 1;
 220:Ourwares/morse.c **** 			c = h[(nx >> 28)];
 411              		.loc 1 220 0 is_stmt 1
ARM GAS  /tmp/cctTYZrL.s 			page 12


 412 001c 2B0F     		lsrs	r3, r5, #28
 221:Ourwares/morse.c **** 			morse_generate(c);
 413              		.loc 1 221 0
 414 001e 094A     		ldr	r2, .L47
 415 0020 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 416 0022 FFF7FEFF 		bl	morse_generate
 417              	.LVL51:
 219:Ourwares/morse.c **** 			c = h[(nx >> 28)];
 418              		.loc 1 219 0
 419 0026 0123     		movs	r3, #1
 420              	.LVL52:
 421              	.L43:
 222:Ourwares/morse.c **** 		}
 223:Ourwares/morse.c **** 		nx = nx << 4;
 422              		.loc 1 223 0 discriminator 2
 423 0028 2D01     		lsls	r5, r5, #4
 424              	.LVL53:
 215:Ourwares/morse.c **** 	{
 425              		.loc 1 215 0 discriminator 2
 426 002a 0134     		adds	r4, r4, #1
 427              	.LVL54:
 428 002c 64B2     		sxtb	r4, r4
 429              	.LVL55:
 430 002e 01E0     		b	.L40
 431              	.LVL56:
 432              	.L45:
 433 0030 0024     		movs	r4, #0
 434 0032 2346     		mov	r3, r4
 435              	.LVL57:
 436              	.L40:
 215:Ourwares/morse.c **** 	{
 437              		.loc 1 215 0 is_stmt 0 discriminator 1
 438 0034 072C     		cmp	r4, #7
 439 0036 EDDD     		ble	.L44
 224:Ourwares/morse.c **** 	}  
 225:Ourwares/morse.c **** 	delay(TIC_IWORD,GPIO_PIN_RESET);
 440              		.loc 1 225 0 is_stmt 1
 441 0038 0021     		movs	r1, #0
 442 003a 0348     		ldr	r0, .L47+4
 443 003c FFF7FEFF 		bl	delay
 444              	.LVL58:
 445 0040 38BD     		pop	{r3, r4, r5, pc}
 446              	.LVL59:
 447              	.L48:
 448 0042 00BF     		.align	2
 449              	.L47:
 450 0044 00000000 		.word	.LANCHOR1
 451 0048 8026D31C 		.word	483600000
 452              		.cfi_endproc
 453              	.LFE129:
 455              		.global	mrse
 456              		.section	.rodata.mrse,"a",%progbits
 457              		.align	2
 458              		.set	.LANCHOR0,. + 0
 461              	mrse:
 462 0000 41       		.byte	65
 463 0001 40       		.byte	64
ARM GAS  /tmp/cctTYZrL.s 			page 13


 464 0002 02       		.byte	2
 465 0003 42       		.byte	66
 466 0004 80       		.byte	-128
 467 0005 04       		.byte	4
 468 0006 43       		.byte	67
 469 0007 A0       		.byte	-96
 470 0008 04       		.byte	4
 471 0009 44       		.byte	68
 472 000a 80       		.byte	-128
 473 000b 03       		.byte	3
 474 000c 45       		.byte	69
 475 000d 00       		.byte	0
 476 000e 01       		.byte	1
 477 000f 46       		.byte	70
 478 0010 20       		.byte	32
 479 0011 04       		.byte	4
 480 0012 47       		.byte	71
 481 0013 C0       		.byte	-64
 482 0014 03       		.byte	3
 483 0015 48       		.byte	72
 484 0016 00       		.byte	0
 485 0017 04       		.byte	4
 486 0018 49       		.byte	73
 487 0019 00       		.byte	0
 488 001a 02       		.byte	2
 489 001b 4A       		.byte	74
 490 001c 70       		.byte	112
 491 001d 04       		.byte	4
 492 001e 4B       		.byte	75
 493 001f A0       		.byte	-96
 494 0020 03       		.byte	3
 495 0021 4C       		.byte	76
 496 0022 40       		.byte	64
 497 0023 04       		.byte	4
 498 0024 4D       		.byte	77
 499 0025 C0       		.byte	-64
 500 0026 02       		.byte	2
 501 0027 4E       		.byte	78
 502 0028 80       		.byte	-128
 503 0029 02       		.byte	2
 504 002a 4F       		.byte	79
 505 002b E0       		.byte	-32
 506 002c 03       		.byte	3
 507 002d 50       		.byte	80
 508 002e 60       		.byte	96
 509 002f 04       		.byte	4
 510 0030 51       		.byte	81
 511 0031 D0       		.byte	-48
 512 0032 04       		.byte	4
 513 0033 52       		.byte	82
 514 0034 40       		.byte	64
 515 0035 03       		.byte	3
 516 0036 53       		.byte	83
 517 0037 00       		.byte	0
 518 0038 03       		.byte	3
 519 0039 54       		.byte	84
 520 003a 80       		.byte	-128
ARM GAS  /tmp/cctTYZrL.s 			page 14


 521 003b 01       		.byte	1
 522 003c 55       		.byte	85
 523 003d 20       		.byte	32
 524 003e 03       		.byte	3
 525 003f 56       		.byte	86
 526 0040 10       		.byte	16
 527 0041 04       		.byte	4
 528 0042 57       		.byte	87
 529 0043 60       		.byte	96
 530 0044 03       		.byte	3
 531 0045 58       		.byte	88
 532 0046 90       		.byte	-112
 533 0047 04       		.byte	4
 534 0048 59       		.byte	89
 535 0049 B0       		.byte	-80
 536 004a 04       		.byte	4
 537 004b 5A       		.byte	90
 538 004c C0       		.byte	-64
 539 004d 04       		.byte	4
 540 004e 30       		.byte	48
 541 004f F8       		.byte	-8
 542 0050 05       		.byte	5
 543 0051 31       		.byte	49
 544 0052 78       		.byte	120
 545 0053 05       		.byte	5
 546 0054 32       		.byte	50
 547 0055 38       		.byte	56
 548 0056 05       		.byte	5
 549 0057 33       		.byte	51
 550 0058 18       		.byte	24
 551 0059 05       		.byte	5
 552 005a 34       		.byte	52
 553 005b 08       		.byte	8
 554 005c 05       		.byte	5
 555 005d 35       		.byte	53
 556 005e 00       		.byte	0
 557 005f 05       		.byte	5
 558 0060 36       		.byte	54
 559 0061 80       		.byte	-128
 560 0062 05       		.byte	5
 561 0063 37       		.byte	55
 562 0064 C0       		.byte	-64
 563 0065 05       		.byte	5
 564 0066 38       		.byte	56
 565 0067 E0       		.byte	-32
 566 0068 05       		.byte	5
 567 0069 39       		.byte	57
 568 006a F0       		.byte	-16
 569 006b 05       		.byte	5
 570 006c 2E       		.byte	46
 571 006d 54       		.byte	84
 572 006e 06       		.byte	6
 573 006f 2C       		.byte	44
 574 0070 CC       		.byte	-52
 575 0071 06       		.byte	6
 576 0072 3F       		.byte	63
 577 0073 30       		.byte	48
ARM GAS  /tmp/cctTYZrL.s 			page 15


 578 0074 06       		.byte	6
 579 0075 2D       		.byte	45
 580 0076 88       		.byte	-120
 581 0077 05       		.byte	5
 582 0078 40       		.byte	64
 583 0079 68       		.byte	104
 584 007a 06       		.byte	6
 585 007b 5F       		.byte	95
 586 007c 34       		.byte	52
 587 007d 06       		.byte	6
 588 007e 2B       		.byte	43
 589 007f 50       		.byte	80
 590 0080 05       		.byte	5
 591 0081 3B       		.byte	59
 592 0082 A8       		.byte	-88
 593 0083 06       		.byte	6
 594 0084 26       		.byte	38
 595 0085 40       		.byte	64
 596 0086 05       		.byte	5
 597 0087 2F       		.byte	47
 598 0088 90       		.byte	-112
 599 0089 05       		.byte	5
 600 008a 28       		.byte	40
 601 008b B0       		.byte	-80
 602 008c 05       		.byte	5
 603 008d 29       		.byte	41
 604 008e B4       		.byte	-76
 605 008f 06       		.byte	6
 606              		.section	.rodata.h,"a",%progbits
 607              		.align	2
 608              		.set	.LANCHOR1,. + 0
 611              	h:
 612 0000 30       		.byte	48
 613 0001 31       		.byte	49
 614 0002 32       		.byte	50
 615 0003 33       		.byte	51
 616 0004 34       		.byte	52
 617 0005 35       		.byte	53
 618 0006 36       		.byte	54
 619 0007 37       		.byte	55
 620 0008 38       		.byte	56
 621 0009 39       		.byte	57
 622 000a 41       		.byte	65
 623 000b 42       		.byte	66
 624 000c 43       		.byte	67
 625 000d 44       		.byte	68
 626 000e 45       		.byte	69
 627 000f 46       		.byte	70
 628              		.text
 629              	.Letext0:
 630              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 631              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 632              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 633              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 634              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cctTYZrL.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 morse.c
     /tmp/cctTYZrL.s:22     .text.delay:00000000 $t
     /tmp/cctTYZrL.s:26     .text.delay:00000000 delay
     /tmp/cctTYZrL.s:70     .text.delay:00000024 $d
     /tmp/cctTYZrL.s:76     .text.morse_generate:00000000 $t
     /tmp/cctTYZrL.s:80     .text.morse_generate:00000000 morse_generate
     /tmp/cctTYZrL.s:176    .text.morse_generate:00000054 $d
     /tmp/cctTYZrL.s:185    .text.morse_string:00000000 $t
     /tmp/cctTYZrL.s:190    .text.morse_string:00000000 morse_string
     /tmp/cctTYZrL.s:236    .text.morse_string:00000024 $d
     /tmp/cctTYZrL.s:241    .text.morse_number:00000000 $t
     /tmp/cctTYZrL.s:246    .text.morse_number:00000000 morse_number
     /tmp/cctTYZrL.s:316    .text.morse_number:00000048 $d
     /tmp/cctTYZrL.s:322    .text.morse_trap:00000000 $t
     /tmp/cctTYZrL.s:327    .text.morse_trap:00000000 morse_trap
     /tmp/cctTYZrL.s:363    .text.morse_trap:00000018 $d
     /tmp/cctTYZrL.s:368    .text.morse_hex:00000000 $t
     /tmp/cctTYZrL.s:373    .text.morse_hex:00000000 morse_hex
     /tmp/cctTYZrL.s:450    .text.morse_hex:00000044 $d
     /tmp/cctTYZrL.s:461    .rodata.mrse:00000000 mrse
     /tmp/cctTYZrL.s:457    .rodata.mrse:00000000 $d
     /tmp/cctTYZrL.s:607    .rodata.h:00000000 $d
     /tmp/cctTYZrL.s:611    .rodata.h:00000000 h
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin

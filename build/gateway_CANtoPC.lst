ARM GAS  /tmp/cc0SrDBe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"gateway_CANtoPC.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.hex,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	hex:
  27              	.LFB129:
  28              		.file 1 "Ourwares/gateway_CANtoPC.c"
   1:Ourwares/gateway_CANtoPC.c **** /******************************************************************************
   2:Ourwares/gateway_CANtoPC.c **** * File Name          : gateway_CANtoPC.c
   3:Ourwares/gateway_CANtoPC.c **** * Date First Issued  : 01/19/2019
   4:Ourwares/gateway_CANtoPC.c **** * Board              : FreeRTOS/STM32CubeMX
   5:Ourwares/gateway_CANtoPC.c **** * Description        : Simplified gateway (binary) to PC (ascii/hex)
   6:Ourwares/gateway_CANtoPC.c **** *******************************************************************************/
   7:Ourwares/gateway_CANtoPC.c **** /*
   8:Ourwares/gateway_CANtoPC.c **** Implements LINK_MODE 2 (see PC_gateway_comm and USB_PC_gateway, in svn_common/trunk)
   9:Ourwares/gateway_CANtoPC.c **** and see gateway_format.txt in svn_discovery/docs/trunk/Userdocs)
  10:Ourwares/gateway_CANtoPC.c **** */
  11:Ourwares/gateway_CANtoPC.c **** #include "gateway_CANtoPC.h"
  12:Ourwares/gateway_CANtoPC.c **** 
  13:Ourwares/gateway_CANtoPC.c **** static uint8_t seq = 0; // Running sequence number for checking for missing CAN msgs
  14:Ourwares/gateway_CANtoPC.c **** 
  15:Ourwares/gateway_CANtoPC.c **** /* **************************************************************************************
  16:Ourwares/gateway_CANtoPC.c ****  * static char* hex(char *p, u8 c)	// Convert 'c' to hex, placing in output *p.
  17:Ourwares/gateway_CANtoPC.c ****  * ************************************************************************************** */
  18:Ourwares/gateway_CANtoPC.c **** /* bin to ascii lookup table */
  19:Ourwares/gateway_CANtoPC.c **** static const char h[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
  20:Ourwares/gateway_CANtoPC.c **** static uint8_t* hex(uint8_t *p, uint8_t c)	// Convert 'c' to hex, placing in output *p.
  21:Ourwares/gateway_CANtoPC.c **** {
  29              		.loc 1 21 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc0SrDBe.s 			page 2


  38              		.cfi_offset 4, -4
  39              	.LVL1:
  22:Ourwares/gateway_CANtoPC.c **** 		*p++ = h[((c >> 4) & 0x0f)];	// Hi order nibble
  40              		.loc 1 22 0
  41 0002 0B09     		lsrs	r3, r1, #4
  42 0004 064A     		ldr	r2, .L3
  43 0006 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
  44 0008 0346     		mov	r3, r0
  45 000a 03F8024B 		strb	r4, [r3], #2
  46              	.LVL2:
  23:Ourwares/gateway_CANtoPC.c **** 		*p++ = h[(c & 0x0f)];		// Lo order nibble
  47              		.loc 1 23 0
  48 000e 01F00F01 		and	r1, r1, #15
  49              	.LVL3:
  50 0012 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
  51 0014 4270     		strb	r2, [r0, #1]
  24:Ourwares/gateway_CANtoPC.c **** 		return p;			// Return new output pointer position
  25:Ourwares/gateway_CANtoPC.c **** }
  52              		.loc 1 25 0
  53 0016 1846     		mov	r0, r3
  54 0018 5DF8044B 		ldr	r4, [sp], #4
  55              	.LCFI1:
  56              		.cfi_restore 4
  57              		.cfi_def_cfa_offset 0
  58 001c 7047     		bx	lr
  59              	.L4:
  60 001e 00BF     		.align	2
  61              	.L3:
  62 0020 00000000 		.word	.LANCHOR0
  63              		.cfi_endproc
  64              	.LFE129:
  66              		.section	.text.gateway_CANtoPC,"ax",%progbits
  67              		.align	2
  68              		.global	gateway_CANtoPC
  69              		.thumb
  70              		.thumb_func
  72              	gateway_CANtoPC:
  73              	.LFB130:
  26:Ourwares/gateway_CANtoPC.c **** /* **************************************************************************************
  27:Ourwares/gateway_CANtoPC.c ****  * void gateway_CANtoPC(struct SERIALSENDTASKBCB** ppbcb, struct CANRCVBUF* pcan);
  28:Ourwares/gateway_CANtoPC.c ****  * @brief	: Convert CAN msg into ascii/hex in a buffer for SerialTaskSend
  29:Ourwares/gateway_CANtoPC.c ****  * @param	: pycb = pointer to poiner to buffer control block w buffer and uart handle
  30:Ourwares/gateway_CANtoPC.c ****  * @param	: pcan = CAN msg
  31:Ourwares/gateway_CANtoPC.c ****  * @return	: 
  32:Ourwares/gateway_CANtoPC.c ****  * ************************************************************************************** */
  33:Ourwares/gateway_CANtoPC.c **** void gateway_CANtoPC(struct SERIALSENDTASKBCB** ppbcb, struct CANRCVBUF* pcan)
  34:Ourwares/gateway_CANtoPC.c **** {
  74              		.loc 1 34 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL4:
  79 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 24
  82              		.cfi_offset 3, -24
  83              		.cfi_offset 4, -20
ARM GAS  /tmp/cc0SrDBe.s 			page 3


  84              		.cfi_offset 5, -16
  85              		.cfi_offset 6, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 0E46     		mov	r6, r1
  35:Ourwares/gateway_CANtoPC.c **** 	struct SERIALSENDTASKBCB* pbcb = *ppbcb;
  89              		.loc 1 35 0
  90 0004 0768     		ldr	r7, [r0]
  91              	.LVL5:
  36:Ourwares/gateway_CANtoPC.c **** 	int i;
  37:Ourwares/gateway_CANtoPC.c **** 	uint32_t x = CHECKSUM_INITIAL;
  38:Ourwares/gateway_CANtoPC.c **** 	uint8_t* pout = pbcb->pbuf; // Pointer into output buffer
  39:Ourwares/gateway_CANtoPC.c **** 
  40:Ourwares/gateway_CANtoPC.c **** 	/* Convert sequence number */
  41:Ourwares/gateway_CANtoPC.c **** 	x += seq;	// Checksum;
  92              		.loc 1 41 0
  93 0006 244D     		ldr	r5, .L10
  94 0008 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
  95              	.LVL6:
  96 000a 01F52544 		add	r4, r1, #42240
  97 000e A534     		adds	r4, r4, #165
  98              	.LVL7:
  42:Ourwares/gateway_CANtoPC.c **** 	pout = hex(pout,seq);
  99              		.loc 1 42 0
 100 0010 F868     		ldr	r0, [r7, #12]
 101              	.LVL8:
 102 0012 FFF7FEFF 		bl	hex
 103              	.LVL9:
  43:Ourwares/gateway_CANtoPC.c **** 	seq += 1;
 104              		.loc 1 43 0
 105 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 106 0018 0133     		adds	r3, r3, #1
 107 001a 2B70     		strb	r3, [r5]
  44:Ourwares/gateway_CANtoPC.c **** 
  45:Ourwares/gateway_CANtoPC.c **** 	/* Convert CAN ID */
  46:Ourwares/gateway_CANtoPC.c **** 	x += (pcan->id >>  0) & 0xff; pout = hex(pout, (pcan->id >>  0));
 108              		.loc 1 46 0
 109 001c 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 110 001e 0C44     		add	r4, r4, r1
 111              	.LVL10:
 112 0020 FFF7FEFF 		bl	hex
 113              	.LVL11:
  47:Ourwares/gateway_CANtoPC.c **** 	x += (pcan->id >>  8) & 0xff; pout = hex(pout, (pcan->id >>  8));
 114              		.loc 1 47 0
 115 0024 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 116 0026 0C44     		add	r4, r4, r1
 117              	.LVL12:
 118 0028 FFF7FEFF 		bl	hex
 119              	.LVL13:
  48:Ourwares/gateway_CANtoPC.c **** 	x += (pcan->id >> 16) & 0xff; pout = hex(pout, (pcan->id >> 16));
 120              		.loc 1 48 0
 121 002c B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 122 002e 6518     		adds	r5, r4, r1
 123              	.LVL14:
 124 0030 FFF7FEFF 		bl	hex
 125              	.LVL15:
  49:Ourwares/gateway_CANtoPC.c **** 	x += (pcan->id >> 24) & 0xff; pout = hex(pout, (pcan->id >> 24));
ARM GAS  /tmp/cc0SrDBe.s 			page 4


 126              		.loc 1 49 0
 127 0034 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 128 0036 6C18     		adds	r4, r5, r1
 129              	.LVL16:
 130 0038 FFF7FEFF 		bl	hex
 131              	.LVL17:
  50:Ourwares/gateway_CANtoPC.c **** 
  51:Ourwares/gateway_CANtoPC.c **** 	/* Convert DLC */
  52:Ourwares/gateway_CANtoPC.c **** 	x += pcan->dlc & 0xf; pout = hex(pout, pcan->dlc);
 132              		.loc 1 52 0
 133 003c 7168     		ldr	r1, [r6, #4]
 134 003e 01F00F05 		and	r5, r1, #15
 135 0042 2544     		add	r5, r5, r4
 136              	.LVL18:
 137 0044 C9B2     		uxtb	r1, r1
 138 0046 FFF7FEFF 		bl	hex
 139              	.LVL19:
  53:Ourwares/gateway_CANtoPC.c **** 
  54:Ourwares/gateway_CANtoPC.c **** 	/* Convert payload */
  55:Ourwares/gateway_CANtoPC.c **** 	if ((pcan->dlc & 0xf) > 8) pcan->dlc = 8; // Prevent bogus runaway
 140              		.loc 1 55 0
 141 004a 7368     		ldr	r3, [r6, #4]
 142 004c 03F00F03 		and	r3, r3, #15
 143 0050 082B     		cmp	r3, #8
 144 0052 01D9     		bls	.L6
 145              		.loc 1 55 0 is_stmt 0 discriminator 1
 146 0054 0823     		movs	r3, #8
 147 0056 7360     		str	r3, [r6, #4]
 148              	.L6:
  34:Ourwares/gateway_CANtoPC.c **** 	struct SERIALSENDTASKBCB* pbcb = *ppbcb;
 149              		.loc 1 34 0 is_stmt 1 discriminator 1
 150 0058 0024     		movs	r4, #0
 151 005a 05E0     		b	.L7
 152              	.LVL20:
 153              	.L8:
  56:Ourwares/gateway_CANtoPC.c **** 	for (i = 0; i < pcan->dlc; i++)
  57:Ourwares/gateway_CANtoPC.c **** 	{
  58:Ourwares/gateway_CANtoPC.c **** 		x += pcan->cd.uc[i];
 154              		.loc 1 58 0 discriminator 3
 155 005c 3319     		adds	r3, r6, r4
 156 005e 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 157 0060 0D44     		add	r5, r5, r1
 158              	.LVL21:
  59:Ourwares/gateway_CANtoPC.c **** 		pout = hex(pout, pcan->cd.uc[i]);
 159              		.loc 1 59 0 discriminator 3
 160 0062 FFF7FEFF 		bl	hex
 161              	.LVL22:
  56:Ourwares/gateway_CANtoPC.c **** 	for (i = 0; i < pcan->dlc; i++)
 162              		.loc 1 56 0 discriminator 3
 163 0066 0134     		adds	r4, r4, #1
 164              	.LVL23:
 165              	.L7:
  56:Ourwares/gateway_CANtoPC.c **** 	for (i = 0; i < pcan->dlc; i++)
 166              		.loc 1 56 0 is_stmt 0 discriminator 1
 167 0068 7368     		ldr	r3, [r6, #4]
 168 006a A342     		cmp	r3, r4
 169 006c F6D8     		bhi	.L8
ARM GAS  /tmp/cc0SrDBe.s 			page 5


  60:Ourwares/gateway_CANtoPC.c **** 	}
  61:Ourwares/gateway_CANtoPC.c **** 
  62:Ourwares/gateway_CANtoPC.c **** 	/* Complete checksum */
  63:Ourwares/gateway_CANtoPC.c **** 	x += (x >> 16);	// Add carries into high half word
 170              		.loc 1 63 0 is_stmt 1
 171 006e 05EB1541 		add	r1, r5, r5, lsr #16
 172              	.LVL24:
  64:Ourwares/gateway_CANtoPC.c **** 	x += (x >> 16);	// Add carry if previous add generated a carry
 173              		.loc 1 64 0
 174 0072 01EB1141 		add	r1, r1, r1, lsr #16
 175              	.LVL25:
  65:Ourwares/gateway_CANtoPC.c **** 	x += (x >> 8);  // Add high byte of low half word
 176              		.loc 1 65 0
 177 0076 01EB1121 		add	r1, r1, r1, lsr #8
 178              	.LVL26:
  66:Ourwares/gateway_CANtoPC.c **** 	x += (x >> 8);  // Add carry if previous add generated a carry
 179              		.loc 1 66 0
 180 007a 01EB1121 		add	r1, r1, r1, lsr #8
 181              	.LVL27:
  67:Ourwares/gateway_CANtoPC.c **** 
  68:Ourwares/gateway_CANtoPC.c **** 	/* Convert checksum */
  69:Ourwares/gateway_CANtoPC.c **** 	pout = hex(pout, x);
 182              		.loc 1 69 0
 183 007e C9B2     		uxtb	r1, r1
 184              	.LVL28:
 185 0080 FFF7FEFF 		bl	hex
 186              	.LVL29:
  70:Ourwares/gateway_CANtoPC.c **** 
  71:Ourwares/gateway_CANtoPC.c **** 	/* Frame terminator */
  72:Ourwares/gateway_CANtoPC.c **** 	*pout++ = ASCIIMSGTERMINATOR;
 187              		.loc 1 72 0
 188 0084 431C     		adds	r3, r0, #1
 189              	.LVL30:
 190 0086 0A22     		movs	r2, #10
 191 0088 0270     		strb	r2, [r0]
  73:Ourwares/gateway_CANtoPC.c **** 	
  74:Ourwares/gateway_CANtoPC.c **** 	/* String termination, jic */
  75:Ourwares/gateway_CANtoPC.c **** 	*pout = 0; // Note: no pointer advance
 192              		.loc 1 75 0
 193 008a 0022     		movs	r2, #0
 194 008c 4270     		strb	r2, [r0, #1]
  76:Ourwares/gateway_CANtoPC.c **** 
  77:Ourwares/gateway_CANtoPC.c **** 	/* Set byte count in output buffer */
  78:Ourwares/gateway_CANtoPC.c **** 	pbcb->size = pout - pbcb->pbuf;
 195              		.loc 1 78 0
 196 008e FA68     		ldr	r2, [r7, #12]
 197 0090 9B1A     		subs	r3, r3, r2
 198              	.LVL31:
 199 0092 3B82     		strh	r3, [r7, #16]	@ movhi
 200 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 201              	.LVL32:
 202              	.L11:
 203 0096 00BF     		.align	2
 204              	.L10:
 205 0098 00000000 		.word	.LANCHOR1
 206              		.cfi_endproc
 207              	.LFE130:
ARM GAS  /tmp/cc0SrDBe.s 			page 6


 209              		.section	.bss.seq,"aw",%nobits
 210              		.set	.LANCHOR1,. + 0
 213              	seq:
 214 0000 00       		.space	1
 215              		.section	.rodata.h,"a",%progbits
 216              		.align	2
 217              		.set	.LANCHOR0,. + 0
 220              	h:
 221 0000 30       		.byte	48
 222 0001 31       		.byte	49
 223 0002 32       		.byte	50
 224 0003 33       		.byte	51
 225 0004 34       		.byte	52
 226 0005 35       		.byte	53
 227 0006 36       		.byte	54
 228 0007 37       		.byte	55
 229 0008 38       		.byte	56
 230 0009 39       		.byte	57
 231 000a 41       		.byte	65
 232 000b 42       		.byte	66
 233 000c 43       		.byte	67
 234 000d 44       		.byte	68
 235 000e 45       		.byte	69
 236 000f 46       		.byte	70
 237              		.text
 238              	.Letext0:
 239              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 240              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 241              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 242              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 243              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 244              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 245              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 246              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 247              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 248              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 249              		.file 12 "Ourwares/SerialTaskSend.h"
 250              		.file 13 "Ourwares/common_misc.h"
 251              		.file 14 "Ourwares/common_can.h"
 252              		.file 15 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cc0SrDBe.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 gateway_CANtoPC.c
     /tmp/cc0SrDBe.s:22     .text.hex:00000000 $t
     /tmp/cc0SrDBe.s:26     .text.hex:00000000 hex
     /tmp/cc0SrDBe.s:62     .text.hex:00000020 $d
     /tmp/cc0SrDBe.s:67     .text.gateway_CANtoPC:00000000 $t
     /tmp/cc0SrDBe.s:72     .text.gateway_CANtoPC:00000000 gateway_CANtoPC
     /tmp/cc0SrDBe.s:205    .text.gateway_CANtoPC:00000098 $d
     /tmp/cc0SrDBe.s:213    .bss.seq:00000000 seq
     /tmp/cc0SrDBe.s:214    .bss.seq:00000000 $d
     /tmp/cc0SrDBe.s:216    .rodata.h:00000000 $d
     /tmp/cc0SrDBe.s:220    .rodata.h:00000000 h
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

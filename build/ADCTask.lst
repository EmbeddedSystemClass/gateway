ARM GAS  /tmp/cclLoxqG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"ADCTask.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.StartADCTask,"ax",%progbits
  22              		.align	2
  23              		.global	StartADCTask
  24              		.thumb
  25              		.thumb_func
  27              	StartADCTask:
  28              	.LFB130:
  29              		.file 1 "Ourwares/ADCTask.c"
   1:Ourwares/ADCTask.c **** /******************************************************************************
   2:Ourwares/ADCTask.c **** * File Name          : ADCTask.c
   3:Ourwares/ADCTask.c **** * Date First Issued  : 02/01/2019
   4:Ourwares/ADCTask.c **** * Description        : Processing ADC readings after ADC/DMA issues interrupt
   5:Ourwares/ADCTask.c **** *******************************************************************************/
   6:Ourwares/ADCTask.c **** 
   7:Ourwares/ADCTask.c **** #include "FreeRTOS.h"
   8:Ourwares/ADCTask.c **** #include "task.h"
   9:Ourwares/ADCTask.c **** #include "cmsis_os.h"
  10:Ourwares/ADCTask.c **** #include "malloc.h"
  11:Ourwares/ADCTask.c **** 
  12:Ourwares/ADCTask.c **** #include "ADCTask.h"
  13:Ourwares/ADCTask.c **** #include "adctask.h"
  14:Ourwares/ADCTask.c **** #include "morse.h"
  15:Ourwares/ADCTask.c **** #include "adcfastsum16.h"
  16:Ourwares/ADCTask.c **** #include "adcparams.h"
  17:Ourwares/ADCTask.c **** 
  18:Ourwares/ADCTask.c **** extern ADC_HandleTypeDef hadc1;
  19:Ourwares/ADCTask.c **** 
  20:Ourwares/ADCTask.c **** void StartADCTask(void const * argument);
  21:Ourwares/ADCTask.c **** 
  22:Ourwares/ADCTask.c **** osThreadId ADCTaskHandle;
  23:Ourwares/ADCTask.c **** 
  24:Ourwares/ADCTask.c **** /* *************************************************************************
  25:Ourwares/ADCTask.c ****  * osThreadId xADCTaskCreate(uint32_t taskpriority);
  26:Ourwares/ADCTask.c ****  * @brief	: Create task; task handle created is global for all to enjoy!
  27:Ourwares/ADCTask.c ****  * @param	: taskpriority = Task priority (just as it says!)
  28:Ourwares/ADCTask.c ****  * @return	: ADCTaskHandle
  29:Ourwares/ADCTask.c ****  * *************************************************************************/
ARM GAS  /tmp/cclLoxqG.s 			page 2


  30:Ourwares/ADCTask.c **** osThreadId xADCTaskCreate(uint32_t taskpriority)
  31:Ourwares/ADCTask.c **** {
  32:Ourwares/ADCTask.c ****  	osThreadDef(ADCTask, StartADCTask, osPriorityNormal, 0, 128);
  33:Ourwares/ADCTask.c **** 	ADCTaskHandle = osThreadCreate(osThread(ADCTask), NULL);
  34:Ourwares/ADCTask.c **** 	vTaskPrioritySet( ADCTaskHandle, taskpriority );
  35:Ourwares/ADCTask.c **** 	return ADCTaskHandle;
  36:Ourwares/ADCTask.c **** 
  37:Ourwares/ADCTask.c **** }
  38:Ourwares/ADCTask.c **** /* *************************************************************************
  39:Ourwares/ADCTask.c ****  * void StartADCTask(void const * argument);
  40:Ourwares/ADCTask.c ****  *	@brief	: Task startup
  41:Ourwares/ADCTask.c ****  * *************************************************************************/
  42:Ourwares/ADCTask.c **** void StartADCTask(void const * argument)
  43:Ourwares/ADCTask.c **** {
  30              		.loc 1 43 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  42 0002 82B0     		sub	sp, sp, #8
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 24
  44:Ourwares/ADCTask.c **** 	#define TSK02BIT02	(1 << 0)  // Task notification bit for ADC dma 1st 1/2 (adctask.c)
  45:Ourwares/ADCTask.c **** 	#define TSK02BIT03	(1 << 1)  // Task notification bit for ADC dma end (adctask.c)
  46:Ourwares/ADCTask.c **** 
  47:Ourwares/ADCTask.c **** 	uint16_t* pdma;
  48:Ourwares/ADCTask.c **** 
  49:Ourwares/ADCTask.c **** 	/* A notification copies the internal notification word to this. */
  50:Ourwares/ADCTask.c **** 	uint32_t noteval = 0;    // Receives notification word upon an API notify
  45              		.loc 1 50 0
  46 0004 02AB     		add	r3, sp, #8
  47 0006 0022     		movs	r2, #0
  48 0008 43F8042D 		str	r2, [r3, #-4]!
  49              	.LVL1:
  51:Ourwares/ADCTask.c **** 
  52:Ourwares/ADCTask.c **** 	/* notification bits processed after a 'Wait. */
  53:Ourwares/ADCTask.c **** 	uint32_t noteused = 0;
  54:Ourwares/ADCTask.c **** 
  55:Ourwares/ADCTask.c **** 	/* Get buffers, "our" control block, and start ADC/DMA running. */
  56:Ourwares/ADCTask.c **** 	struct ADCDMATSKBLK* pblk = adctask_init(&hadc1,TSK02BIT02,TSK02BIT03,&noteval);
  50              		.loc 1 56 0
  51 000c 0222     		movs	r2, #2
  52 000e 0121     		movs	r1, #1
  53 0010 1348     		ldr	r0, .L7
  54              	.LVL2:
  55 0012 FFF7FEFF 		bl	adctask_init
  56              	.LVL3:
  57:Ourwares/ADCTask.c **** 	if (pblk == NULL) {morse_trap(15);}
  57              		.loc 1 57 0
  58 0016 0646     		mov	r6, r0
ARM GAS  /tmp/cclLoxqG.s 			page 3


  59 0018 10B9     		cbnz	r0, .L2
  60              		.loc 1 57 0 is_stmt 0 discriminator 1
  61 001a 0F20     		movs	r0, #15
  62              	.LVL4:
  63 001c FFF7FEFF 		bl	morse_trap
  64              	.LVL5:
  65              	.L2:
  43:Ourwares/ADCTask.c **** 	#define TSK02BIT02	(1 << 0)  // Task notification bit for ADC dma 1st 1/2 (adctask.c)
  66              		.loc 1 43 0 is_stmt 1
  67 0020 0024     		movs	r4, #0
  68              	.LVL6:
  69              	.L5:
  58:Ourwares/ADCTask.c **** 
  59:Ourwares/ADCTask.c ****   /* Infinite loop */
  60:Ourwares/ADCTask.c ****   for(;;)
  61:Ourwares/ADCTask.c ****   {
  62:Ourwares/ADCTask.c **** 		/* Wait for DMA interrupt */
  63:Ourwares/ADCTask.c **** 		xTaskNotifyWait(noteused, 0, &noteval, portMAX_DELAY);
  70              		.loc 1 63 0
  71 0022 4FF0FF33 		mov	r3, #-1
  72 0026 01AA     		add	r2, sp, #4
  73 0028 0021     		movs	r1, #0
  74 002a 2046     		mov	r0, r4
  75 002c FFF7FEFF 		bl	xTaskNotifyWait
  76              	.LVL7:
  64:Ourwares/ADCTask.c **** 		noteused = 0;	// Accumulate bits in 'noteval' processed.
  65:Ourwares/ADCTask.c **** 
  66:Ourwares/ADCTask.c **** 		/* We handled one, or both, noteval bits */
  67:Ourwares/ADCTask.c **** 		noteused |= (pblk->notebit1 | pblk->notebit2);
  77              		.loc 1 67 0
  78 0030 B468     		ldr	r4, [r6, #8]
  79 0032 F368     		ldr	r3, [r6, #12]
  80 0034 1C43     		orrs	r4, r4, r3
  81              	.LVL8:
  68:Ourwares/ADCTask.c **** 
  69:Ourwares/ADCTask.c **** 		if (noteval & TSK02BIT02)
  82              		.loc 1 69 0
  83 0036 019B     		ldr	r3, [sp, #4]
  84 0038 13F0010F 		tst	r3, #1
  85 003c 02D0     		beq	.L3
  70:Ourwares/ADCTask.c **** 		{
  71:Ourwares/ADCTask.c **** 			pdma = adc1dmatskblk[0].pdma1;
  86              		.loc 1 71 0
  87 003e 094B     		ldr	r3, .L7+4
  88 0040 5969     		ldr	r1, [r3, #20]
  89              	.LVL9:
  90 0042 01E0     		b	.L4
  91              	.LVL10:
  92              	.L3:
  72:Ourwares/ADCTask.c **** 		}
  73:Ourwares/ADCTask.c **** 		else
  74:Ourwares/ADCTask.c **** 		{
  75:Ourwares/ADCTask.c **** 			pdma = adc1dmatskblk[0].pdma2;
  93              		.loc 1 75 0
  94 0044 074B     		ldr	r3, .L7+4
  95 0046 9969     		ldr	r1, [r3, #24]
  96              	.LVL11:
ARM GAS  /tmp/cclLoxqG.s 			page 4


  97              	.L4:
  76:Ourwares/ADCTask.c **** 		}
  77:Ourwares/ADCTask.c **** 
  78:Ourwares/ADCTask.c **** 		/* Sum the readings 1/2 of DMA buffer to an array. */
  79:Ourwares/ADCTask.c **** 		adcfastsum16(&adc1data.adcs1sum[0], pdma);
  98              		.loc 1 79 0
  99 0048 074D     		ldr	r5, .L7+8
 100 004a 2846     		mov	r0, r5
 101 004c FFF7FEFF 		bl	adcfastsum16
 102              	.LVL12:
  80:Ourwares/ADCTask.c **** 
  81:Ourwares/ADCTask.c **** 		/* Compute internal reference and temperature adjustments. */
  82:Ourwares/ADCTask.c **** 		adcparams_internal(&adcommon, &adc1data.adcs1sum[ADC1IDX_INTERNALTEMP],&adc1data.adcs1sum[ADC1IDX
 103              		.loc 1 82 0
 104 0050 05F11202 		add	r2, r5, #18
 105 0054 05F11001 		add	r1, r5, #16
 106 0058 0448     		ldr	r0, .L7+12
 107 005a FFF7FEFF 		bl	adcparams_internal
 108              	.LVL13:
  83:Ourwares/ADCTask.c **** 
  84:Ourwares/ADCTask.c ****   }
 109              		.loc 1 84 0
 110 005e E0E7     		b	.L5
 111              	.L8:
 112              		.align	2
 113              	.L7:
 114 0060 00000000 		.word	hadc1
 115 0064 00000000 		.word	adc1dmatskblk
 116 0068 2C000000 		.word	adc1data+44
 117 006c 00000000 		.word	adcommon
 118              		.cfi_endproc
 119              	.LFE130:
 121              		.section	.text.xADCTaskCreate,"ax",%progbits
 122              		.align	2
 123              		.global	xADCTaskCreate
 124              		.thumb
 125              		.thumb_func
 127              	xADCTaskCreate:
 128              	.LFB129:
  31:Ourwares/ADCTask.c ****  	osThreadDef(ADCTask, StartADCTask, osPriorityNormal, 0, 128);
 129              		.loc 1 31 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 32
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              	.LVL14:
 134 0000 70B5     		push	{r4, r5, r6, lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 6, -8
 140              		.cfi_offset 14, -4
 141 0002 88B0     		sub	sp, sp, #32
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 48
 144 0004 0646     		mov	r6, r0
  32:Ourwares/ADCTask.c **** 	ADCTaskHandle = osThreadCreate(osThread(ADCTask), NULL);
ARM GAS  /tmp/cclLoxqG.s 			page 5


 145              		.loc 1 32 0
 146 0006 01AC     		add	r4, sp, #4
 147 0008 094D     		ldr	r5, .L11
 148 000a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 149              	.LVL15:
 150 000c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 151 000e 95E80700 		ldmia	r5, {r0, r1, r2}
 152 0012 84E80700 		stmia	r4, {r0, r1, r2}
  33:Ourwares/ADCTask.c **** 	vTaskPrioritySet( ADCTaskHandle, taskpriority );
 153              		.loc 1 33 0
 154 0016 0021     		movs	r1, #0
 155 0018 01A8     		add	r0, sp, #4
 156 001a FFF7FEFF 		bl	osThreadCreate
 157              	.LVL16:
 158 001e 054C     		ldr	r4, .L11+4
 159 0020 2060     		str	r0, [r4]
  34:Ourwares/ADCTask.c **** 	return ADCTaskHandle;
 160              		.loc 1 34 0
 161 0022 3146     		mov	r1, r6
 162 0024 FFF7FEFF 		bl	vTaskPrioritySet
 163              	.LVL17:
  37:Ourwares/ADCTask.c **** /* *************************************************************************
 164              		.loc 1 37 0
 165 0028 2068     		ldr	r0, [r4]
 166 002a 08B0     		add	sp, sp, #32
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 16
 169              		@ sp needed
 170 002c 70BD     		pop	{r4, r5, r6, pc}
 171              	.LVL18:
 172              	.L12:
 173 002e 00BF     		.align	2
 174              	.L11:
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 00000000 		.word	ADCTaskHandle
 177              		.cfi_endproc
 178              	.LFE129:
 180              		.comm	ADCTaskHandle,4,4
 181              		.section	.rodata
 182              		.align	2
 183              		.set	.LANCHOR0,. + 0
 184              	.LC2:
 185 0000 00000000 		.word	.LC0
 186 0004 00000000 		.word	StartADCTask
 187 0008 0000     		.short	0
 188 000a 0000     		.space	2
 189 000c 00000000 		.word	0
 190 0010 80000000 		.word	128
 191 0014 00000000 		.word	0
 192 0018 00000000 		.word	0
 193              		.section	.rodata.str1.4,"aMS",%progbits,1
 194              		.align	2
 195              	.LC0:
 196 0000 41444354 		.ascii	"ADCTask\000"
 196      61736B00 
 197              		.text
 198              	.Letext0:
ARM GAS  /tmp/cclLoxqG.s 			page 6


 199              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 200              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 201              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 202              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 203              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 204              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 205              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 206              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 207              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 208              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 209              		.file 12 "Ourwares/adctask.h"
 210              		.file 13 "Ourtasks/adcparams.h"
 211              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 212              		.file 15 "Ourwares/morse.h"
 213              		.file 16 "Ourtasks/adcfastsum16.h"
ARM GAS  /tmp/cclLoxqG.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 ADCTask.c
     /tmp/cclLoxqG.s:22     .text.StartADCTask:00000000 $t
     /tmp/cclLoxqG.s:27     .text.StartADCTask:00000000 StartADCTask
     /tmp/cclLoxqG.s:114    .text.StartADCTask:00000060 $d
     /tmp/cclLoxqG.s:122    .text.xADCTaskCreate:00000000 $t
     /tmp/cclLoxqG.s:127    .text.xADCTaskCreate:00000000 xADCTaskCreate
     /tmp/cclLoxqG.s:175    .text.xADCTaskCreate:00000030 $d
                            *COM*:00000004 ADCTaskHandle
     /tmp/cclLoxqG.s:182    .rodata:00000000 $d
     /tmp/cclLoxqG.s:194    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
adctask_init
morse_trap
xTaskNotifyWait
adcfastsum16
adcparams_internal
hadc1
adc1dmatskblk
adc1data
adcommon
osThreadCreate
vTaskPrioritySet

ARM GAS  /tmp/ccIgmkkH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"adcparamsinit.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.adcparamsinit_init_common,"ax",%progbits
  22              		.align	2
  23              		.global	adcparamsinit_init_common
  24              		.thumb
  25              		.thumb_func
  27              	adcparamsinit_init_common:
  28              	.LFB0:
  29              		.file 1 "Ourtasks/adcparamsinit.c"
   1:Ourtasks/adcparamsinit.c **** /******************************************************************************
   2:Ourtasks/adcparamsinit.c **** * File Name          : adcparamsinit.c
   3:Ourtasks/adcparamsinit.c **** * Date First Issued  : 03/09/2019
   4:Ourtasks/adcparamsinit.c **** * Board              : DiscoveryF4
   5:Ourtasks/adcparamsinit.c **** * Description        : Initialization of parameters for ADC app configuration
   6:Ourtasks/adcparamsinit.c **** *******************************************************************************/
   7:Ourtasks/adcparamsinit.c **** 
   8:Ourtasks/adcparamsinit.c **** /* 
   9:Ourtasks/adcparamsinit.c **** This is where hard-coded parameters for the ADC are entered.
  10:Ourtasks/adcparamsinit.c **** 
  11:Ourtasks/adcparamsinit.c **** Later, this may be replaced with a "copy" of the flat file in high flash, generated
  12:Ourtasks/adcparamsinit.c **** by the java program from the sql database.
  13:Ourtasks/adcparamsinit.c **** */
  14:Ourtasks/adcparamsinit.c **** 
  15:Ourtasks/adcparamsinit.c **** #include "adcparamsinit.h"
  16:Ourtasks/adcparamsinit.c **** #include "adcparams.h"
  17:Ourtasks/adcparamsinit.c **** 
  18:Ourtasks/adcparamsinit.c **** /* *************************************************************************
  19:Ourtasks/adcparamsinit.c ****  * void adcparamsinit_init_common(struct ADCCALCOMMON* padccommon);
  20:Ourtasks/adcparamsinit.c ****  *	@brief	: Initialize struct with parameters common to all ADC for this =>board<=
  21:Ourtasks/adcparamsinit.c ****  * @param	: padccommon = pointer to struct holding parameters
  22:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
  23:Ourtasks/adcparamsinit.c **** void adcparamsinit_init_common(struct ADCCALCOMMON* padccommon)
  24:Ourtasks/adcparamsinit.c **** {
  30              		.loc 1 24 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccIgmkkH.s 			page 2


  35              	.LVL0:
  36 0000 10B4     		push	{r4}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 4, -4
  25:Ourtasks/adcparamsinit.c **** 
  26:Ourtasks/adcparamsinit.c **** 	padccommon->sensor5vcal = 0.54;	// 5v->Vdd divide ratio
  40              		.loc 1 26 0
  41 0002 214B     		ldr	r3, .L3
  42 0004 0360     		str	r3, [r0]	@ float
  27:Ourtasks/adcparamsinit.c **** 
  28:Ourtasks/adcparamsinit.c **** 	padccommon->ts_vref = *PVREFINT_CAL; // Factory calibration
  43              		.loc 1 28 0
  44 0006 214B     		ldr	r3, .L3+4
  45 0008 1B88     		ldrh	r3, [r3]
  46 000a C382     		strh	r3, [r0, #22]	@ movhi
  29:Ourtasks/adcparamsinit.c **** 	padccommon->tcoef   = 30E-6; // 30 typ, 50 max, (ppm/deg C)
  47              		.loc 1 29 0
  48 000c 204B     		ldr	r3, .L3+8
  49 000e 8360     		str	r3, [r0, #8]	@ float
  30:Ourtasks/adcparamsinit.c **** 
  31:Ourtasks/adcparamsinit.c **** 	padccommon->ts_cal1      = (float)(*PTS_CAL1) * (float)ADC1DMANUMSEQ; // Factory calibration
  50              		.loc 1 31 0
  51 0010 204A     		ldr	r2, .L3+12
  52 0012 1388     		ldrh	r3, [r2]
  53 0014 07EE103A 		vmov	s14, r3	@ int
  54 0018 B8EE477A 		vcvt.f32.u32	s14, s14
  55 001c F3EE006A 		vmov.f32	s13, #1.6e+1
  56 0020 27EE267A 		vmul.f32	s14, s14, s13
  57 0024 80ED067A 		vstr.32	s14, [r0, #24]
  32:Ourtasks/adcparamsinit.c **** 	padccommon->ts_cal2      = *PTS_CAL2; // Factory calibration
  58              		.loc 1 32 0
  59 0028 1B49     		ldr	r1, .L3+16
  60 002a 0B88     		ldrh	r3, [r1]
  61 002c 07EE103A 		vmov	s14, r3	@ int
  62 0030 B8EE477A 		vcvt.f32.u32	s14, s14
  63 0034 80ED077A 		vstr.32	s14, [r0, #28]
  33:Ourtasks/adcparamsinit.c **** 	padccommon->ts_caldiff   = *PTS_CAL2 - *PTS_CAL1; // Pre-compute
  64              		.loc 1 33 0
  65 0038 0B88     		ldrh	r3, [r1]
  66 003a 1488     		ldrh	r4, [r2]
  67 003c 1B1B     		subs	r3, r3, r4
  68 003e 07EE903A 		vmov	s15, r3	@ int
  69 0042 F8EEE77A 		vcvt.f32.s32	s15, s15
  70 0046 C0ED087A 		vstr.32	s15, [r0, #32]
  34:Ourtasks/adcparamsinit.c **** 	padccommon->ts_80caldiff = (80.0 / (padccommon->ts_caldiff *(float)ADC1DMANUMSEQ)); // Pre-compute
  71              		.loc 1 34 0
  72 004a 67EEA67A 		vmul.f32	s15, s15, s13
  73 004e DFED136A 		vldr.32	s13, .L3+20
  74 0052 86EEA77A 		vdiv.f32	s14, s13, s15
  75 0056 80ED097A 		vstr.32	s14, [r0, #36]
  35:Ourtasks/adcparamsinit.c **** 
  36:Ourtasks/adcparamsinit.c **** 	padccommon->uicaldiff    = *PTS_CAL2 - *PTS_CAL1; // Pre-compute
  76              		.loc 1 36 0
  77 005a 0B88     		ldrh	r3, [r1]
  78 005c 1188     		ldrh	r1, [r2]
  79 005e 5B1A     		subs	r3, r3, r1
ARM GAS  /tmp/ccIgmkkH.s 			page 3


  80 0060 C363     		str	r3, [r0, #60]
  37:Ourtasks/adcparamsinit.c **** 	padccommon->ll_80caldiff = (80 * SCALE1) /(padccommon->uicaldiff);
  81              		.loc 1 37 0
  82 0062 4FF4A001 		mov	r1, #5242880
  83 0066 B1FBF3F3 		udiv	r3, r1, r3
  84 006a 0364     		str	r3, [r0, #64]
  85 006c 0023     		movs	r3, #0
  86 006e 4364     		str	r3, [r0, #68]
  38:Ourtasks/adcparamsinit.c **** 	padccommon->ui_cal1      =	(*PTS_CAL1) * ADC1DMANUMSEQ;
  87              		.loc 1 38 0
  88 0070 1388     		ldrh	r3, [r2]
  89 0072 1B01     		lsls	r3, r3, #4
  90 0074 8364     		str	r3, [r0, #72]
  39:Ourtasks/adcparamsinit.c **** 
  40:Ourtasks/adcparamsinit.c **** 	/* Data sheet gave these values.  May not need them. */
  41:Ourtasks/adcparamsinit.c **** 	padccommon->v25     = 0.76; // Voltage at 25 Â°C, typ
  91              		.loc 1 41 0
  92 0076 0A4B     		ldr	r3, .L3+24
  93 0078 8362     		str	r3, [r0, #40]	@ float
  42:Ourtasks/adcparamsinit.c **** 	padccommon->slope   = 2.0;  // Average slope (mv/deg C), typ
  94              		.loc 1 42 0
  95 007a 4FF08043 		mov	r3, #1073741824
  96 007e C362     		str	r3, [r0, #44]	@ float
  43:Ourtasks/adcparamsinit.c **** 
  44:Ourtasks/adcparamsinit.c **** 	return;
  45:Ourtasks/adcparamsinit.c **** }
  97              		.loc 1 45 0
  98 0080 5DF8044B 		ldr	r4, [sp], #4
  99              	.LCFI1:
 100              		.cfi_restore 4
 101              		.cfi_def_cfa_offset 0
 102 0084 7047     		bx	lr
 103              	.L4:
 104 0086 00BF     		.align	2
 105              	.L3:
 106 0088 713D0A3F 		.word	1057635697
 107 008c 2A7AFF1F 		.word	536836650
 108 0090 82A8FB37 		.word	939239554
 109 0094 2C7AFF1F 		.word	536836652
 110 0098 2E7AFF1F 		.word	536836654
 111 009c 0000A042 		.word	1117782016
 112 00a0 5C8F423F 		.word	1061326684
 113              		.cfi_endproc
 114              	.LFE0:
 116              		.section	.text.adcparamsinit_init,"ax",%progbits
 117              		.align	2
 118              		.global	adcparamsinit_init
 119              		.thumb
 120              		.thumb_func
 122              	adcparamsinit_init:
 123              	.LFB1:
  46:Ourtasks/adcparamsinit.c **** 
  47:Ourtasks/adcparamsinit.c **** /* *************************************************************************
  48:Ourtasks/adcparamsinit.c ****  * void adcparamsinit_init(struct ADCCHANNELSTUFF* pacsx);
  49:Ourtasks/adcparamsinit.c ****  *	@brief	: Load structs for compensation, calibration and filtering for ADC channels
  50:Ourtasks/adcparamsinit.c ****  * @param	: pacsx = Pointer to struct "everything" for this ADC module
  51:Ourtasks/adcparamsinit.c ****  * *************************************************************************/
ARM GAS  /tmp/ccIgmkkH.s 			page 4


  52:Ourtasks/adcparamsinit.c **** void adcparamsinit_init(struct ADCCHANNELSTUFF* pacsx)
  53:Ourtasks/adcparamsinit.c **** {
 124              		.loc 1 53 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              	.LVL1:
 129 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 20
 132              		.cfi_offset 4, -20
 133              		.cfi_offset 5, -16
 134              		.cfi_offset 6, -12
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137              	.LVL2:
  54:Ourtasks/adcparamsinit.c **** 	struct ADCCHANNELSTUFF* pacs; // Use pointer for convenience
  55:Ourtasks/adcparamsinit.c **** 
  56:Ourtasks/adcparamsinit.c **** /* IN18 - Internal voltage reference */
  57:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_INTERNALVREF; // Point to "stuff" for this ADC channel
  58:Ourtasks/adcparamsinit.c **** 
  59:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
  60:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;      // Single pole IIR
 138              		.loc 1 60 0
 139 0002 0123     		movs	r3, #1
 140 0004 80F86831 		strb	r3, [r0, #360]
  61:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_RAW; // Raw; no calibration applied
 141              		.loc 1 61 0
 142 0008 0022     		movs	r2, #0
 143 000a 80F86921 		strb	r2, [r0, #361]
  62:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_NONE; // No temperature compenstaion
 144              		.loc 1 62 0
 145 000e 80F86A21 		strb	r2, [r0, #362]
  63:Ourtasks/adcparamsinit.c **** 
  64:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
  65:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;  // Offset
 146              		.loc 1 65 0
 147 0012 0025     		movs	r5, #0
 148 0014 C0F86C51 		str	r5, [r0, #364]	@ float
  66:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 1.0;  // Scale (jic calibration not skipped)
 149              		.loc 1 66 0
 150 0018 4FF07E51 		mov	r1, #1065353216
 151 001c C0F87011 		str	r1, [r0, #368]	@ float
  67:Ourtasks/adcparamsinit.c **** 
  68:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
  69:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 2500; 	 // Initial readings skip count
 152              		.loc 1 69 0
 153 0020 40F6C414 		movw	r4, #2500
 154 0024 A0F88841 		strh	r4, [r0, #392]	@ movhi
  70:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.999;  // Filter coefficient (< 1.0)
 155              		.loc 1 70 0
 156 0028 474C     		ldr	r4, .L7
 157 002a C0F87C41 		str	r4, [r0, #380]	@ float
  71:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 158              		.loc 1 71 0
 159 002e 474C     		ldr	r4, .L7+4
 160 0030 C0F88041 		str	r4, [r0, #384]	@ float
ARM GAS  /tmp/ccIgmkkH.s 			page 5


 161              	.LVL3:
  72:Ourtasks/adcparamsinit.c **** 
  73:Ourtasks/adcparamsinit.c **** /* IN17 - Internal temperature sensor */
  74:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_INTERNALTEMP; // Point to "stuff" for this ADC channel
  75:Ourtasks/adcparamsinit.c **** 
  76:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
  77:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;      // Single pole IIR
 162              		.loc 1 77 0
 163 0034 80F84031 		strb	r3, [r0, #320]
  78:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_RAW; // Raw; no calibration applied
 164              		.loc 1 78 0
 165 0038 80F84121 		strb	r2, [r0, #321]
  79:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_NONE; // No temperature compenstaion
 166              		.loc 1 79 0
 167 003c 80F84221 		strb	r2, [r0, #322]
  80:Ourtasks/adcparamsinit.c **** 
  81:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
  82:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;  // Offset
 168              		.loc 1 82 0
 169 0040 C0F84451 		str	r5, [r0, #324]	@ float
  83:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 1.0;  // Scale (jic calibration not skipped)
 170              		.loc 1 83 0
 171 0044 C0F84811 		str	r1, [r0, #328]	@ float
  84:Ourtasks/adcparamsinit.c **** 
  85:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
  86:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 172              		.loc 1 86 0
 173 0048 0422     		movs	r2, #4
 174 004a A0F86021 		strh	r2, [r0, #352]	@ movhi
  87:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;  // Filter coefficient (< 1.0)
 175              		.loc 1 87 0
 176 004e 404C     		ldr	r4, .L7+8
 177 0050 C0F85441 		str	r4, [r0, #340]	@ float
  88:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 178              		.loc 1 88 0
 179 0054 3F49     		ldr	r1, .L7+12
 180 0056 C0F85811 		str	r1, [r0, #344]	@ float
 181              	.LVL4:
  89:Ourtasks/adcparamsinit.c **** 
  90:Ourtasks/adcparamsinit.c **** /* Hall effect lever.  5v supply. */
  91:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_HALLLEVER; // Point to "stuff" for this ADC channel
  92:Ourtasks/adcparamsinit.c **** 
  93:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
  94:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 182              		.loc 1 94 0
 183 005a 80F8C830 		strb	r3, [r0, #200]
  95:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 184              		.loc 1 95 0
 185 005e 80F8C930 		strb	r3, [r0, #201]
  96:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5A; // 5v sensor; Vref w 5v supply reading compensa
 186              		.loc 1 96 0
 187 0062 4FF0020E 		mov	lr, #2
 188 0066 80F8CAE0 		strb	lr, [r0, #202]
  97:Ourtasks/adcparamsinit.c **** 
  98:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
  99:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;     // Offset
 189              		.loc 1 99 0
ARM GAS  /tmp/ccIgmkkH.s 			page 6


 190 006a C0F8CC50 		str	r5, [r0, #204]	@ float
 100:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.5465; // Scale (volts) (3.9K - 4.7K)
 191              		.loc 1 100 0
 192 006e 3A4F     		ldr	r7, .L7+16
 193 0070 C0F8D070 		str	r7, [r0, #208]	@ float
 101:Ourtasks/adcparamsinit.c **** 
 102:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 103:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 194              		.loc 1 103 0
 195 0074 A0F8E820 		strh	r2, [r0, #232]	@ movhi
 104:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 196              		.loc 1 104 0
 197 0078 C0F8DC40 		str	r4, [r0, #220]	@ float
 105:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 198              		.loc 1 105 0
 199 007c C0F8E010 		str	r1, [r0, #224]	@ float
 200              	.LVL5:
 106:Ourtasks/adcparamsinit.c **** 
 107:Ourtasks/adcparamsinit.c **** /* Resistor pot connected to 3.3v (Vdd) supply. */
 108:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_RESISRPOT; // Point to "stuff" for this ADC channel
 109:Ourtasks/adcparamsinit.c **** 
 110:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 111:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 201              		.loc 1 111 0
 202 0080 80F8A030 		strb	r3, [r0, #160]
 112:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 203              		.loc 1 112 0
 204 0084 80F8A130 		strb	r3, [r0, #161]
 113:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT3AT; // 5v sensor; Vref abs w temp
 205              		.loc 1 113 0
 206 0088 0326     		movs	r6, #3
 207 008a 80F8A260 		strb	r6, [r0, #162]
 114:Ourtasks/adcparamsinit.c **** 
 115:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 116:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;           // Offset
 208              		.loc 1 116 0
 209 008e C0F8A450 		str	r5, [r0, #164]	@ float
 117:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = (100.0/4095); // Scale
 210              		.loc 1 117 0
 211 0092 324E     		ldr	r6, .L7+20
 212 0094 C0F8A860 		str	r6, [r0, #168]	@ float
 118:Ourtasks/adcparamsinit.c **** 
 119:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 120:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 213              		.loc 1 120 0
 214 0098 A0F8C020 		strh	r2, [r0, #192]	@ movhi
 121:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 215              		.loc 1 121 0
 216 009c C0F8B440 		str	r4, [r0, #180]	@ float
 122:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 217              		.loc 1 122 0
 218 00a0 C0F8B810 		str	r1, [r0, #184]	@ float
 219              	.LVL6:
 123:Ourtasks/adcparamsinit.c **** 
 124:Ourtasks/adcparamsinit.c **** /* Total battery current sensor. */
 125:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_CURRENTTOTAL; // Point to "stuff" for this ADC channel
 126:Ourtasks/adcparamsinit.c **** 
ARM GAS  /tmp/ccIgmkkH.s 			page 7


 127:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 128:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 220              		.loc 1 128 0
 221 00a4 80F82830 		strb	r3, [r0, #40]
 129:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 222              		.loc 1 129 0
 223 00a8 80F82930 		strb	r3, [r0, #41]
 130:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5AT; // 5v w Vref abs w temp
 224              		.loc 1 130 0
 225 00ac 80F82A20 		strb	r2, [r0, #42]
 131:Ourtasks/adcparamsinit.c **** 
 132:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 133:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 2047.5; // Offset
 226              		.loc 1 133 0
 227 00b0 2B4E     		ldr	r6, .L7+24
 228 00b2 C662     		str	r6, [r0, #44]	@ float
 134:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.1086; // Scale (200a @saturation)
 229              		.loc 1 134 0
 230 00b4 DFF8B4C0 		ldr	ip, .L7+36
 231 00b8 C0F830C0 		str	ip, [r0, #48]	@ float
 135:Ourtasks/adcparamsinit.c **** 
 136:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 137:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 232              		.loc 1 137 0
 233 00bc A0F84820 		strh	r2, [r0, #72]	@ movhi
 138:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 234              		.loc 1 138 0
 235 00c0 C463     		str	r4, [r0, #60]	@ float
 139:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 236              		.loc 1 139 0
 237 00c2 0164     		str	r1, [r0, #64]	@ float
 238              	.LVL7:
 140:Ourtasks/adcparamsinit.c **** 
 141:Ourtasks/adcparamsinit.c **** /* Current sensor: motor #1 */
 142:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_CURRENTMOTOR1; // Point to "stuff" for this ADC channel
 143:Ourtasks/adcparamsinit.c **** 
 144:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 145:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 239              		.loc 1 145 0
 240 00c4 80F85030 		strb	r3, [r0, #80]
 146:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 241              		.loc 1 146 0
 242 00c8 80F85130 		strb	r3, [r0, #81]
 147:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5AT; // 5v w Vref abs w temp
 243              		.loc 1 147 0
 244 00cc 80F85220 		strb	r2, [r0, #82]
 148:Ourtasks/adcparamsinit.c **** 
 149:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 150:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 2047.5;  // Offset
 245              		.loc 1 150 0
 246 00d0 4665     		str	r6, [r0, #84]	@ float
 151:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.3257;  // Scale (600a @saturation)
 247              		.loc 1 151 0
 248 00d2 DFF89CC0 		ldr	ip, .L7+40
 249 00d6 C0F858C0 		str	ip, [r0, #88]	@ float
 152:Ourtasks/adcparamsinit.c **** 
 153:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
ARM GAS  /tmp/ccIgmkkH.s 			page 8


 154:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 250              		.loc 1 154 0
 251 00da A0F87020 		strh	r2, [r0, #112]	@ movhi
 155:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 252              		.loc 1 155 0
 253 00de 4466     		str	r4, [r0, #100]	@ float
 156:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 254              		.loc 1 156 0
 255 00e0 8166     		str	r1, [r0, #104]	@ float
 256              	.LVL8:
 157:Ourtasks/adcparamsinit.c **** 
 158:Ourtasks/adcparamsinit.c **** /* Current sensor: motor #2 */
 159:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_CURRENTMOTOR2; // Point to "stuff" for this ADC channel
 160:Ourtasks/adcparamsinit.c **** 
 161:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 162:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 257              		.loc 1 162 0
 258 00e2 80F87830 		strb	r3, [r0, #120]
 163:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 259              		.loc 1 163 0
 260 00e6 80F87930 		strb	r3, [r0, #121]
 164:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5AT; // 5v w Vref abs w temp
 261              		.loc 1 164 0
 262 00ea 80F87A20 		strb	r2, [r0, #122]
 165:Ourtasks/adcparamsinit.c **** 
 166:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 167:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 2047.5;  // Offset
 263              		.loc 1 167 0
 264 00ee C667     		str	r6, [r0, #124]	@ float
 168:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.2172;  // Scale (400a @saturation)
 265              		.loc 1 168 0
 266 00f0 1C4E     		ldr	r6, .L7+28
 267 00f2 C0F88060 		str	r6, [r0, #128]	@ float
 169:Ourtasks/adcparamsinit.c **** 
 170:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 171:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 268              		.loc 1 171 0
 269 00f6 A0F89820 		strh	r2, [r0, #152]	@ movhi
 172:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 270              		.loc 1 172 0
 271 00fa C0F88C40 		str	r4, [r0, #140]	@ float
 173:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 272              		.loc 1 173 0
 273 00fe C0F89010 		str	r1, [r0, #144]	@ float
 274              	.LVL9:
 174:Ourtasks/adcparamsinit.c **** 
 175:Ourtasks/adcparamsinit.c **** /* +12v supply voltage */
 176:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_12VRAWSUPPLY; // Point to "stuff" for this ADC channel
 177:Ourtasks/adcparamsinit.c **** 
 178:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 179:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 275              		.loc 1 179 0
 276 0102 80F8F030 		strb	r3, [r0, #240]
 180:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 277              		.loc 1 180 0
 278 0106 80F8F130 		strb	r3, [r0, #241]
 181:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5AT; // 5v w Vref abs w temp
ARM GAS  /tmp/ccIgmkkH.s 			page 9


 279              		.loc 1 181 0
 280 010a 80F8F220 		strb	r2, [r0, #242]
 182:Ourtasks/adcparamsinit.c **** 
 183:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 184:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;     // Offset
 281              		.loc 1 184 0
 282 010e C0F8F450 		str	r5, [r0, #244]	@ float
 185:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.1525; // Scale (volts) (1.8K-10K)
 283              		.loc 1 185 0
 284 0112 154E     		ldr	r6, .L7+32
 285 0114 C0F8F860 		str	r6, [r0, #248]	@ float
 186:Ourtasks/adcparamsinit.c **** 
 187:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 188:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 286              		.loc 1 188 0
 287 0118 A0F81021 		strh	r2, [r0, #272]	@ movhi
 189:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 288              		.loc 1 189 0
 289 011c C0F80441 		str	r4, [r0, #260]	@ float
 190:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 290              		.loc 1 190 0
 291 0120 C0F80811 		str	r1, [r0, #264]	@ float
 292              	.LVL10:
 191:Ourtasks/adcparamsinit.c **** 
 192:Ourtasks/adcparamsinit.c **** 
 193:Ourtasks/adcparamsinit.c **** /* 5v supply. */
 194:Ourtasks/adcparamsinit.c **** 	pacs = pacsx + ADC1IDX_5VOLTSUPPLY; // Point to "stuff" for this ADC channel
 195:Ourtasks/adcparamsinit.c **** 
 196:Ourtasks/adcparamsinit.c **** 	// Filter type, calibration option, compensation option. */
 197:Ourtasks/adcparamsinit.c **** 	pacs->xprms.filttype  = ADCFILTERTYPE_IIR1;        // Single pole IIR
 293              		.loc 1 197 0
 294 0124 80F81831 		strb	r3, [r0, #280]
 198:Ourtasks/adcparamsinit.c **** 	pacs->xprms.calibtype = ADC1PARAM_CALIBTYPE_OFSC;  // Offset & scale (poly ord 0 & 1)
 295              		.loc 1 198 0
 296 0128 80F81931 		strb	r3, [r0, #281]
 199:Ourtasks/adcparamsinit.c **** 	pacs->xprms.comptype  = ADC1PARAM_COMPTYPE_VOLT5A; // 5v sensor; Vref w 5v supply reading compensa
 297              		.loc 1 199 0
 298 012c 80F81AE1 		strb	lr, [r0, #282]
 200:Ourtasks/adcparamsinit.c **** 
 201:Ourtasks/adcparamsinit.c **** 	// Calibration coefficients.
 202:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[0] = 0.0;    // Offset
 299              		.loc 1 202 0
 300 0130 C0F81C51 		str	r5, [r0, #284]	@ float
 203:Ourtasks/adcparamsinit.c **** 	pacs->cal.f[1] = 0.5465; // Scale (volts) (3.9K - 4.7K)
 301              		.loc 1 203 0
 302 0134 C0F82071 		str	r7, [r0, #288]	@ float
 204:Ourtasks/adcparamsinit.c **** 
 205:Ourtasks/adcparamsinit.c **** 	// Filter initialize, coefficients, and pre-computed value. */
 206:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.skipctr  = 4; 	 // Initial readings skip count
 303              		.loc 1 206 0
 304 0138 A0F83821 		strh	r2, [r0, #312]	@ movhi
 207:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.coef     = 0.9;   // Filter coefficient (< 1.0)
 305              		.loc 1 207 0
 306 013c C0F82C41 		str	r4, [r0, #300]	@ float
 208:Ourtasks/adcparamsinit.c **** 	pacs->fpw.iir_f1.onemcoef = (1 - pacs->fpw.iir_f1.coef);
 307              		.loc 1 208 0
 308 0140 C0F83011 		str	r1, [r0, #304]	@ float
ARM GAS  /tmp/ccIgmkkH.s 			page 10


 309 0144 F0BD     		pop	{r4, r5, r6, r7, pc}
 310              	.L8:
 311 0146 00BF     		.align	2
 312              	.L7:
 313 0148 77BE7F3F 		.word	1065336439
 314 014c 0012833A 		.word	981668352
 315 0150 6666663F 		.word	1063675494
 316 0154 D0CCCC3D 		.word	1036831952
 317 0158 6DE70B3F 		.word	1057744749
 318 015c 810CC83C 		.word	1019743361
 319 0160 00F0FF44 		.word	1157623808
 320 0164 AD695E3E 		.word	1046374829
 321 0168 F6281C3E 		.word	1042032886
 322 016c AD69DE3D 		.word	1037986221
 323 0170 27C2A63E 		.word	1051116071
 324              		.cfi_endproc
 325              	.LFE1:
 327              		.text
 328              	.Letext0:
 329              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 330              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 331              		.file 4 "Ourtasks/iir_f1.h"
 332              		.file 5 "Ourtasks/adcparams.h"
ARM GAS  /tmp/ccIgmkkH.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 adcparamsinit.c
     /tmp/ccIgmkkH.s:22     .text.adcparamsinit_init_common:00000000 $t
     /tmp/ccIgmkkH.s:27     .text.adcparamsinit_init_common:00000000 adcparamsinit_init_common
     /tmp/ccIgmkkH.s:106    .text.adcparamsinit_init_common:00000088 $d
     /tmp/ccIgmkkH.s:117    .text.adcparamsinit_init:00000000 $t
     /tmp/ccIgmkkH.s:122    .text.adcparamsinit_init:00000000 adcparamsinit_init
     /tmp/ccIgmkkH.s:313    .text.adcparamsinit_init:00000148 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS

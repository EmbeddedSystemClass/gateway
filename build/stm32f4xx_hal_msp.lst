ARM GAS  /tmp/ccTLqSTf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_msp.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_MspInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_MspInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_MspInit:
  28              	.LFB124:
  29              		.file 1 "Src/stm32f4xx_hal_msp.c"
   1:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_hal_msp.c **** /**
   3:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f4xx_hal_msp.c ****   * File Name          : stm32f4xx_hal_msp.c
   5:Src/stm32f4xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f4xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f4xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   9:Src/stm32f4xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f4xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f4xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f4xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f4xx_hal_msp.c ****   *
  14:Src/stm32f4xx_hal_msp.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  15:Src/stm32f4xx_hal_msp.c ****   * All rights reserved.
  16:Src/stm32f4xx_hal_msp.c ****   *
  17:Src/stm32f4xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/stm32f4xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/stm32f4xx_hal_msp.c ****   *
  20:Src/stm32f4xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/stm32f4xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  22:Src/stm32f4xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/stm32f4xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/stm32f4xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  25:Src/stm32f4xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/stm32f4xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/stm32f4xx_hal_msp.c ****   *    derived from this software without specific written permission.
  28:Src/stm32f4xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/stm32f4xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
ARM GAS  /tmp/ccTLqSTf.s 			page 2


  30:Src/stm32f4xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/stm32f4xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under 
  32:Src/stm32f4xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under 
  33:Src/stm32f4xx_hal_msp.c ****   *    this license. 
  34:Src/stm32f4xx_hal_msp.c ****   *
  35:Src/stm32f4xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/stm32f4xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/stm32f4xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/stm32f4xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/stm32f4xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/stm32f4xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/stm32f4xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/stm32f4xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/stm32f4xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/stm32f4xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/stm32f4xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/stm32f4xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/stm32f4xx_hal_msp.c ****   *
  48:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
  49:Src/stm32f4xx_hal_msp.c ****   */
  50:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Header */
  51:Src/stm32f4xx_hal_msp.c **** 
  52:Src/stm32f4xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  53:Src/stm32f4xx_hal_msp.c **** #include "main.h"
  54:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  55:Src/stm32f4xx_hal_msp.c **** 
  56:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Includes */
  57:Src/stm32f4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_adc1;
  58:Src/stm32f4xx_hal_msp.c **** 
  59:Src/stm32f4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  60:Src/stm32f4xx_hal_msp.c **** 
  61:Src/stm32f4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  62:Src/stm32f4xx_hal_msp.c **** 
  63:Src/stm32f4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  64:Src/stm32f4xx_hal_msp.c **** 
  65:Src/stm32f4xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  66:Src/stm32f4xx_hal_msp.c **** 
  67:Src/stm32f4xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  68:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN TD */
  69:Src/stm32f4xx_hal_msp.c **** 
  70:Src/stm32f4xx_hal_msp.c **** /* USER CODE END TD */
  71:Src/stm32f4xx_hal_msp.c **** 
  72:Src/stm32f4xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  73:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Define */
  74:Src/stm32f4xx_hal_msp.c ****  
  75:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Define */
  76:Src/stm32f4xx_hal_msp.c **** 
  77:Src/stm32f4xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  78:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  79:Src/stm32f4xx_hal_msp.c **** 
  80:Src/stm32f4xx_hal_msp.c **** /* USER CODE END Macro */
  81:Src/stm32f4xx_hal_msp.c **** 
  82:Src/stm32f4xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  83:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN PV */
  84:Src/stm32f4xx_hal_msp.c **** 
  85:Src/stm32f4xx_hal_msp.c **** /* USER CODE END PV */
  86:Src/stm32f4xx_hal_msp.c **** 
ARM GAS  /tmp/ccTLqSTf.s 			page 3


  87:Src/stm32f4xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  88:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  89:Src/stm32f4xx_hal_msp.c **** 
  90:Src/stm32f4xx_hal_msp.c **** /* USER CODE END PFP */
  91:Src/stm32f4xx_hal_msp.c **** 
  92:Src/stm32f4xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  93:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  94:Src/stm32f4xx_hal_msp.c **** 
  95:Src/stm32f4xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  96:Src/stm32f4xx_hal_msp.c **** 
  97:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  98:Src/stm32f4xx_hal_msp.c **** 
  99:Src/stm32f4xx_hal_msp.c **** /* USER CODE END 0 */
 100:Src/stm32f4xx_hal_msp.c **** /**
 101:Src/stm32f4xx_hal_msp.c ****   * Initializes the Global MSP.
 102:Src/stm32f4xx_hal_msp.c ****   */
 103:Src/stm32f4xx_hal_msp.c **** void HAL_MspInit(void)
 104:Src/stm32f4xx_hal_msp.c **** {
  30              		.loc 1 104 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41              	.LBB2:
 105:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
 106:Src/stm32f4xx_hal_msp.c **** 
 107:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
 108:Src/stm32f4xx_hal_msp.c **** 
 109:Src/stm32f4xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  42              		.loc 1 109 0
  43 0004 0022     		movs	r2, #0
  44 0006 0092     		str	r2, [sp]
  45 0008 0D4B     		ldr	r3, .L3
  46 000a 596C     		ldr	r1, [r3, #68]
  47 000c 41F48041 		orr	r1, r1, #16384
  48 0010 5964     		str	r1, [r3, #68]
  49 0012 596C     		ldr	r1, [r3, #68]
  50 0014 01F48041 		and	r1, r1, #16384
  51 0018 0091     		str	r1, [sp]
  52 001a 0099     		ldr	r1, [sp]
  53              	.LBE2:
  54              	.LBB3:
 110:Src/stm32f4xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 110 0
  56 001c 0192     		str	r2, [sp, #4]
  57 001e 196C     		ldr	r1, [r3, #64]
  58 0020 41F08051 		orr	r1, r1, #268435456
  59 0024 1964     		str	r1, [r3, #64]
  60 0026 1B6C     		ldr	r3, [r3, #64]
  61 0028 03F08053 		and	r3, r3, #268435456
  62 002c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccTLqSTf.s 			page 4


  63 002e 019B     		ldr	r3, [sp, #4]
  64              	.LBE3:
 111:Src/stm32f4xx_hal_msp.c **** 
 112:Src/stm32f4xx_hal_msp.c ****   /* System interrupt init*/
 113:Src/stm32f4xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
 114:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
  65              		.loc 1 114 0
  66 0030 0F21     		movs	r1, #15
  67 0032 6FF00100 		mvn	r0, #1
  68 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  69              	.LVL0:
 115:Src/stm32f4xx_hal_msp.c **** 
 116:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 117:Src/stm32f4xx_hal_msp.c **** 
 118:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 119:Src/stm32f4xx_hal_msp.c **** }
  70              		.loc 1 119 0
  71 003a 03B0     		add	sp, sp, #12
  72              	.LCFI2:
  73              		.cfi_def_cfa_offset 4
  74              		@ sp needed
  75 003c 5DF804FB 		ldr	pc, [sp], #4
  76              	.L4:
  77              		.align	2
  78              	.L3:
  79 0040 00380240 		.word	1073887232
  80              		.cfi_endproc
  81              	.LFE124:
  83              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  84              		.align	2
  85              		.global	HAL_ADC_MspInit
  86              		.thumb
  87              		.thumb_func
  89              	HAL_ADC_MspInit:
  90              	.LFB125:
 120:Src/stm32f4xx_hal_msp.c **** 
 121:Src/stm32f4xx_hal_msp.c **** /**
 122:Src/stm32f4xx_hal_msp.c **** * @brief ADC MSP Initialization
 123:Src/stm32f4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 124:Src/stm32f4xx_hal_msp.c **** * @param hadc: ADC handle pointer
 125:Src/stm32f4xx_hal_msp.c **** * @retval None
 126:Src/stm32f4xx_hal_msp.c **** */
 127:Src/stm32f4xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 128:Src/stm32f4xx_hal_msp.c **** {
  91              		.loc 1 128 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 40
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL1:
  96 0000 70B5     		push	{r4, r5, r6, lr}
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 103 0002 8AB0     		sub	sp, sp, #40
ARM GAS  /tmp/ccTLqSTf.s 			page 5


 104              	.LCFI4:
 105              		.cfi_def_cfa_offset 56
 129:Src/stm32f4xx_hal_msp.c **** 
 130:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 106              		.loc 1 130 0
 107 0004 0023     		movs	r3, #0
 108 0006 0593     		str	r3, [sp, #20]
 109 0008 0693     		str	r3, [sp, #24]
 110 000a 0793     		str	r3, [sp, #28]
 111 000c 0893     		str	r3, [sp, #32]
 112 000e 0993     		str	r3, [sp, #36]
 131:Src/stm32f4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 113              		.loc 1 131 0
 114 0010 0268     		ldr	r2, [r0]
 115 0012 03F18043 		add	r3, r3, #1073741824
 116 0016 03F59033 		add	r3, r3, #73728
 117 001a 9A42     		cmp	r2, r3
 118 001c 67D1     		bne	.L5
 119 001e 0446     		mov	r4, r0
 120              	.LBB4:
 132:Src/stm32f4xx_hal_msp.c ****   {
 133:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 134:Src/stm32f4xx_hal_msp.c **** 
 135:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
 136:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 137:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 121              		.loc 1 137 0
 122 0020 0025     		movs	r5, #0
 123 0022 0195     		str	r5, [sp, #4]
 124 0024 03F58C33 		add	r3, r3, #71680
 125 0028 5A6C     		ldr	r2, [r3, #68]
 126 002a 42F48072 		orr	r2, r2, #256
 127 002e 5A64     		str	r2, [r3, #68]
 128 0030 5A6C     		ldr	r2, [r3, #68]
 129 0032 02F48072 		and	r2, r2, #256
 130 0036 0192     		str	r2, [sp, #4]
 131 0038 019A     		ldr	r2, [sp, #4]
 132              	.LBE4:
 133              	.LBB5:
 138:Src/stm32f4xx_hal_msp.c ****   
 139:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 134              		.loc 1 139 0
 135 003a 0295     		str	r5, [sp, #8]
 136 003c 1A6B     		ldr	r2, [r3, #48]
 137 003e 42F00402 		orr	r2, r2, #4
 138 0042 1A63     		str	r2, [r3, #48]
 139 0044 1A6B     		ldr	r2, [r3, #48]
 140 0046 02F00402 		and	r2, r2, #4
 141 004a 0292     		str	r2, [sp, #8]
 142 004c 029A     		ldr	r2, [sp, #8]
 143              	.LBE5:
 144              	.LBB6:
 140:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 145              		.loc 1 140 0
 146 004e 0395     		str	r5, [sp, #12]
 147 0050 1A6B     		ldr	r2, [r3, #48]
 148 0052 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccTLqSTf.s 			page 6


 149 0056 1A63     		str	r2, [r3, #48]
 150 0058 1A6B     		ldr	r2, [r3, #48]
 151 005a 02F00102 		and	r2, r2, #1
 152 005e 0392     		str	r2, [sp, #12]
 153 0060 039A     		ldr	r2, [sp, #12]
 154              	.LBE6:
 155              	.LBB7:
 141:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 156              		.loc 1 141 0
 157 0062 0495     		str	r5, [sp, #16]
 158 0064 1A6B     		ldr	r2, [r3, #48]
 159 0066 42F00202 		orr	r2, r2, #2
 160 006a 1A63     		str	r2, [r3, #48]
 161 006c 1B6B     		ldr	r3, [r3, #48]
 162 006e 03F00203 		and	r3, r3, #2
 163 0072 0493     		str	r3, [sp, #16]
 164 0074 049B     		ldr	r3, [sp, #16]
 165              	.LBE7:
 142:Src/stm32f4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 143:Src/stm32f4xx_hal_msp.c ****     PC1     ------> ADC1_IN11
 144:Src/stm32f4xx_hal_msp.c ****     PC2     ------> ADC1_IN12
 145:Src/stm32f4xx_hal_msp.c ****     PA1     ------> ADC1_IN1
 146:Src/stm32f4xx_hal_msp.c ****     PA5     ------> ADC1_IN5
 147:Src/stm32f4xx_hal_msp.c ****     PA6     ------> ADC1_IN6
 148:Src/stm32f4xx_hal_msp.c ****     PA7     ------> ADC1_IN7
 149:Src/stm32f4xx_hal_msp.c ****     PC5     ------> ADC1_IN15
 150:Src/stm32f4xx_hal_msp.c ****     PB0     ------> ADC1_IN8 
 151:Src/stm32f4xx_hal_msp.c ****     */
 152:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_5;
 166              		.loc 1 152 0
 167 0076 2623     		movs	r3, #38
 168 0078 0593     		str	r3, [sp, #20]
 153:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 169              		.loc 1 153 0
 170 007a 0326     		movs	r6, #3
 171 007c 0696     		str	r6, [sp, #24]
 154:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 155:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 172              		.loc 1 155 0
 173 007e 05A9     		add	r1, sp, #20
 174 0080 1C48     		ldr	r0, .L9
 175              	.LVL2:
 176 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL3:
 156:Src/stm32f4xx_hal_msp.c **** 
 157:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 178              		.loc 1 157 0
 179 0086 E223     		movs	r3, #226
 180 0088 0593     		str	r3, [sp, #20]
 158:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 181              		.loc 1 158 0
 182 008a 0696     		str	r6, [sp, #24]
 159:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 159 0
 184 008c 0795     		str	r5, [sp, #28]
 160:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 185              		.loc 1 160 0
ARM GAS  /tmp/ccTLqSTf.s 			page 7


 186 008e 05A9     		add	r1, sp, #20
 187 0090 1948     		ldr	r0, .L9+4
 188 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL4:
 161:Src/stm32f4xx_hal_msp.c **** 
 162:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 190              		.loc 1 162 0
 191 0096 0123     		movs	r3, #1
 192 0098 0593     		str	r3, [sp, #20]
 163:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 193              		.loc 1 163 0
 194 009a 0696     		str	r6, [sp, #24]
 164:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 164 0
 196 009c 0795     		str	r5, [sp, #28]
 165:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 197              		.loc 1 165 0
 198 009e 05A9     		add	r1, sp, #20
 199 00a0 1648     		ldr	r0, .L9+8
 200 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL5:
 166:Src/stm32f4xx_hal_msp.c **** 
 167:Src/stm32f4xx_hal_msp.c ****     /* ADC1 DMA Init */
 168:Src/stm32f4xx_hal_msp.c ****     /* ADC1 Init */
 169:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Instance = DMA2_Stream0;
 202              		.loc 1 169 0
 203 00a6 1648     		ldr	r0, .L9+12
 204 00a8 164B     		ldr	r3, .L9+16
 205 00aa 0360     		str	r3, [r0]
 170:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 206              		.loc 1 170 0
 207 00ac 4560     		str	r5, [r0, #4]
 171:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 208              		.loc 1 171 0
 209 00ae 8560     		str	r5, [r0, #8]
 172:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 210              		.loc 1 172 0
 211 00b0 C560     		str	r5, [r0, #12]
 173:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 212              		.loc 1 173 0
 213 00b2 4FF48063 		mov	r3, #1024
 214 00b6 0361     		str	r3, [r0, #16]
 174:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 215              		.loc 1 174 0
 216 00b8 4FF40063 		mov	r3, #2048
 217 00bc 4361     		str	r3, [r0, #20]
 175:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 218              		.loc 1 175 0
 219 00be 4FF40053 		mov	r3, #8192
 220 00c2 8361     		str	r3, [r0, #24]
 176:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 221              		.loc 1 176 0
 222 00c4 4FF48073 		mov	r3, #256
 223 00c8 C361     		str	r3, [r0, #28]
 177:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 224              		.loc 1 177 0
 225 00ca 0562     		str	r5, [r0, #32]
ARM GAS  /tmp/ccTLqSTf.s 			page 8


 178:Src/stm32f4xx_hal_msp.c ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 226              		.loc 1 178 0
 227 00cc 4562     		str	r5, [r0, #36]
 179:Src/stm32f4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 228              		.loc 1 179 0
 229 00ce FFF7FEFF 		bl	HAL_DMA_Init
 230              	.LVL6:
 231 00d2 08B1     		cbz	r0, .L7
 180:Src/stm32f4xx_hal_msp.c ****     {
 181:Src/stm32f4xx_hal_msp.c ****       Error_Handler();
 232              		.loc 1 181 0
 233 00d4 FFF7FEFF 		bl	Error_Handler
 234              	.LVL7:
 235              	.L7:
 182:Src/stm32f4xx_hal_msp.c ****     }
 183:Src/stm32f4xx_hal_msp.c **** 
 184:Src/stm32f4xx_hal_msp.c ****     __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 236              		.loc 1 184 0
 237 00d8 094B     		ldr	r3, .L9+12
 238 00da A363     		str	r3, [r4, #56]
 239 00dc 9C63     		str	r4, [r3, #56]
 185:Src/stm32f4xx_hal_msp.c **** 
 186:Src/stm32f4xx_hal_msp.c ****     /* ADC1 interrupt Init */
 187:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 6, 0);
 240              		.loc 1 187 0
 241 00de 0022     		movs	r2, #0
 242 00e0 0621     		movs	r1, #6
 243 00e2 1220     		movs	r0, #18
 244 00e4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 245              	.LVL8:
 188:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 246              		.loc 1 188 0
 247 00e8 1220     		movs	r0, #18
 248 00ea FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 249              	.LVL9:
 250              	.L5:
 189:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 190:Src/stm32f4xx_hal_msp.c **** 
 191:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 192:Src/stm32f4xx_hal_msp.c ****   }
 193:Src/stm32f4xx_hal_msp.c **** 
 194:Src/stm32f4xx_hal_msp.c **** }
 251              		.loc 1 194 0
 252 00ee 0AB0     		add	sp, sp, #40
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 16
 255              		@ sp needed
 256 00f0 70BD     		pop	{r4, r5, r6, pc}
 257              	.L10:
 258 00f2 00BF     		.align	2
 259              	.L9:
 260 00f4 00080240 		.word	1073874944
 261 00f8 00000240 		.word	1073872896
 262 00fc 00040240 		.word	1073873920
 263 0100 00000000 		.word	hdma_adc1
 264 0104 10640240 		.word	1073898512
 265              		.cfi_endproc
ARM GAS  /tmp/ccTLqSTf.s 			page 9


 266              	.LFE125:
 268              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 269              		.align	2
 270              		.global	HAL_ADC_MspDeInit
 271              		.thumb
 272              		.thumb_func
 274              	HAL_ADC_MspDeInit:
 275              	.LFB126:
 195:Src/stm32f4xx_hal_msp.c **** 
 196:Src/stm32f4xx_hal_msp.c **** /**
 197:Src/stm32f4xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 198:Src/stm32f4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 199:Src/stm32f4xx_hal_msp.c **** * @param hadc: ADC handle pointer
 200:Src/stm32f4xx_hal_msp.c **** * @retval None
 201:Src/stm32f4xx_hal_msp.c **** */
 202:Src/stm32f4xx_hal_msp.c **** 
 203:Src/stm32f4xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 204:Src/stm32f4xx_hal_msp.c **** {
 276              		.loc 1 204 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              	.LVL10:
 205:Src/stm32f4xx_hal_msp.c **** 
 206:Src/stm32f4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 281              		.loc 1 206 0
 282 0000 0268     		ldr	r2, [r0]
 283 0002 0F4B     		ldr	r3, .L15
 284 0004 9A42     		cmp	r2, r3
 285 0006 19D1     		bne	.L14
 204:Src/stm32f4xx_hal_msp.c **** 
 286              		.loc 1 204 0
 287 0008 10B5     		push	{r4, lr}
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292 000a 0446     		mov	r4, r0
 207:Src/stm32f4xx_hal_msp.c ****   {
 208:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 209:Src/stm32f4xx_hal_msp.c **** 
 210:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 211:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 212:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 293              		.loc 1 212 0
 294 000c 0D4A     		ldr	r2, .L15+4
 295 000e 536C     		ldr	r3, [r2, #68]
 296 0010 23F48073 		bic	r3, r3, #256
 297 0014 5364     		str	r3, [r2, #68]
 213:Src/stm32f4xx_hal_msp.c ****   
 214:Src/stm32f4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 215:Src/stm32f4xx_hal_msp.c ****     PC1     ------> ADC1_IN11
 216:Src/stm32f4xx_hal_msp.c ****     PC2     ------> ADC1_IN12
 217:Src/stm32f4xx_hal_msp.c ****     PA1     ------> ADC1_IN1
 218:Src/stm32f4xx_hal_msp.c ****     PA5     ------> ADC1_IN5
 219:Src/stm32f4xx_hal_msp.c ****     PA6     ------> ADC1_IN6
 220:Src/stm32f4xx_hal_msp.c ****     PA7     ------> ADC1_IN7
ARM GAS  /tmp/ccTLqSTf.s 			page 10


 221:Src/stm32f4xx_hal_msp.c ****     PC5     ------> ADC1_IN15
 222:Src/stm32f4xx_hal_msp.c ****     PB0     ------> ADC1_IN8 
 223:Src/stm32f4xx_hal_msp.c ****     */
 224:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_5);
 298              		.loc 1 224 0
 299 0016 2621     		movs	r1, #38
 300 0018 0B48     		ldr	r0, .L15+8
 301              	.LVL11:
 302 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 303              	.LVL12:
 225:Src/stm32f4xx_hal_msp.c **** 
 226:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 304              		.loc 1 226 0
 305 001e E221     		movs	r1, #226
 306 0020 0A48     		ldr	r0, .L15+12
 307 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 308              	.LVL13:
 227:Src/stm32f4xx_hal_msp.c **** 
 228:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0);
 309              		.loc 1 228 0
 310 0026 0121     		movs	r1, #1
 311 0028 0948     		ldr	r0, .L15+16
 312 002a FFF7FEFF 		bl	HAL_GPIO_DeInit
 313              	.LVL14:
 229:Src/stm32f4xx_hal_msp.c **** 
 230:Src/stm32f4xx_hal_msp.c ****     /* ADC1 DMA DeInit */
 231:Src/stm32f4xx_hal_msp.c ****     HAL_DMA_DeInit(hadc->DMA_Handle);
 314              		.loc 1 231 0
 315 002e A06B     		ldr	r0, [r4, #56]
 316 0030 FFF7FEFF 		bl	HAL_DMA_DeInit
 317              	.LVL15:
 232:Src/stm32f4xx_hal_msp.c **** 
 233:Src/stm32f4xx_hal_msp.c ****     /* ADC1 interrupt DeInit */
 234:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 318              		.loc 1 234 0
 319 0034 1220     		movs	r0, #18
 320 0036 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 321              	.LVL16:
 322 003a 10BD     		pop	{r4, pc}
 323              	.LVL17:
 324              	.L14:
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 0
 327              		.cfi_restore 4
 328              		.cfi_restore 14
 329 003c 7047     		bx	lr
 330              	.L16:
 331 003e 00BF     		.align	2
 332              	.L15:
 333 0040 00200140 		.word	1073815552
 334 0044 00380240 		.word	1073887232
 335 0048 00080240 		.word	1073874944
 336 004c 00000240 		.word	1073872896
 337 0050 00040240 		.word	1073873920
 338              		.cfi_endproc
 339              	.LFE126:
 341              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
ARM GAS  /tmp/ccTLqSTf.s 			page 11


 342              		.align	2
 343              		.global	HAL_CAN_MspInit
 344              		.thumb
 345              		.thumb_func
 347              	HAL_CAN_MspInit:
 348              	.LFB127:
 235:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 236:Src/stm32f4xx_hal_msp.c **** 
 237:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 238:Src/stm32f4xx_hal_msp.c ****   }
 239:Src/stm32f4xx_hal_msp.c **** 
 240:Src/stm32f4xx_hal_msp.c **** }
 241:Src/stm32f4xx_hal_msp.c **** 
 242:Src/stm32f4xx_hal_msp.c **** static uint32_t HAL_RCC_CAN1_CLK_ENABLED=0;
 243:Src/stm32f4xx_hal_msp.c **** 
 244:Src/stm32f4xx_hal_msp.c **** /**
 245:Src/stm32f4xx_hal_msp.c **** * @brief CAN MSP Initialization
 246:Src/stm32f4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 247:Src/stm32f4xx_hal_msp.c **** * @param hcan: CAN handle pointer
 248:Src/stm32f4xx_hal_msp.c **** * @retval None
 249:Src/stm32f4xx_hal_msp.c **** */
 250:Src/stm32f4xx_hal_msp.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 251:Src/stm32f4xx_hal_msp.c **** {
 349              		.loc 1 251 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 40
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL18:
 354 0000 10B5     		push	{r4, lr}
 355              	.LCFI8:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
 358              		.cfi_offset 14, -4
 359 0002 8AB0     		sub	sp, sp, #40
 360              	.LCFI9:
 361              		.cfi_def_cfa_offset 48
 252:Src/stm32f4xx_hal_msp.c **** 
 253:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 362              		.loc 1 253 0
 363 0004 0023     		movs	r3, #0
 364 0006 0593     		str	r3, [sp, #20]
 365 0008 0693     		str	r3, [sp, #24]
 366 000a 0793     		str	r3, [sp, #28]
 367 000c 0893     		str	r3, [sp, #32]
 368 000e 0993     		str	r3, [sp, #36]
 254:Src/stm32f4xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 369              		.loc 1 254 0
 370 0010 0368     		ldr	r3, [r0]
 371 0012 4C4A     		ldr	r2, .L23
 372 0014 9342     		cmp	r3, r2
 373 0016 41D1     		bne	.L18
 255:Src/stm32f4xx_hal_msp.c ****   {
 256:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
 257:Src/stm32f4xx_hal_msp.c **** 
 258:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 0 */
 259:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 260:Src/stm32f4xx_hal_msp.c ****     HAL_RCC_CAN1_CLK_ENABLED++;
ARM GAS  /tmp/ccTLqSTf.s 			page 12


 374              		.loc 1 260 0
 375 0018 4B4A     		ldr	r2, .L23+4
 376 001a 1368     		ldr	r3, [r2]
 377 001c 0133     		adds	r3, r3, #1
 378 001e 1360     		str	r3, [r2]
 261:Src/stm32f4xx_hal_msp.c ****     if(HAL_RCC_CAN1_CLK_ENABLED==1){
 379              		.loc 1 261 0
 380 0020 012B     		cmp	r3, #1
 381 0022 0BD1     		bne	.L19
 382              	.LBB8:
 262:Src/stm32f4xx_hal_msp.c ****       __HAL_RCC_CAN1_CLK_ENABLE();
 383              		.loc 1 262 0
 384 0024 0023     		movs	r3, #0
 385 0026 0093     		str	r3, [sp]
 386 0028 484B     		ldr	r3, .L23+8
 387 002a 1A6C     		ldr	r2, [r3, #64]
 388 002c 42F00072 		orr	r2, r2, #33554432
 389 0030 1A64     		str	r2, [r3, #64]
 390 0032 1B6C     		ldr	r3, [r3, #64]
 391 0034 03F00073 		and	r3, r3, #33554432
 392 0038 0093     		str	r3, [sp]
 393 003a 009B     		ldr	r3, [sp]
 394              	.L19:
 395              	.LBE8:
 396              	.LBB9:
 263:Src/stm32f4xx_hal_msp.c ****     }
 264:Src/stm32f4xx_hal_msp.c ****   
 265:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 397              		.loc 1 265 0
 398 003c 0024     		movs	r4, #0
 399 003e 0194     		str	r4, [sp, #4]
 400 0040 424B     		ldr	r3, .L23+8
 401 0042 1A6B     		ldr	r2, [r3, #48]
 402 0044 42F00802 		orr	r2, r2, #8
 403 0048 1A63     		str	r2, [r3, #48]
 404 004a 1B6B     		ldr	r3, [r3, #48]
 405 004c 03F00803 		and	r3, r3, #8
 406 0050 0193     		str	r3, [sp, #4]
 407 0052 019B     		ldr	r3, [sp, #4]
 408              	.LBE9:
 266:Src/stm32f4xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 267:Src/stm32f4xx_hal_msp.c ****     PD0     ------> CAN1_RX
 268:Src/stm32f4xx_hal_msp.c ****     PD1     ------> CAN1_TX 
 269:Src/stm32f4xx_hal_msp.c ****     */
 270:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 409              		.loc 1 270 0
 410 0054 0323     		movs	r3, #3
 411 0056 0593     		str	r3, [sp, #20]
 271:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 412              		.loc 1 271 0
 413 0058 0222     		movs	r2, #2
 414 005a 0692     		str	r2, [sp, #24]
 272:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 273:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 415              		.loc 1 273 0
 416 005c 0893     		str	r3, [sp, #32]
 274:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
ARM GAS  /tmp/ccTLqSTf.s 			page 13


 417              		.loc 1 274 0
 418 005e 0923     		movs	r3, #9
 419 0060 0993     		str	r3, [sp, #36]
 275:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 420              		.loc 1 275 0
 421 0062 05A9     		add	r1, sp, #20
 422 0064 3A48     		ldr	r0, .L23+12
 423              	.LVL19:
 424 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 425              	.LVL20:
 276:Src/stm32f4xx_hal_msp.c **** 
 277:Src/stm32f4xx_hal_msp.c ****     /* CAN1 interrupt Init */
 278:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 5, 0);
 426              		.loc 1 278 0
 427 006a 2246     		mov	r2, r4
 428 006c 0521     		movs	r1, #5
 429 006e 1320     		movs	r0, #19
 430 0070 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 431              	.LVL21:
 279:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 432              		.loc 1 279 0
 433 0074 1320     		movs	r0, #19
 434 0076 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 435              	.LVL22:
 280:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 7, 0);
 436              		.loc 1 280 0
 437 007a 2246     		mov	r2, r4
 438 007c 0721     		movs	r1, #7
 439 007e 1420     		movs	r0, #20
 440 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 441              	.LVL23:
 281:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 442              		.loc 1 281 0
 443 0084 1420     		movs	r0, #20
 444 0086 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 445              	.LVL24:
 282:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 7, 0);
 446              		.loc 1 282 0
 447 008a 2246     		mov	r2, r4
 448 008c 0721     		movs	r1, #7
 449 008e 1520     		movs	r0, #21
 450 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 451              	.LVL25:
 283:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 452              		.loc 1 283 0
 453 0094 1520     		movs	r0, #21
 454 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 455              	.LVL26:
 456 009a 51E0     		b	.L17
 457              	.LVL27:
 458              	.L18:
 284:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 285:Src/stm32f4xx_hal_msp.c **** 
 286:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspInit 1 */
 287:Src/stm32f4xx_hal_msp.c ****   }
 288:Src/stm32f4xx_hal_msp.c ****   else if(hcan->Instance==CAN2)
 459              		.loc 1 288 0
ARM GAS  /tmp/ccTLqSTf.s 			page 14


 460 009c 2D4A     		ldr	r2, .L23+16
 461 009e 9342     		cmp	r3, r2
 462 00a0 4ED1     		bne	.L17
 463              	.LBB10:
 289:Src/stm32f4xx_hal_msp.c ****   {
 290:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN2_MspInit 0 */
 291:Src/stm32f4xx_hal_msp.c **** 
 292:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN2_MspInit 0 */
 293:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 294:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_CAN2_CLK_ENABLE();
 464              		.loc 1 294 0
 465 00a2 0023     		movs	r3, #0
 466 00a4 0293     		str	r3, [sp, #8]
 467 00a6 294B     		ldr	r3, .L23+8
 468 00a8 1A6C     		ldr	r2, [r3, #64]
 469 00aa 42F08062 		orr	r2, r2, #67108864
 470 00ae 1A64     		str	r2, [r3, #64]
 471 00b0 1B6C     		ldr	r3, [r3, #64]
 472 00b2 03F08063 		and	r3, r3, #67108864
 473 00b6 0293     		str	r3, [sp, #8]
 474 00b8 029B     		ldr	r3, [sp, #8]
 475              	.LBE10:
 295:Src/stm32f4xx_hal_msp.c ****     HAL_RCC_CAN1_CLK_ENABLED++;
 476              		.loc 1 295 0
 477 00ba 234A     		ldr	r2, .L23+4
 478 00bc 1368     		ldr	r3, [r2]
 479 00be 0133     		adds	r3, r3, #1
 480 00c0 1360     		str	r3, [r2]
 296:Src/stm32f4xx_hal_msp.c ****     if(HAL_RCC_CAN1_CLK_ENABLED==1){
 481              		.loc 1 296 0
 482 00c2 012B     		cmp	r3, #1
 483 00c4 0BD1     		bne	.L21
 484              	.LBB11:
 297:Src/stm32f4xx_hal_msp.c ****       __HAL_RCC_CAN1_CLK_ENABLE();
 485              		.loc 1 297 0
 486 00c6 0023     		movs	r3, #0
 487 00c8 0393     		str	r3, [sp, #12]
 488 00ca 204B     		ldr	r3, .L23+8
 489 00cc 1A6C     		ldr	r2, [r3, #64]
 490 00ce 42F00072 		orr	r2, r2, #33554432
 491 00d2 1A64     		str	r2, [r3, #64]
 492 00d4 1B6C     		ldr	r3, [r3, #64]
 493 00d6 03F00073 		and	r3, r3, #33554432
 494 00da 0393     		str	r3, [sp, #12]
 495 00dc 039B     		ldr	r3, [sp, #12]
 496              	.L21:
 497              	.LBE11:
 498              	.LBB12:
 298:Src/stm32f4xx_hal_msp.c ****     }
 299:Src/stm32f4xx_hal_msp.c ****   
 300:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 499              		.loc 1 300 0
 500 00de 0024     		movs	r4, #0
 501 00e0 0494     		str	r4, [sp, #16]
 502 00e2 1A4B     		ldr	r3, .L23+8
 503 00e4 1A6B     		ldr	r2, [r3, #48]
 504 00e6 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/ccTLqSTf.s 			page 15


 505 00ea 1A63     		str	r2, [r3, #48]
 506 00ec 1B6B     		ldr	r3, [r3, #48]
 507 00ee 03F00203 		and	r3, r3, #2
 508 00f2 0493     		str	r3, [sp, #16]
 509 00f4 049B     		ldr	r3, [sp, #16]
 510              	.LBE12:
 301:Src/stm32f4xx_hal_msp.c ****     /**CAN2 GPIO Configuration    
 302:Src/stm32f4xx_hal_msp.c ****     PB12     ------> CAN2_RX
 303:Src/stm32f4xx_hal_msp.c ****     PB13     ------> CAN2_TX 
 304:Src/stm32f4xx_hal_msp.c ****     */
 305:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 511              		.loc 1 305 0
 512 00f6 4FF44053 		mov	r3, #12288
 513 00fa 0593     		str	r3, [sp, #20]
 306:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 514              		.loc 1 306 0
 515 00fc 0223     		movs	r3, #2
 516 00fe 0693     		str	r3, [sp, #24]
 307:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 308:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 517              		.loc 1 308 0
 518 0100 0323     		movs	r3, #3
 519 0102 0893     		str	r3, [sp, #32]
 309:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 520              		.loc 1 309 0
 521 0104 0923     		movs	r3, #9
 522 0106 0993     		str	r3, [sp, #36]
 310:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 523              		.loc 1 310 0
 524 0108 05A9     		add	r1, sp, #20
 525 010a 1348     		ldr	r0, .L23+20
 526              	.LVL28:
 527 010c FFF7FEFF 		bl	HAL_GPIO_Init
 528              	.LVL29:
 311:Src/stm32f4xx_hal_msp.c **** 
 312:Src/stm32f4xx_hal_msp.c ****     /* CAN2 interrupt Init */
 313:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 5, 0);
 529              		.loc 1 313 0
 530 0110 2246     		mov	r2, r4
 531 0112 0521     		movs	r1, #5
 532 0114 3F20     		movs	r0, #63
 533 0116 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 534              	.LVL30:
 314:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 535              		.loc 1 314 0
 536 011a 3F20     		movs	r0, #63
 537 011c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 538              	.LVL31:
 315:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 7, 0);
 539              		.loc 1 315 0
 540 0120 2246     		mov	r2, r4
 541 0122 0721     		movs	r1, #7
 542 0124 4020     		movs	r0, #64
 543 0126 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 544              	.LVL32:
 316:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 545              		.loc 1 316 0
ARM GAS  /tmp/ccTLqSTf.s 			page 16


 546 012a 4020     		movs	r0, #64
 547 012c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 548              	.LVL33:
 317:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 7, 0);
 549              		.loc 1 317 0
 550 0130 2246     		mov	r2, r4
 551 0132 0721     		movs	r1, #7
 552 0134 4120     		movs	r0, #65
 553 0136 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 554              	.LVL34:
 318:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 555              		.loc 1 318 0
 556 013a 4120     		movs	r0, #65
 557 013c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 558              	.LVL35:
 559              	.L17:
 319:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN2_MspInit 1 */
 320:Src/stm32f4xx_hal_msp.c **** 
 321:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN2_MspInit 1 */
 322:Src/stm32f4xx_hal_msp.c ****   }
 323:Src/stm32f4xx_hal_msp.c **** 
 324:Src/stm32f4xx_hal_msp.c **** }
 560              		.loc 1 324 0
 561 0140 0AB0     		add	sp, sp, #40
 562              	.LCFI10:
 563              		.cfi_def_cfa_offset 8
 564              		@ sp needed
 565 0142 10BD     		pop	{r4, pc}
 566              	.L24:
 567              		.align	2
 568              	.L23:
 569 0144 00640040 		.word	1073767424
 570 0148 00000000 		.word	.LANCHOR0
 571 014c 00380240 		.word	1073887232
 572 0150 000C0240 		.word	1073875968
 573 0154 00680040 		.word	1073768448
 574 0158 00040240 		.word	1073873920
 575              		.cfi_endproc
 576              	.LFE127:
 578              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 579              		.align	2
 580              		.global	HAL_CAN_MspDeInit
 581              		.thumb
 582              		.thumb_func
 584              	HAL_CAN_MspDeInit:
 585              	.LFB128:
 325:Src/stm32f4xx_hal_msp.c **** 
 326:Src/stm32f4xx_hal_msp.c **** /**
 327:Src/stm32f4xx_hal_msp.c **** * @brief CAN MSP De-Initialization
 328:Src/stm32f4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 329:Src/stm32f4xx_hal_msp.c **** * @param hcan: CAN handle pointer
 330:Src/stm32f4xx_hal_msp.c **** * @retval None
 331:Src/stm32f4xx_hal_msp.c **** */
 332:Src/stm32f4xx_hal_msp.c **** 
 333:Src/stm32f4xx_hal_msp.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 334:Src/stm32f4xx_hal_msp.c **** {
 586              		.loc 1 334 0
ARM GAS  /tmp/ccTLqSTf.s 			page 17


 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL36:
 591 0000 08B5     		push	{r3, lr}
 592              	.LCFI11:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 3, -8
 595              		.cfi_offset 14, -4
 335:Src/stm32f4xx_hal_msp.c **** 
 336:Src/stm32f4xx_hal_msp.c ****   if(hcan->Instance==CAN1)
 596              		.loc 1 336 0
 597 0002 0368     		ldr	r3, [r0]
 598 0004 1E4A     		ldr	r2, .L31
 599 0006 9342     		cmp	r3, r2
 600 0008 17D1     		bne	.L26
 337:Src/stm32f4xx_hal_msp.c ****   {
 338:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 339:Src/stm32f4xx_hal_msp.c **** 
 340:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 341:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 342:Src/stm32f4xx_hal_msp.c ****     HAL_RCC_CAN1_CLK_ENABLED--;
 601              		.loc 1 342 0
 602 000a 1E4A     		ldr	r2, .L31+4
 603 000c 1368     		ldr	r3, [r2]
 604 000e 013B     		subs	r3, r3, #1
 605 0010 1360     		str	r3, [r2]
 343:Src/stm32f4xx_hal_msp.c ****     if(HAL_RCC_CAN1_CLK_ENABLED==0){
 606              		.loc 1 343 0
 607 0012 23B9     		cbnz	r3, .L27
 344:Src/stm32f4xx_hal_msp.c ****       __HAL_RCC_CAN1_CLK_DISABLE();
 608              		.loc 1 344 0
 609 0014 1C4A     		ldr	r2, .L31+8
 610 0016 136C     		ldr	r3, [r2, #64]
 611 0018 23F00073 		bic	r3, r3, #33554432
 612 001c 1364     		str	r3, [r2, #64]
 613              	.L27:
 345:Src/stm32f4xx_hal_msp.c ****     }
 346:Src/stm32f4xx_hal_msp.c ****   
 347:Src/stm32f4xx_hal_msp.c ****     /**CAN1 GPIO Configuration    
 348:Src/stm32f4xx_hal_msp.c ****     PD0     ------> CAN1_RX
 349:Src/stm32f4xx_hal_msp.c ****     PD1     ------> CAN1_TX 
 350:Src/stm32f4xx_hal_msp.c ****     */
 351:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1);
 614              		.loc 1 351 0
 615 001e 0321     		movs	r1, #3
 616 0020 1A48     		ldr	r0, .L31+12
 617              	.LVL37:
 618 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 619              	.LVL38:
 352:Src/stm32f4xx_hal_msp.c **** 
 353:Src/stm32f4xx_hal_msp.c ****     /* CAN1 interrupt DeInit */
 354:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
 620              		.loc 1 354 0
 621 0026 1320     		movs	r0, #19
 622 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 623              	.LVL39:
ARM GAS  /tmp/ccTLqSTf.s 			page 18


 355:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 624              		.loc 1 355 0
 625 002c 1420     		movs	r0, #20
 626 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 627              	.LVL40:
 356:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN1_RX1_IRQn);
 628              		.loc 1 356 0
 629 0032 1520     		movs	r0, #21
 630 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 631              	.LVL41:
 632 0038 08BD     		pop	{r3, pc}
 633              	.LVL42:
 634              	.L26:
 357:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 358:Src/stm32f4xx_hal_msp.c **** 
 359:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 360:Src/stm32f4xx_hal_msp.c ****   }
 361:Src/stm32f4xx_hal_msp.c ****   else if(hcan->Instance==CAN2)
 635              		.loc 1 361 0
 636 003a 154A     		ldr	r2, .L31+16
 637 003c 9342     		cmp	r3, r2
 638 003e 1DD1     		bne	.L25
 362:Src/stm32f4xx_hal_msp.c ****   {
 363:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN2_MspDeInit 0 */
 364:Src/stm32f4xx_hal_msp.c **** 
 365:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN2_MspDeInit 0 */
 366:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 367:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_CAN2_CLK_DISABLE();
 639              		.loc 1 367 0
 640 0040 02F5E832 		add	r2, r2, #118784
 641 0044 136C     		ldr	r3, [r2, #64]
 642 0046 23F08063 		bic	r3, r3, #67108864
 643 004a 1364     		str	r3, [r2, #64]
 368:Src/stm32f4xx_hal_msp.c ****     HAL_RCC_CAN1_CLK_ENABLED--;
 644              		.loc 1 368 0
 645 004c 0D4A     		ldr	r2, .L31+4
 646 004e 1368     		ldr	r3, [r2]
 647 0050 013B     		subs	r3, r3, #1
 648 0052 1360     		str	r3, [r2]
 369:Src/stm32f4xx_hal_msp.c ****     if(HAL_RCC_CAN1_CLK_ENABLED==0){
 649              		.loc 1 369 0
 650 0054 23B9     		cbnz	r3, .L29
 370:Src/stm32f4xx_hal_msp.c ****       __HAL_RCC_CAN1_CLK_DISABLE();
 651              		.loc 1 370 0
 652 0056 0C4A     		ldr	r2, .L31+8
 653 0058 136C     		ldr	r3, [r2, #64]
 654 005a 23F00073 		bic	r3, r3, #33554432
 655 005e 1364     		str	r3, [r2, #64]
 656              	.L29:
 371:Src/stm32f4xx_hal_msp.c ****     }
 372:Src/stm32f4xx_hal_msp.c ****   
 373:Src/stm32f4xx_hal_msp.c ****     /**CAN2 GPIO Configuration    
 374:Src/stm32f4xx_hal_msp.c ****     PB12     ------> CAN2_RX
 375:Src/stm32f4xx_hal_msp.c ****     PB13     ------> CAN2_TX 
 376:Src/stm32f4xx_hal_msp.c ****     */
 377:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12|GPIO_PIN_13);
 657              		.loc 1 377 0
ARM GAS  /tmp/ccTLqSTf.s 			page 19


 658 0060 4FF44051 		mov	r1, #12288
 659 0064 0B48     		ldr	r0, .L31+20
 660              	.LVL43:
 661 0066 FFF7FEFF 		bl	HAL_GPIO_DeInit
 662              	.LVL44:
 378:Src/stm32f4xx_hal_msp.c **** 
 379:Src/stm32f4xx_hal_msp.c ****     /* CAN2 interrupt DeInit */
 380:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN2_TX_IRQn);
 663              		.loc 1 380 0
 664 006a 3F20     		movs	r0, #63
 665 006c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 666              	.LVL45:
 381:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN2_RX0_IRQn);
 667              		.loc 1 381 0
 668 0070 4020     		movs	r0, #64
 669 0072 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 670              	.LVL46:
 382:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(CAN2_RX1_IRQn);
 671              		.loc 1 382 0
 672 0076 4120     		movs	r0, #65
 673 0078 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 674              	.LVL47:
 675              	.L25:
 676 007c 08BD     		pop	{r3, pc}
 677              	.L32:
 678 007e 00BF     		.align	2
 679              	.L31:
 680 0080 00640040 		.word	1073767424
 681 0084 00000000 		.word	.LANCHOR0
 682 0088 00380240 		.word	1073887232
 683 008c 000C0240 		.word	1073875968
 684 0090 00680040 		.word	1073768448
 685 0094 00040240 		.word	1073873920
 686              		.cfi_endproc
 687              	.LFE128:
 689              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 690              		.align	2
 691              		.global	HAL_UART_MspInit
 692              		.thumb
 693              		.thumb_func
 695              	HAL_UART_MspInit:
 696              	.LFB129:
 383:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN CAN2_MspDeInit 1 */
 384:Src/stm32f4xx_hal_msp.c **** 
 385:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END CAN2_MspDeInit 1 */
 386:Src/stm32f4xx_hal_msp.c ****   }
 387:Src/stm32f4xx_hal_msp.c **** 
 388:Src/stm32f4xx_hal_msp.c **** }
 389:Src/stm32f4xx_hal_msp.c **** 
 390:Src/stm32f4xx_hal_msp.c **** /**
 391:Src/stm32f4xx_hal_msp.c **** * @brief UART MSP Initialization
 392:Src/stm32f4xx_hal_msp.c **** * This function configures the hardware resources used in this example
 393:Src/stm32f4xx_hal_msp.c **** * @param huart: UART handle pointer
 394:Src/stm32f4xx_hal_msp.c **** * @retval None
 395:Src/stm32f4xx_hal_msp.c **** */
 396:Src/stm32f4xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 397:Src/stm32f4xx_hal_msp.c **** {
ARM GAS  /tmp/ccTLqSTf.s 			page 20


 697              		.loc 1 397 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 40
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL48:
 702 0000 30B5     		push	{r4, r5, lr}
 703              	.LCFI12:
 704              		.cfi_def_cfa_offset 12
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708 0002 8BB0     		sub	sp, sp, #44
 709              	.LCFI13:
 710              		.cfi_def_cfa_offset 56
 711 0004 0446     		mov	r4, r0
 398:Src/stm32f4xx_hal_msp.c **** 
 399:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 712              		.loc 1 399 0
 713 0006 0023     		movs	r3, #0
 714 0008 0593     		str	r3, [sp, #20]
 715 000a 0693     		str	r3, [sp, #24]
 716 000c 0793     		str	r3, [sp, #28]
 717 000e 0893     		str	r3, [sp, #32]
 718 0010 0993     		str	r3, [sp, #36]
 400:Src/stm32f4xx_hal_msp.c ****   if(huart->Instance==USART2)
 719              		.loc 1 400 0
 720 0012 0368     		ldr	r3, [r0]
 721 0014 644A     		ldr	r2, .L41
 722 0016 9342     		cmp	r3, r2
 723 0018 60D1     		bne	.L34
 724              	.LBB13:
 401:Src/stm32f4xx_hal_msp.c ****   {
 402:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 403:Src/stm32f4xx_hal_msp.c **** 
 404:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 0 */
 405:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 406:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 725              		.loc 1 406 0
 726 001a 0025     		movs	r5, #0
 727 001c 0195     		str	r5, [sp, #4]
 728 001e 634B     		ldr	r3, .L41+4
 729 0020 1A6C     		ldr	r2, [r3, #64]
 730 0022 42F40032 		orr	r2, r2, #131072
 731 0026 1A64     		str	r2, [r3, #64]
 732 0028 1A6C     		ldr	r2, [r3, #64]
 733 002a 02F40032 		and	r2, r2, #131072
 734 002e 0192     		str	r2, [sp, #4]
 735 0030 019A     		ldr	r2, [sp, #4]
 736              	.LBE13:
 737              	.LBB14:
 407:Src/stm32f4xx_hal_msp.c ****   
 408:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 738              		.loc 1 408 0
 739 0032 0295     		str	r5, [sp, #8]
 740 0034 1A6B     		ldr	r2, [r3, #48]
 741 0036 42F00102 		orr	r2, r2, #1
 742 003a 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccTLqSTf.s 			page 21


 743 003c 1B6B     		ldr	r3, [r3, #48]
 744 003e 03F00103 		and	r3, r3, #1
 745 0042 0293     		str	r3, [sp, #8]
 746 0044 029B     		ldr	r3, [sp, #8]
 747              	.LBE14:
 409:Src/stm32f4xx_hal_msp.c ****     /**USART2 GPIO Configuration    
 410:Src/stm32f4xx_hal_msp.c ****     PA2     ------> USART2_TX
 411:Src/stm32f4xx_hal_msp.c ****     PA3     ------> USART2_RX 
 412:Src/stm32f4xx_hal_msp.c ****     */
 413:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 748              		.loc 1 413 0
 749 0046 0C23     		movs	r3, #12
 750 0048 0593     		str	r3, [sp, #20]
 414:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 751              		.loc 1 414 0
 752 004a 0223     		movs	r3, #2
 753 004c 0693     		str	r3, [sp, #24]
 415:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 754              		.loc 1 415 0
 755 004e 0123     		movs	r3, #1
 756 0050 0793     		str	r3, [sp, #28]
 416:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 757              		.loc 1 416 0
 758 0052 0323     		movs	r3, #3
 759 0054 0893     		str	r3, [sp, #32]
 417:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 760              		.loc 1 417 0
 761 0056 0723     		movs	r3, #7
 762 0058 0993     		str	r3, [sp, #36]
 418:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 763              		.loc 1 418 0
 764 005a 05A9     		add	r1, sp, #20
 765 005c 5448     		ldr	r0, .L41+8
 766              	.LVL49:
 767 005e FFF7FEFF 		bl	HAL_GPIO_Init
 768              	.LVL50:
 419:Src/stm32f4xx_hal_msp.c **** 
 420:Src/stm32f4xx_hal_msp.c ****     /* USART2 DMA Init */
 421:Src/stm32f4xx_hal_msp.c ****     /* USART2_RX Init */
 422:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Instance = DMA1_Stream5;
 769              		.loc 1 422 0
 770 0062 5448     		ldr	r0, .L41+12
 771 0064 544B     		ldr	r3, .L41+16
 772 0066 0360     		str	r3, [r0]
 423:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 773              		.loc 1 423 0
 774 0068 4FF00063 		mov	r3, #134217728
 775 006c 4360     		str	r3, [r0, #4]
 424:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 776              		.loc 1 424 0
 777 006e 8560     		str	r5, [r0, #8]
 425:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 778              		.loc 1 425 0
 779 0070 C560     		str	r5, [r0, #12]
 426:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 780              		.loc 1 426 0
 781 0072 4FF48063 		mov	r3, #1024
ARM GAS  /tmp/ccTLqSTf.s 			page 22


 782 0076 0361     		str	r3, [r0, #16]
 427:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 783              		.loc 1 427 0
 784 0078 4561     		str	r5, [r0, #20]
 428:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 785              		.loc 1 428 0
 786 007a 8561     		str	r5, [r0, #24]
 429:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 787              		.loc 1 429 0
 788 007c 4FF48073 		mov	r3, #256
 789 0080 C361     		str	r3, [r0, #28]
 430:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 790              		.loc 1 430 0
 791 0082 0562     		str	r5, [r0, #32]
 431:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 792              		.loc 1 431 0
 793 0084 4562     		str	r5, [r0, #36]
 432:Src/stm32f4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 794              		.loc 1 432 0
 795 0086 FFF7FEFF 		bl	HAL_DMA_Init
 796              	.LVL51:
 797 008a 08B1     		cbz	r0, .L35
 433:Src/stm32f4xx_hal_msp.c ****     {
 434:Src/stm32f4xx_hal_msp.c ****       Error_Handler();
 798              		.loc 1 434 0
 799 008c FFF7FEFF 		bl	Error_Handler
 800              	.LVL52:
 801              	.L35:
 435:Src/stm32f4xx_hal_msp.c ****     }
 436:Src/stm32f4xx_hal_msp.c **** 
 437:Src/stm32f4xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 802              		.loc 1 437 0
 803 0090 484B     		ldr	r3, .L41+12
 804 0092 6363     		str	r3, [r4, #52]
 805 0094 9C63     		str	r4, [r3, #56]
 438:Src/stm32f4xx_hal_msp.c **** 
 439:Src/stm32f4xx_hal_msp.c ****     /* USART2_TX Init */
 440:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Instance = DMA1_Stream6;
 806              		.loc 1 440 0
 807 0096 4948     		ldr	r0, .L41+20
 808 0098 494B     		ldr	r3, .L41+24
 809 009a 0360     		str	r3, [r0]
 441:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.Channel = DMA_CHANNEL_4;
 810              		.loc 1 441 0
 811 009c 4FF00063 		mov	r3, #134217728
 812 00a0 4360     		str	r3, [r0, #4]
 442:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 813              		.loc 1 442 0
 814 00a2 4023     		movs	r3, #64
 815 00a4 8360     		str	r3, [r0, #8]
 443:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 816              		.loc 1 443 0
 817 00a6 0023     		movs	r3, #0
 818 00a8 C360     		str	r3, [r0, #12]
 444:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.MemInc = DMA_MINC_ENABLE;
 819              		.loc 1 444 0
 820 00aa 4FF48062 		mov	r2, #1024
ARM GAS  /tmp/ccTLqSTf.s 			page 23


 821 00ae 0261     		str	r2, [r0, #16]
 445:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 822              		.loc 1 445 0
 823 00b0 4361     		str	r3, [r0, #20]
 446:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 824              		.loc 1 446 0
 825 00b2 8361     		str	r3, [r0, #24]
 447:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.Mode = DMA_NORMAL;
 826              		.loc 1 447 0
 827 00b4 C361     		str	r3, [r0, #28]
 448:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.Priority = DMA_PRIORITY_LOW;
 828              		.loc 1 448 0
 829 00b6 0362     		str	r3, [r0, #32]
 449:Src/stm32f4xx_hal_msp.c ****     hdma_usart2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 830              		.loc 1 449 0
 831 00b8 4362     		str	r3, [r0, #36]
 450:Src/stm32f4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart2_tx) != HAL_OK)
 832              		.loc 1 450 0
 833 00ba FFF7FEFF 		bl	HAL_DMA_Init
 834              	.LVL53:
 835 00be 08B1     		cbz	r0, .L36
 451:Src/stm32f4xx_hal_msp.c ****     {
 452:Src/stm32f4xx_hal_msp.c ****       Error_Handler();
 836              		.loc 1 452 0
 837 00c0 FFF7FEFF 		bl	Error_Handler
 838              	.LVL54:
 839              	.L36:
 453:Src/stm32f4xx_hal_msp.c ****     }
 454:Src/stm32f4xx_hal_msp.c **** 
 455:Src/stm32f4xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmatx,hdma_usart2_tx);
 840              		.loc 1 455 0
 841 00c4 3D4B     		ldr	r3, .L41+20
 842 00c6 2363     		str	r3, [r4, #48]
 843 00c8 9C63     		str	r4, [r3, #56]
 456:Src/stm32f4xx_hal_msp.c **** 
 457:Src/stm32f4xx_hal_msp.c ****     /* USART2 interrupt Init */
 458:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 6, 0);
 844              		.loc 1 458 0
 845 00ca 0022     		movs	r2, #0
 846 00cc 0621     		movs	r1, #6
 847 00ce 2620     		movs	r0, #38
 848 00d0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 849              	.LVL55:
 459:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 850              		.loc 1 459 0
 851 00d4 2620     		movs	r0, #38
 852 00d6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 853              	.LVL56:
 854 00da 62E0     		b	.L33
 855              	.LVL57:
 856              	.L34:
 460:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 461:Src/stm32f4xx_hal_msp.c **** 
 462:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 1 */
 463:Src/stm32f4xx_hal_msp.c ****   }
 464:Src/stm32f4xx_hal_msp.c ****   else if(huart->Instance==USART6)
 857              		.loc 1 464 0
ARM GAS  /tmp/ccTLqSTf.s 			page 24


 858 00dc 394A     		ldr	r2, .L41+28
 859 00de 9342     		cmp	r3, r2
 860 00e0 5FD1     		bne	.L33
 861              	.LBB15:
 465:Src/stm32f4xx_hal_msp.c ****   {
 466:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART6_MspInit 0 */
 467:Src/stm32f4xx_hal_msp.c **** 
 468:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART6_MspInit 0 */
 469:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 470:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART6_CLK_ENABLE();
 862              		.loc 1 470 0
 863 00e2 0025     		movs	r5, #0
 864 00e4 0395     		str	r5, [sp, #12]
 865 00e6 314B     		ldr	r3, .L41+4
 866 00e8 5A6C     		ldr	r2, [r3, #68]
 867 00ea 42F02002 		orr	r2, r2, #32
 868 00ee 5A64     		str	r2, [r3, #68]
 869 00f0 5A6C     		ldr	r2, [r3, #68]
 870 00f2 02F02002 		and	r2, r2, #32
 871 00f6 0392     		str	r2, [sp, #12]
 872 00f8 039A     		ldr	r2, [sp, #12]
 873              	.LBE15:
 874              	.LBB16:
 471:Src/stm32f4xx_hal_msp.c ****   
 472:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 875              		.loc 1 472 0
 876 00fa 0495     		str	r5, [sp, #16]
 877 00fc 1A6B     		ldr	r2, [r3, #48]
 878 00fe 42F00402 		orr	r2, r2, #4
 879 0102 1A63     		str	r2, [r3, #48]
 880 0104 1B6B     		ldr	r3, [r3, #48]
 881 0106 03F00403 		and	r3, r3, #4
 882 010a 0493     		str	r3, [sp, #16]
 883 010c 049B     		ldr	r3, [sp, #16]
 884              	.LBE16:
 473:Src/stm32f4xx_hal_msp.c ****     /**USART6 GPIO Configuration    
 474:Src/stm32f4xx_hal_msp.c ****     PC6     ------> USART6_TX
 475:Src/stm32f4xx_hal_msp.c ****     PC7     ------> USART6_RX 
 476:Src/stm32f4xx_hal_msp.c ****     */
 477:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 885              		.loc 1 477 0
 886 010e C023     		movs	r3, #192
 887 0110 0593     		str	r3, [sp, #20]
 478:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 888              		.loc 1 478 0
 889 0112 0223     		movs	r3, #2
 890 0114 0693     		str	r3, [sp, #24]
 479:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 891              		.loc 1 479 0
 892 0116 0123     		movs	r3, #1
 893 0118 0793     		str	r3, [sp, #28]
 480:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 894              		.loc 1 480 0
 895 011a 0323     		movs	r3, #3
 896 011c 0893     		str	r3, [sp, #32]
 481:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 897              		.loc 1 481 0
ARM GAS  /tmp/ccTLqSTf.s 			page 25


 898 011e 0823     		movs	r3, #8
 899 0120 0993     		str	r3, [sp, #36]
 482:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 900              		.loc 1 482 0
 901 0122 05A9     		add	r1, sp, #20
 902 0124 2848     		ldr	r0, .L41+32
 903              	.LVL58:
 904 0126 FFF7FEFF 		bl	HAL_GPIO_Init
 905              	.LVL59:
 483:Src/stm32f4xx_hal_msp.c **** 
 484:Src/stm32f4xx_hal_msp.c ****     /* USART6 DMA Init */
 485:Src/stm32f4xx_hal_msp.c ****     /* USART6_RX Init */
 486:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Instance = DMA2_Stream1;
 906              		.loc 1 486 0
 907 012a 2848     		ldr	r0, .L41+36
 908 012c 284B     		ldr	r3, .L41+40
 909 012e 0360     		str	r3, [r0]
 487:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.Channel = DMA_CHANNEL_5;
 910              		.loc 1 487 0
 911 0130 4FF02063 		mov	r3, #167772160
 912 0134 4360     		str	r3, [r0, #4]
 488:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 913              		.loc 1 488 0
 914 0136 8560     		str	r5, [r0, #8]
 489:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 915              		.loc 1 489 0
 916 0138 C560     		str	r5, [r0, #12]
 490:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.MemInc = DMA_MINC_ENABLE;
 917              		.loc 1 490 0
 918 013a 4FF48063 		mov	r3, #1024
 919 013e 0361     		str	r3, [r0, #16]
 491:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 920              		.loc 1 491 0
 921 0140 4561     		str	r5, [r0, #20]
 492:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 922              		.loc 1 492 0
 923 0142 8561     		str	r5, [r0, #24]
 493:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.Mode = DMA_CIRCULAR;
 924              		.loc 1 493 0
 925 0144 4FF48073 		mov	r3, #256
 926 0148 C361     		str	r3, [r0, #28]
 494:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.Priority = DMA_PRIORITY_LOW;
 927              		.loc 1 494 0
 928 014a 0562     		str	r5, [r0, #32]
 495:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 929              		.loc 1 495 0
 930 014c 4562     		str	r5, [r0, #36]
 496:Src/stm32f4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart6_rx) != HAL_OK)
 931              		.loc 1 496 0
 932 014e FFF7FEFF 		bl	HAL_DMA_Init
 933              	.LVL60:
 934 0152 08B1     		cbz	r0, .L38
 497:Src/stm32f4xx_hal_msp.c ****     {
 498:Src/stm32f4xx_hal_msp.c ****       Error_Handler();
 935              		.loc 1 498 0
 936 0154 FFF7FEFF 		bl	Error_Handler
 937              	.LVL61:
ARM GAS  /tmp/ccTLqSTf.s 			page 26


 938              	.L38:
 499:Src/stm32f4xx_hal_msp.c ****     }
 500:Src/stm32f4xx_hal_msp.c **** 
 501:Src/stm32f4xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmarx,hdma_usart6_rx);
 939              		.loc 1 501 0
 940 0158 1C4B     		ldr	r3, .L41+36
 941 015a 6363     		str	r3, [r4, #52]
 942 015c 9C63     		str	r4, [r3, #56]
 502:Src/stm32f4xx_hal_msp.c **** 
 503:Src/stm32f4xx_hal_msp.c ****     /* USART6_TX Init */
 504:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Instance = DMA2_Stream6;
 943              		.loc 1 504 0
 944 015e 1D48     		ldr	r0, .L41+44
 945 0160 1D4B     		ldr	r3, .L41+48
 946 0162 0360     		str	r3, [r0]
 505:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.Channel = DMA_CHANNEL_5;
 947              		.loc 1 505 0
 948 0164 4FF02063 		mov	r3, #167772160
 949 0168 4360     		str	r3, [r0, #4]
 506:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 950              		.loc 1 506 0
 951 016a 4023     		movs	r3, #64
 952 016c 8360     		str	r3, [r0, #8]
 507:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 953              		.loc 1 507 0
 954 016e 0023     		movs	r3, #0
 955 0170 C360     		str	r3, [r0, #12]
 508:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.MemInc = DMA_MINC_ENABLE;
 956              		.loc 1 508 0
 957 0172 4FF48062 		mov	r2, #1024
 958 0176 0261     		str	r2, [r0, #16]
 509:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 959              		.loc 1 509 0
 960 0178 4361     		str	r3, [r0, #20]
 510:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 961              		.loc 1 510 0
 962 017a 8361     		str	r3, [r0, #24]
 511:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.Mode = DMA_NORMAL;
 963              		.loc 1 511 0
 964 017c C361     		str	r3, [r0, #28]
 512:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.Priority = DMA_PRIORITY_LOW;
 965              		.loc 1 512 0
 966 017e 0362     		str	r3, [r0, #32]
 513:Src/stm32f4xx_hal_msp.c ****     hdma_usart6_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 967              		.loc 1 513 0
 968 0180 4362     		str	r3, [r0, #36]
 514:Src/stm32f4xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart6_tx) != HAL_OK)
 969              		.loc 1 514 0
 970 0182 FFF7FEFF 		bl	HAL_DMA_Init
 971              	.LVL62:
 972 0186 08B1     		cbz	r0, .L39
 515:Src/stm32f4xx_hal_msp.c ****     {
 516:Src/stm32f4xx_hal_msp.c ****       Error_Handler();
 973              		.loc 1 516 0
 974 0188 FFF7FEFF 		bl	Error_Handler
 975              	.LVL63:
 976              	.L39:
ARM GAS  /tmp/ccTLqSTf.s 			page 27


 517:Src/stm32f4xx_hal_msp.c ****     }
 518:Src/stm32f4xx_hal_msp.c **** 
 519:Src/stm32f4xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmatx,hdma_usart6_tx);
 977              		.loc 1 519 0
 978 018c 114B     		ldr	r3, .L41+44
 979 018e 2363     		str	r3, [r4, #48]
 980 0190 9C63     		str	r4, [r3, #56]
 520:Src/stm32f4xx_hal_msp.c **** 
 521:Src/stm32f4xx_hal_msp.c ****     /* USART6 interrupt Init */
 522:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART6_IRQn, 8, 0);
 981              		.loc 1 522 0
 982 0192 0022     		movs	r2, #0
 983 0194 0821     		movs	r1, #8
 984 0196 4720     		movs	r0, #71
 985 0198 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 986              	.LVL64:
 523:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART6_IRQn);
 987              		.loc 1 523 0
 988 019c 4720     		movs	r0, #71
 989 019e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 990              	.LVL65:
 991              	.L33:
 524:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART6_MspInit 1 */
 525:Src/stm32f4xx_hal_msp.c **** 
 526:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART6_MspInit 1 */
 527:Src/stm32f4xx_hal_msp.c ****   }
 528:Src/stm32f4xx_hal_msp.c **** 
 529:Src/stm32f4xx_hal_msp.c **** }
 992              		.loc 1 529 0
 993 01a2 0BB0     		add	sp, sp, #44
 994              	.LCFI14:
 995              		.cfi_def_cfa_offset 12
 996              		@ sp needed
 997 01a4 30BD     		pop	{r4, r5, pc}
 998              	.LVL66:
 999              	.L42:
 1000 01a6 00BF     		.align	2
 1001              	.L41:
 1002 01a8 00440040 		.word	1073759232
 1003 01ac 00380240 		.word	1073887232
 1004 01b0 00000240 		.word	1073872896
 1005 01b4 00000000 		.word	hdma_usart2_rx
 1006 01b8 88600240 		.word	1073897608
 1007 01bc 00000000 		.word	hdma_usart2_tx
 1008 01c0 A0600240 		.word	1073897632
 1009 01c4 00140140 		.word	1073812480
 1010 01c8 00080240 		.word	1073874944
 1011 01cc 00000000 		.word	hdma_usart6_rx
 1012 01d0 28640240 		.word	1073898536
 1013 01d4 00000000 		.word	hdma_usart6_tx
 1014 01d8 A0640240 		.word	1073898656
 1015              		.cfi_endproc
 1016              	.LFE129:
 1018              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1019              		.align	2
 1020              		.global	HAL_UART_MspDeInit
 1021              		.thumb
ARM GAS  /tmp/ccTLqSTf.s 			page 28


 1022              		.thumb_func
 1024              	HAL_UART_MspDeInit:
 1025              	.LFB130:
 530:Src/stm32f4xx_hal_msp.c **** 
 531:Src/stm32f4xx_hal_msp.c **** /**
 532:Src/stm32f4xx_hal_msp.c **** * @brief UART MSP De-Initialization
 533:Src/stm32f4xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 534:Src/stm32f4xx_hal_msp.c **** * @param huart: UART handle pointer
 535:Src/stm32f4xx_hal_msp.c **** * @retval None
 536:Src/stm32f4xx_hal_msp.c **** */
 537:Src/stm32f4xx_hal_msp.c **** 
 538:Src/stm32f4xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 539:Src/stm32f4xx_hal_msp.c **** {
 1026              		.loc 1 539 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL67:
 1031 0000 10B5     		push	{r4, lr}
 1032              	.LCFI15:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 4, -8
 1035              		.cfi_offset 14, -4
 1036 0002 0446     		mov	r4, r0
 540:Src/stm32f4xx_hal_msp.c **** 
 541:Src/stm32f4xx_hal_msp.c ****   if(huart->Instance==USART2)
 1037              		.loc 1 541 0
 1038 0004 0368     		ldr	r3, [r0]
 1039 0006 174A     		ldr	r2, .L47
 1040 0008 9342     		cmp	r3, r2
 1041 000a 13D1     		bne	.L44
 542:Src/stm32f4xx_hal_msp.c ****   {
 543:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 544:Src/stm32f4xx_hal_msp.c **** 
 545:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 0 */
 546:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 547:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 1042              		.loc 1 547 0
 1043 000c 02F5FA32 		add	r2, r2, #128000
 1044 0010 136C     		ldr	r3, [r2, #64]
 1045 0012 23F40033 		bic	r3, r3, #131072
 1046 0016 1364     		str	r3, [r2, #64]
 548:Src/stm32f4xx_hal_msp.c ****   
 549:Src/stm32f4xx_hal_msp.c ****     /**USART2 GPIO Configuration    
 550:Src/stm32f4xx_hal_msp.c ****     PA2     ------> USART2_TX
 551:Src/stm32f4xx_hal_msp.c ****     PA3     ------> USART2_RX 
 552:Src/stm32f4xx_hal_msp.c ****     */
 553:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 1047              		.loc 1 553 0
 1048 0018 0C21     		movs	r1, #12
 1049 001a 1348     		ldr	r0, .L47+4
 1050              	.LVL68:
 1051 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 1052              	.LVL69:
 554:Src/stm32f4xx_hal_msp.c **** 
 555:Src/stm32f4xx_hal_msp.c ****     /* USART2 DMA DeInit */
 556:Src/stm32f4xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmarx);
ARM GAS  /tmp/ccTLqSTf.s 			page 29


 1053              		.loc 1 556 0
 1054 0020 606B     		ldr	r0, [r4, #52]
 1055 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 1056              	.LVL70:
 557:Src/stm32f4xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
 1057              		.loc 1 557 0
 1058 0026 206B     		ldr	r0, [r4, #48]
 1059 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 1060              	.LVL71:
 558:Src/stm32f4xx_hal_msp.c **** 
 559:Src/stm32f4xx_hal_msp.c ****     /* USART2 interrupt DeInit */
 560:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 1061              		.loc 1 560 0
 1062 002c 2620     		movs	r0, #38
 1063 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1064              	.LVL72:
 1065 0032 10BD     		pop	{r4, pc}
 1066              	.LVL73:
 1067              	.L44:
 561:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 562:Src/stm32f4xx_hal_msp.c **** 
 563:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 1 */
 564:Src/stm32f4xx_hal_msp.c ****   }
 565:Src/stm32f4xx_hal_msp.c ****   else if(huart->Instance==USART6)
 1068              		.loc 1 565 0
 1069 0034 0D4A     		ldr	r2, .L47+8
 1070 0036 9342     		cmp	r3, r2
 1071 0038 12D1     		bne	.L43
 566:Src/stm32f4xx_hal_msp.c ****   {
 567:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART6_MspDeInit 0 */
 568:Src/stm32f4xx_hal_msp.c **** 
 569:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART6_MspDeInit 0 */
 570:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 571:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART6_CLK_DISABLE();
 1072              		.loc 1 571 0
 1073 003a 02F59232 		add	r2, r2, #74752
 1074 003e 536C     		ldr	r3, [r2, #68]
 1075 0040 23F02003 		bic	r3, r3, #32
 1076 0044 5364     		str	r3, [r2, #68]
 572:Src/stm32f4xx_hal_msp.c ****   
 573:Src/stm32f4xx_hal_msp.c ****     /**USART6 GPIO Configuration    
 574:Src/stm32f4xx_hal_msp.c ****     PC6     ------> USART6_TX
 575:Src/stm32f4xx_hal_msp.c ****     PC7     ------> USART6_RX 
 576:Src/stm32f4xx_hal_msp.c ****     */
 577:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_6|GPIO_PIN_7);
 1077              		.loc 1 577 0
 1078 0046 C021     		movs	r1, #192
 1079 0048 0948     		ldr	r0, .L47+12
 1080              	.LVL74:
 1081 004a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1082              	.LVL75:
 578:Src/stm32f4xx_hal_msp.c **** 
 579:Src/stm32f4xx_hal_msp.c ****     /* USART6 DMA DeInit */
 580:Src/stm32f4xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmarx);
 1083              		.loc 1 580 0
 1084 004e 606B     		ldr	r0, [r4, #52]
 1085 0050 FFF7FEFF 		bl	HAL_DMA_DeInit
ARM GAS  /tmp/ccTLqSTf.s 			page 30


 1086              	.LVL76:
 581:Src/stm32f4xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmatx);
 1087              		.loc 1 581 0
 1088 0054 206B     		ldr	r0, [r4, #48]
 1089 0056 FFF7FEFF 		bl	HAL_DMA_DeInit
 1090              	.LVL77:
 582:Src/stm32f4xx_hal_msp.c **** 
 583:Src/stm32f4xx_hal_msp.c ****     /* USART6 interrupt DeInit */
 584:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART6_IRQn);
 1091              		.loc 1 584 0
 1092 005a 4720     		movs	r0, #71
 1093 005c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1094              	.LVL78:
 1095              	.L43:
 1096 0060 10BD     		pop	{r4, pc}
 1097              	.LVL79:
 1098              	.L48:
 1099 0062 00BF     		.align	2
 1100              	.L47:
 1101 0064 00440040 		.word	1073759232
 1102 0068 00000240 		.word	1073872896
 1103 006c 00140140 		.word	1073812480
 1104 0070 00080240 		.word	1073874944
 1105              		.cfi_endproc
 1106              	.LFE130:
 1108              		.section	.bss.HAL_RCC_CAN1_CLK_ENABLED,"aw",%nobits
 1109              		.align	2
 1110              		.set	.LANCHOR0,. + 0
 1113              	HAL_RCC_CAN1_CLK_ENABLED:
 1114 0000 00000000 		.space	4
 1115              		.text
 1116              	.Letext0:
 1117              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 1118              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1119              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1120              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1121              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1122              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1123              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1124              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1125              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1126              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1127              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 1128              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1129              		.file 14 "Inc/main.h"
ARM GAS  /tmp/ccTLqSTf.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_msp.c
     /tmp/ccTLqSTf.s:22     .text.HAL_MspInit:00000000 $t
     /tmp/ccTLqSTf.s:27     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccTLqSTf.s:79     .text.HAL_MspInit:00000040 $d
     /tmp/ccTLqSTf.s:84     .text.HAL_ADC_MspInit:00000000 $t
     /tmp/ccTLqSTf.s:89     .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/ccTLqSTf.s:260    .text.HAL_ADC_MspInit:000000f4 $d
     /tmp/ccTLqSTf.s:269    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/ccTLqSTf.s:274    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/ccTLqSTf.s:333    .text.HAL_ADC_MspDeInit:00000040 $d
     /tmp/ccTLqSTf.s:342    .text.HAL_CAN_MspInit:00000000 $t
     /tmp/ccTLqSTf.s:347    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
     /tmp/ccTLqSTf.s:569    .text.HAL_CAN_MspInit:00000144 $d
     /tmp/ccTLqSTf.s:579    .text.HAL_CAN_MspDeInit:00000000 $t
     /tmp/ccTLqSTf.s:584    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
     /tmp/ccTLqSTf.s:680    .text.HAL_CAN_MspDeInit:00000080 $d
     /tmp/ccTLqSTf.s:690    .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccTLqSTf.s:695    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccTLqSTf.s:1002   .text.HAL_UART_MspInit:000001a8 $d
     /tmp/ccTLqSTf.s:1019   .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccTLqSTf.s:1024   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccTLqSTf.s:1101   .text.HAL_UART_MspDeInit:00000064 $d
     /tmp/ccTLqSTf.s:1109   .bss.HAL_RCC_CAN1_CLK_ENABLED:00000000 $d
     /tmp/ccTLqSTf.s:1113   .bss.HAL_RCC_CAN1_CLK_ENABLED:00000000 HAL_RCC_CAN1_CLK_ENABLED
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
HAL_NVIC_EnableIRQ
hdma_adc1
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
hdma_usart2_rx
hdma_usart2_tx
hdma_usart6_rx
hdma_usart6_tx

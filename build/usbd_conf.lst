ARM GAS  /tmp/cc1pd6bw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"usbd_conf.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_PCD_MspInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_PCD_MspInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_PCD_MspInit:
  28              	.LFB124:
  29              		.file 1 "Src/usbd_conf.c"
   1:Src/usbd_conf.c **** /**
   2:Src/usbd_conf.c ****   ******************************************************************************
   3:Src/usbd_conf.c ****   * @file           : usbd_conf.c
   4:Src/usbd_conf.c ****   * @version        : v1.0_Cube
   5:Src/usbd_conf.c ****   * @brief          : This file implements the board support package for the USB device library
   6:Src/usbd_conf.c ****   ******************************************************************************
   7:Src/usbd_conf.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_conf.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_conf.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_conf.c ****   * inserted by the user or by software development tools
  11:Src/usbd_conf.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_conf.c ****   *
  13:Src/usbd_conf.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/usbd_conf.c ****   * All rights reserved.
  15:Src/usbd_conf.c ****   *
  16:Src/usbd_conf.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_conf.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_conf.c ****   *
  19:Src/usbd_conf.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_conf.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_conf.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_conf.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_conf.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_conf.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_conf.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_conf.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_conf.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_conf.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  /tmp/cc1pd6bw.s 			page 2


  30:Src/usbd_conf.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_conf.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_conf.c ****   *    this license. 
  33:Src/usbd_conf.c ****   *
  34:Src/usbd_conf.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_conf.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_conf.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_conf.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_conf.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_conf.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_conf.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_conf.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_conf.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_conf.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_conf.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_conf.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_conf.c ****   *
  47:Src/usbd_conf.c ****   ******************************************************************************
  48:Src/usbd_conf.c ****   */
  49:Src/usbd_conf.c **** 
  50:Src/usbd_conf.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_conf.c **** #include "stm32f4xx.h"
  52:Src/usbd_conf.c **** #include "stm32f4xx_hal.h"
  53:Src/usbd_conf.c **** #include "usbd_def.h"
  54:Src/usbd_conf.c **** #include "usbd_core.h"
  55:Src/usbd_conf.c **** 
  56:Src/usbd_conf.c **** /* USER CODE BEGIN Includes */
  57:Src/usbd_conf.c **** 
  58:Src/usbd_conf.c **** /* USER CODE END Includes */
  59:Src/usbd_conf.c **** 
  60:Src/usbd_conf.c **** /* Private typedef -----------------------------------------------------------*/
  61:Src/usbd_conf.c **** /* Private define ------------------------------------------------------------*/
  62:Src/usbd_conf.c **** /* Private macro -------------------------------------------------------------*/
  63:Src/usbd_conf.c **** 
  64:Src/usbd_conf.c **** /* USER CODE BEGIN PV */
  65:Src/usbd_conf.c **** /* Private variables ---------------------------------------------------------*/
  66:Src/usbd_conf.c **** 
  67:Src/usbd_conf.c **** /* USER CODE END PV */
  68:Src/usbd_conf.c **** 
  69:Src/usbd_conf.c ****                 PCD_HandleTypeDef hpcd_USB_OTG_FS;
  70:Src/usbd_conf.c **** void Error_Handler(void);
  71:Src/usbd_conf.c **** 
  72:Src/usbd_conf.c **** /* External functions --------------------------------------------------------*/
  73:Src/usbd_conf.c **** void SystemClock_Config(void);
  74:Src/usbd_conf.c **** 
  75:Src/usbd_conf.c **** /* USER CODE BEGIN 0 */
  76:Src/usbd_conf.c **** 
  77:Src/usbd_conf.c **** /* USER CODE END 0 */
  78:Src/usbd_conf.c **** 
  79:Src/usbd_conf.c **** /* USER CODE BEGIN PFP */
  80:Src/usbd_conf.c **** /* Private function prototypes -----------------------------------------------*/
  81:Src/usbd_conf.c **** 
  82:Src/usbd_conf.c **** /* USER CODE END PFP */
  83:Src/usbd_conf.c **** 
  84:Src/usbd_conf.c **** /* Private functions ---------------------------------------------------------*/
  85:Src/usbd_conf.c **** 
  86:Src/usbd_conf.c **** /* USER CODE BEGIN 1 */
ARM GAS  /tmp/cc1pd6bw.s 			page 3


  87:Src/usbd_conf.c **** 
  88:Src/usbd_conf.c **** /* USER CODE END 1 */
  89:Src/usbd_conf.c **** 
  90:Src/usbd_conf.c **** /*******************************************************************************
  91:Src/usbd_conf.c ****                        LL Driver Callbacks (PCD -> USB Device Library)
  92:Src/usbd_conf.c **** *******************************************************************************/
  93:Src/usbd_conf.c **** /* MSP Init */
  94:Src/usbd_conf.c **** 
  95:Src/usbd_conf.c **** void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
  96:Src/usbd_conf.c **** {
  30              		.loc 1 96 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 24
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  97:Src/usbd_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  98:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB_OTG_FS)
  35              		.loc 1 98 0
  36 0000 0368     		ldr	r3, [r0]
  37 0002 B3F1A04F 		cmp	r3, #1342177280
  38 0006 29D1     		bne	.L4
  96:Src/usbd_conf.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  39              		.loc 1 96 0
  40 0008 10B5     		push	{r4, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
  45 000a 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  99:Src/usbd_conf.c ****   {
 100:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */
 101:Src/usbd_conf.c **** 
 102:Src/usbd_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 0 */
 103:Src/usbd_conf.c ****   
 104:Src/usbd_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 105:Src/usbd_conf.c ****     PA11     ------> USB_OTG_FS_DM
 106:Src/usbd_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 107:Src/usbd_conf.c ****     */
 108:Src/usbd_conf.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  48              		.loc 1 108 0
  49 000c 4FF4C053 		mov	r3, #6144
  50 0010 0193     		str	r3, [sp, #4]
 109:Src/usbd_conf.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  51              		.loc 1 109 0
  52 0012 0223     		movs	r3, #2
  53 0014 0293     		str	r3, [sp, #8]
 110:Src/usbd_conf.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  54              		.loc 1 110 0
  55 0016 0024     		movs	r4, #0
  56 0018 0394     		str	r4, [sp, #12]
 111:Src/usbd_conf.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  57              		.loc 1 111 0
  58 001a 0323     		movs	r3, #3
  59 001c 0493     		str	r3, [sp, #16]
 112:Src/usbd_conf.c ****     GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
ARM GAS  /tmp/cc1pd6bw.s 			page 4


  60              		.loc 1 112 0
  61 001e 0A23     		movs	r3, #10
  62 0020 0593     		str	r3, [sp, #20]
 113:Src/usbd_conf.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  63              		.loc 1 113 0
  64 0022 01A9     		add	r1, sp, #4
  65 0024 0E48     		ldr	r0, .L5
  66              	.LVL1:
  67 0026 FFF7FEFF 		bl	HAL_GPIO_Init
  68              	.LVL2:
 114:Src/usbd_conf.c **** 
 115:Src/usbd_conf.c ****     /* Peripheral clock enable */
 116:Src/usbd_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
  69              		.loc 1 116 0
  70 002a 0E4B     		ldr	r3, .L5+4
  71 002c 5A6B     		ldr	r2, [r3, #52]
  72 002e 42F08002 		orr	r2, r2, #128
  73 0032 5A63     		str	r2, [r3, #52]
  74              	.LBB2:
  75 0034 0094     		str	r4, [sp]
  76 0036 5A6C     		ldr	r2, [r3, #68]
  77 0038 42F48042 		orr	r2, r2, #16384
  78 003c 5A64     		str	r2, [r3, #68]
  79 003e 5B6C     		ldr	r3, [r3, #68]
  80 0040 03F48043 		and	r3, r3, #16384
  81 0044 0093     		str	r3, [sp]
  82 0046 009B     		ldr	r3, [sp]
  83              	.LBE2:
 117:Src/usbd_conf.c **** 
 118:Src/usbd_conf.c ****     /* Peripheral interrupt init */
 119:Src/usbd_conf.c ****     HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
  84              		.loc 1 119 0
  85 0048 2246     		mov	r2, r4
  86 004a 0521     		movs	r1, #5
  87 004c 4320     		movs	r0, #67
  88 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  89              	.LVL3:
 120:Src/usbd_conf.c ****     HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  90              		.loc 1 120 0
  91 0052 4320     		movs	r0, #67
  92 0054 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  93              	.LVL4:
 121:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */
 122:Src/usbd_conf.c **** 
 123:Src/usbd_conf.c ****   /* USER CODE END USB_OTG_FS_MspInit 1 */
 124:Src/usbd_conf.c ****   }
 125:Src/usbd_conf.c **** }
  94              		.loc 1 125 0
  95 0058 06B0     		add	sp, sp, #24
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 005a 10BD     		pop	{r4, pc}
 100              	.LVL5:
 101              	.L4:
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc1pd6bw.s 			page 5


 104              		.cfi_restore 4
 105              		.cfi_restore 14
 106 005c 7047     		bx	lr
 107              	.L6:
 108 005e 00BF     		.align	2
 109              	.L5:
 110 0060 00000240 		.word	1073872896
 111 0064 00380240 		.word	1073887232
 112              		.cfi_endproc
 113              	.LFE124:
 115              		.section	.text.HAL_PCD_MspDeInit,"ax",%progbits
 116              		.align	2
 117              		.global	HAL_PCD_MspDeInit
 118              		.thumb
 119              		.thumb_func
 121              	HAL_PCD_MspDeInit:
 122              	.LFB125:
 126:Src/usbd_conf.c **** 
 127:Src/usbd_conf.c **** void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
 128:Src/usbd_conf.c **** {
 123              		.loc 1 128 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL6:
 128 0000 08B5     		push	{r3, lr}
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
 129:Src/usbd_conf.c ****   if(pcdHandle->Instance==USB_OTG_FS)
 133              		.loc 1 129 0
 134 0002 0368     		ldr	r3, [r0]
 135 0004 B3F1A04F 		cmp	r3, #1342177280
 136 0008 0CD1     		bne	.L7
 130:Src/usbd_conf.c ****   {
 131:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 0 */
 132:Src/usbd_conf.c **** 
 133:Src/usbd_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 0 */
 134:Src/usbd_conf.c ****     /* Peripheral clock disable */
 135:Src/usbd_conf.c ****     __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
 137              		.loc 1 135 0
 138 000a 074A     		ldr	r2, .L10
 139 000c 536B     		ldr	r3, [r2, #52]
 140 000e 23F08003 		bic	r3, r3, #128
 141 0012 5363     		str	r3, [r2, #52]
 136:Src/usbd_conf.c ****   
 137:Src/usbd_conf.c ****     /**USB_OTG_FS GPIO Configuration    
 138:Src/usbd_conf.c ****     PA11     ------> USB_OTG_FS_DM
 139:Src/usbd_conf.c ****     PA12     ------> USB_OTG_FS_DP 
 140:Src/usbd_conf.c ****     */
 141:Src/usbd_conf.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 142              		.loc 1 141 0
 143 0014 4FF4C051 		mov	r1, #6144
 144 0018 0448     		ldr	r0, .L10+4
 145              	.LVL7:
 146 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  /tmp/cc1pd6bw.s 			page 6


 147              	.LVL8:
 142:Src/usbd_conf.c **** 
 143:Src/usbd_conf.c ****     /* Peripheral interrupt Deinit*/
 144:Src/usbd_conf.c ****     HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
 148              		.loc 1 144 0
 149 001e 4320     		movs	r0, #67
 150 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 151              	.LVL9:
 152              	.L7:
 153 0024 08BD     		pop	{r3, pc}
 154              	.L11:
 155 0026 00BF     		.align	2
 156              	.L10:
 157 0028 00380240 		.word	1073887232
 158 002c 00000240 		.word	1073872896
 159              		.cfi_endproc
 160              	.LFE125:
 162              		.section	.text.HAL_PCD_SetupStageCallback,"ax",%progbits
 163              		.align	2
 164              		.global	HAL_PCD_SetupStageCallback
 165              		.thumb
 166              		.thumb_func
 168              	HAL_PCD_SetupStageCallback:
 169              	.LFB126:
 145:Src/usbd_conf.c **** 
 146:Src/usbd_conf.c ****   /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */
 147:Src/usbd_conf.c **** 
 148:Src/usbd_conf.c ****   /* USER CODE END USB_OTG_FS_MspDeInit 1 */
 149:Src/usbd_conf.c ****   }
 150:Src/usbd_conf.c **** }
 151:Src/usbd_conf.c **** 
 152:Src/usbd_conf.c **** /**
 153:Src/usbd_conf.c ****   * @brief  Setup stage callback
 154:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 155:Src/usbd_conf.c ****   * @retval None
 156:Src/usbd_conf.c ****   */
 157:Src/usbd_conf.c **** void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
 158:Src/usbd_conf.c **** {
 170              		.loc 1 158 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL10:
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 159:Src/usbd_conf.c ****   USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 180              		.loc 1 159 0
 181 0002 00F56F71 		add	r1, r0, #956
 182 0006 D0F8EC03 		ldr	r0, [r0, #1004]
 183              	.LVL11:
 184 000a FFF7FEFF 		bl	USBD_LL_SetupStage
 185              	.LVL12:
 186 000e 08BD     		pop	{r3, pc}
 187              		.cfi_endproc
ARM GAS  /tmp/cc1pd6bw.s 			page 7


 188              	.LFE126:
 190              		.section	.text.HAL_PCD_DataOutStageCallback,"ax",%progbits
 191              		.align	2
 192              		.global	HAL_PCD_DataOutStageCallback
 193              		.thumb
 194              		.thumb_func
 196              	HAL_PCD_DataOutStageCallback:
 197              	.LFB127:
 160:Src/usbd_conf.c **** }
 161:Src/usbd_conf.c **** 
 162:Src/usbd_conf.c **** /**
 163:Src/usbd_conf.c ****   * @brief  Data Out stage callback.
 164:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 165:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 166:Src/usbd_conf.c ****   * @retval None
 167:Src/usbd_conf.c ****   */
 168:Src/usbd_conf.c **** void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 169:Src/usbd_conf.c **** {
 198              		.loc 1 169 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL13:
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI6:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 170:Src/usbd_conf.c ****   USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 208              		.loc 1 170 0
 209 0002 C1EBC102 		rsb	r2, r1, r1, lsl #3
 210 0006 9300     		lsls	r3, r2, #2
 211 0008 0344     		add	r3, r3, r0
 212 000a D3F80422 		ldr	r2, [r3, #516]
 213 000e D0F8EC03 		ldr	r0, [r0, #1004]
 214              	.LVL14:
 215 0012 FFF7FEFF 		bl	USBD_LL_DataOutStage
 216              	.LVL15:
 217 0016 08BD     		pop	{r3, pc}
 218              		.cfi_endproc
 219              	.LFE127:
 221              		.section	.text.HAL_PCD_DataInStageCallback,"ax",%progbits
 222              		.align	2
 223              		.global	HAL_PCD_DataInStageCallback
 224              		.thumb
 225              		.thumb_func
 227              	HAL_PCD_DataInStageCallback:
 228              	.LFB128:
 171:Src/usbd_conf.c **** }
 172:Src/usbd_conf.c **** 
 173:Src/usbd_conf.c **** /**
 174:Src/usbd_conf.c ****   * @brief  Data In stage callback.
 175:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 176:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 177:Src/usbd_conf.c ****   * @retval None
 178:Src/usbd_conf.c ****   */
 179:Src/usbd_conf.c **** void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
ARM GAS  /tmp/cc1pd6bw.s 			page 8


 180:Src/usbd_conf.c **** {
 229              		.loc 1 180 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL16:
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 181:Src/usbd_conf.c ****   USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 239              		.loc 1 181 0
 240 0002 C1EBC102 		rsb	r2, r1, r1, lsl #3
 241 0006 9300     		lsls	r3, r2, #2
 242 0008 0344     		add	r3, r3, r0
 243 000a 5A6C     		ldr	r2, [r3, #68]
 244 000c D0F8EC03 		ldr	r0, [r0, #1004]
 245              	.LVL17:
 246 0010 FFF7FEFF 		bl	USBD_LL_DataInStage
 247              	.LVL18:
 248 0014 08BD     		pop	{r3, pc}
 249              		.cfi_endproc
 250              	.LFE128:
 252 0016 00BF     		.section	.text.HAL_PCD_SOFCallback,"ax",%progbits
 253              		.align	2
 254              		.global	HAL_PCD_SOFCallback
 255              		.thumb
 256              		.thumb_func
 258              	HAL_PCD_SOFCallback:
 259              	.LFB129:
 182:Src/usbd_conf.c **** }
 183:Src/usbd_conf.c **** 
 184:Src/usbd_conf.c **** /**
 185:Src/usbd_conf.c ****   * @brief  SOF callback.
 186:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 187:Src/usbd_conf.c ****   * @retval None
 188:Src/usbd_conf.c ****   */
 189:Src/usbd_conf.c **** void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
 190:Src/usbd_conf.c **** {
 260              		.loc 1 190 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              	.LVL19:
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI8:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 191:Src/usbd_conf.c ****   USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 270              		.loc 1 191 0
 271 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 272              	.LVL20:
 273 0006 FFF7FEFF 		bl	USBD_LL_SOF
 274              	.LVL21:
 275 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc1pd6bw.s 			page 9


 276              		.cfi_endproc
 277              	.LFE129:
 279              		.section	.text.HAL_PCD_ResetCallback,"ax",%progbits
 280              		.align	2
 281              		.global	HAL_PCD_ResetCallback
 282              		.thumb
 283              		.thumb_func
 285              	HAL_PCD_ResetCallback:
 286              	.LFB130:
 192:Src/usbd_conf.c **** }
 193:Src/usbd_conf.c **** 
 194:Src/usbd_conf.c **** /**
 195:Src/usbd_conf.c ****   * @brief  Reset callback.
 196:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 197:Src/usbd_conf.c ****   * @retval None
 198:Src/usbd_conf.c ****   */
 199:Src/usbd_conf.c **** void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
 200:Src/usbd_conf.c **** { 
 287              		.loc 1 200 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL22:
 292 0000 10B5     		push	{r4, lr}
 293              	.LCFI9:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 14, -4
 297 0002 0446     		mov	r4, r0
 298              	.LVL23:
 201:Src/usbd_conf.c ****   USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 202:Src/usbd_conf.c **** 
 203:Src/usbd_conf.c ****   /* Set USB current speed. */
 204:Src/usbd_conf.c ****   switch (hpcd->Init.speed)
 299              		.loc 1 204 0
 300 0004 C368     		ldr	r3, [r0, #12]
 301 0006 0BB9     		cbnz	r3, .L24
 205:Src/usbd_conf.c ****   {
 206:Src/usbd_conf.c ****   case PCD_SPEED_HIGH:
 207:Src/usbd_conf.c ****     speed = USBD_SPEED_HIGH;
 302              		.loc 1 207 0
 303 0008 0021     		movs	r1, #0
 304 000a 00E0     		b	.L21
 305              	.L24:
 208:Src/usbd_conf.c ****     break;
 209:Src/usbd_conf.c ****   case PCD_SPEED_FULL:
 210:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;
 306              		.loc 1 210 0
 307 000c 0121     		movs	r1, #1
 308              	.L21:
 309              	.LVL24:
 211:Src/usbd_conf.c ****     break;
 212:Src/usbd_conf.c **** 	
 213:Src/usbd_conf.c ****   default:
 214:Src/usbd_conf.c ****     speed = USBD_SPEED_FULL;
 215:Src/usbd_conf.c ****     break;    
 216:Src/usbd_conf.c ****   }
ARM GAS  /tmp/cc1pd6bw.s 			page 10


 217:Src/usbd_conf.c ****   USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 310              		.loc 1 217 0
 311 000e D4F8EC03 		ldr	r0, [r4, #1004]
 312              	.LVL25:
 313 0012 FFF7FEFF 		bl	USBD_LL_SetSpeed
 314              	.LVL26:
 218:Src/usbd_conf.c ****   
 219:Src/usbd_conf.c ****   /* Reset Device. */
 220:Src/usbd_conf.c ****   USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 315              		.loc 1 220 0
 316 0016 D4F8EC03 		ldr	r0, [r4, #1004]
 317 001a FFF7FEFF 		bl	USBD_LL_Reset
 318              	.LVL27:
 319 001e 10BD     		pop	{r4, pc}
 320              		.cfi_endproc
 321              	.LFE130:
 323              		.section	.text.HAL_PCD_SuspendCallback,"ax",%progbits
 324              		.align	2
 325              		.global	HAL_PCD_SuspendCallback
 326              		.thumb
 327              		.thumb_func
 329              	HAL_PCD_SuspendCallback:
 330              	.LFB131:
 221:Src/usbd_conf.c **** }
 222:Src/usbd_conf.c **** 
 223:Src/usbd_conf.c **** /**
 224:Src/usbd_conf.c ****   * @brief  Suspend callback.
 225:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 226:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 227:Src/usbd_conf.c ****   * @retval None
 228:Src/usbd_conf.c ****   */
 229:Src/usbd_conf.c **** void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
 230:Src/usbd_conf.c **** {
 331              		.loc 1 230 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL28:
 336 0000 10B5     		push	{r4, lr}
 337              	.LCFI10:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
 341 0002 0446     		mov	r4, r0
 231:Src/usbd_conf.c ****   /* Inform USB library that core enters in suspend Mode. */
 232:Src/usbd_conf.c ****   USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 342              		.loc 1 232 0
 343 0004 D0F8EC03 		ldr	r0, [r0, #1004]
 344              	.LVL29:
 345 0008 FFF7FEFF 		bl	USBD_LL_Suspend
 346              	.LVL30:
 233:Src/usbd_conf.c ****   __HAL_PCD_GATE_PHYCLOCK(hpcd);
 347              		.loc 1 233 0
 348 000c 2268     		ldr	r2, [r4]
 349 000e D2F8003E 		ldr	r3, [r2, #3584]
 350 0012 43F00103 		orr	r3, r3, #1
 351 0016 C2F8003E 		str	r3, [r2, #3584]
ARM GAS  /tmp/cc1pd6bw.s 			page 11


 234:Src/usbd_conf.c ****   /* Enter in STOP mode. */
 235:Src/usbd_conf.c ****   /* USER CODE BEGIN 2 */
 236:Src/usbd_conf.c ****   if (hpcd->Init.low_power_enable)
 352              		.loc 1 236 0
 353 001a 236A     		ldr	r3, [r4, #32]
 354 001c 23B1     		cbz	r3, .L26
 237:Src/usbd_conf.c ****   {
 238:Src/usbd_conf.c ****     /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
 239:Src/usbd_conf.c ****     SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 355              		.loc 1 239 0
 356 001e 034A     		ldr	r2, .L29
 357 0020 1369     		ldr	r3, [r2, #16]
 358 0022 43F00603 		orr	r3, r3, #6
 359 0026 1361     		str	r3, [r2, #16]
 360              	.L26:
 361 0028 10BD     		pop	{r4, pc}
 362              	.LVL31:
 363              	.L30:
 364 002a 00BF     		.align	2
 365              	.L29:
 366 002c 00ED00E0 		.word	-536810240
 367              		.cfi_endproc
 368              	.LFE131:
 370              		.section	.text.HAL_PCD_ResumeCallback,"ax",%progbits
 371              		.align	2
 372              		.global	HAL_PCD_ResumeCallback
 373              		.thumb
 374              		.thumb_func
 376              	HAL_PCD_ResumeCallback:
 377              	.LFB132:
 240:Src/usbd_conf.c ****   }
 241:Src/usbd_conf.c ****   /* USER CODE END 2 */
 242:Src/usbd_conf.c **** }
 243:Src/usbd_conf.c **** 
 244:Src/usbd_conf.c **** /**
 245:Src/usbd_conf.c ****   * @brief  Resume callback.
 246:Src/usbd_conf.c ****   * When Low power mode is enabled the debug cannot be used (IAR, Keil doesn't support it)
 247:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 248:Src/usbd_conf.c ****   * @retval None
 249:Src/usbd_conf.c ****   */
 250:Src/usbd_conf.c **** void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
 251:Src/usbd_conf.c **** {
 378              		.loc 1 251 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              	.LVL32:
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI11:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 252:Src/usbd_conf.c ****   /* USER CODE BEGIN 3 */
 253:Src/usbd_conf.c **** 
 254:Src/usbd_conf.c ****   /* USER CODE END 3 */
 255:Src/usbd_conf.c ****   USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 388              		.loc 1 255 0
ARM GAS  /tmp/cc1pd6bw.s 			page 12


 389 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 390              	.LVL33:
 391 0006 FFF7FEFF 		bl	USBD_LL_Resume
 392              	.LVL34:
 393 000a 08BD     		pop	{r3, pc}
 394              		.cfi_endproc
 395              	.LFE132:
 397              		.section	.text.HAL_PCD_ISOOUTIncompleteCallback,"ax",%progbits
 398              		.align	2
 399              		.global	HAL_PCD_ISOOUTIncompleteCallback
 400              		.thumb
 401              		.thumb_func
 403              	HAL_PCD_ISOOUTIncompleteCallback:
 404              	.LFB133:
 256:Src/usbd_conf.c **** }
 257:Src/usbd_conf.c **** 
 258:Src/usbd_conf.c **** /**
 259:Src/usbd_conf.c ****   * @brief  ISOOUTIncomplete callback.
 260:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 261:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 262:Src/usbd_conf.c ****   * @retval None
 263:Src/usbd_conf.c ****   */
 264:Src/usbd_conf.c **** void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 265:Src/usbd_conf.c **** {
 405              		.loc 1 265 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              	.LVL35:
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI12:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
 266:Src/usbd_conf.c ****   USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 415              		.loc 1 266 0
 416 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 417              	.LVL36:
 418 0006 FFF7FEFF 		bl	USBD_LL_IsoOUTIncomplete
 419              	.LVL37:
 420 000a 08BD     		pop	{r3, pc}
 421              		.cfi_endproc
 422              	.LFE133:
 424              		.section	.text.HAL_PCD_ISOINIncompleteCallback,"ax",%progbits
 425              		.align	2
 426              		.global	HAL_PCD_ISOINIncompleteCallback
 427              		.thumb
 428              		.thumb_func
 430              	HAL_PCD_ISOINIncompleteCallback:
 431              	.LFB134:
 267:Src/usbd_conf.c **** }
 268:Src/usbd_conf.c **** 
 269:Src/usbd_conf.c **** /**
 270:Src/usbd_conf.c ****   * @brief  ISOINIncomplete callback.
 271:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 272:Src/usbd_conf.c ****   * @param  epnum: Endpoint number
 273:Src/usbd_conf.c ****   * @retval None
ARM GAS  /tmp/cc1pd6bw.s 			page 13


 274:Src/usbd_conf.c ****   */
 275:Src/usbd_conf.c **** void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
 276:Src/usbd_conf.c **** {
 432              		.loc 1 276 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL38:
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI13:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 277:Src/usbd_conf.c ****   USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 442              		.loc 1 277 0
 443 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 444              	.LVL39:
 445 0006 FFF7FEFF 		bl	USBD_LL_IsoINIncomplete
 446              	.LVL40:
 447 000a 08BD     		pop	{r3, pc}
 448              		.cfi_endproc
 449              	.LFE134:
 451              		.section	.text.HAL_PCD_ConnectCallback,"ax",%progbits
 452              		.align	2
 453              		.global	HAL_PCD_ConnectCallback
 454              		.thumb
 455              		.thumb_func
 457              	HAL_PCD_ConnectCallback:
 458              	.LFB135:
 278:Src/usbd_conf.c **** }
 279:Src/usbd_conf.c **** 
 280:Src/usbd_conf.c **** /**
 281:Src/usbd_conf.c ****   * @brief  Connect callback.
 282:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 283:Src/usbd_conf.c ****   * @retval None
 284:Src/usbd_conf.c ****   */
 285:Src/usbd_conf.c **** void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
 286:Src/usbd_conf.c **** {
 459              		.loc 1 286 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              	.LVL41:
 464 0000 08B5     		push	{r3, lr}
 465              	.LCFI14:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 3, -8
 468              		.cfi_offset 14, -4
 287:Src/usbd_conf.c ****   USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 469              		.loc 1 287 0
 470 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 471              	.LVL42:
 472 0006 FFF7FEFF 		bl	USBD_LL_DevConnected
 473              	.LVL43:
 474 000a 08BD     		pop	{r3, pc}
 475              		.cfi_endproc
 476              	.LFE135:
ARM GAS  /tmp/cc1pd6bw.s 			page 14


 478              		.section	.text.HAL_PCD_DisconnectCallback,"ax",%progbits
 479              		.align	2
 480              		.global	HAL_PCD_DisconnectCallback
 481              		.thumb
 482              		.thumb_func
 484              	HAL_PCD_DisconnectCallback:
 485              	.LFB136:
 288:Src/usbd_conf.c **** }
 289:Src/usbd_conf.c **** 
 290:Src/usbd_conf.c **** /**
 291:Src/usbd_conf.c ****   * @brief  Disconnect callback.
 292:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 293:Src/usbd_conf.c ****   * @retval None
 294:Src/usbd_conf.c ****   */
 295:Src/usbd_conf.c **** void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
 296:Src/usbd_conf.c **** {
 486              		.loc 1 296 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LVL44:
 491 0000 08B5     		push	{r3, lr}
 492              	.LCFI15:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 3, -8
 495              		.cfi_offset 14, -4
 297:Src/usbd_conf.c ****   USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 496              		.loc 1 297 0
 497 0002 D0F8EC03 		ldr	r0, [r0, #1004]
 498              	.LVL45:
 499 0006 FFF7FEFF 		bl	USBD_LL_DevDisconnected
 500              	.LVL46:
 501 000a 08BD     		pop	{r3, pc}
 502              		.cfi_endproc
 503              	.LFE136:
 505              		.section	.text.USBD_LL_Init,"ax",%progbits
 506              		.align	2
 507              		.global	USBD_LL_Init
 508              		.thumb
 509              		.thumb_func
 511              	USBD_LL_Init:
 512              	.LFB137:
 298:Src/usbd_conf.c **** }
 299:Src/usbd_conf.c **** 
 300:Src/usbd_conf.c **** /*******************************************************************************
 301:Src/usbd_conf.c ****                        LL Driver Interface (USB Device Library --> PCD)
 302:Src/usbd_conf.c **** *******************************************************************************/
 303:Src/usbd_conf.c **** 
 304:Src/usbd_conf.c **** /**
 305:Src/usbd_conf.c ****   * @brief  Initializes the low level portion of the device driver.
 306:Src/usbd_conf.c ****   * @param  pdev: Device handle
 307:Src/usbd_conf.c ****   * @retval USBD status
 308:Src/usbd_conf.c ****   */
 309:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
 310:Src/usbd_conf.c **** {
 513              		.loc 1 310 0
 514              		.cfi_startproc
ARM GAS  /tmp/cc1pd6bw.s 			page 15


 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              	.LVL47:
 311:Src/usbd_conf.c ****   /* Init USB Ip. */
 312:Src/usbd_conf.c ****   if (pdev->id == DEVICE_FS) {
 518              		.loc 1 312 0
 519 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 520 0002 63BB     		cbnz	r3, .L45
 310:Src/usbd_conf.c ****   /* Init USB Ip. */
 521              		.loc 1 310 0
 522 0004 10B5     		push	{r4, lr}
 523              	.LCFI16:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 527 0006 0346     		mov	r3, r0
 313:Src/usbd_conf.c ****   /* Link the driver to the stack. */
 314:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.pData = pdev;
 528              		.loc 1 314 0
 529 0008 1648     		ldr	r0, .L46
 530              	.LVL48:
 531 000a C0F8EC33 		str	r3, [r0, #1004]
 315:Src/usbd_conf.c ****   pdev->pData = &hpcd_USB_OTG_FS;
 532              		.loc 1 315 0
 533 000e C3F82002 		str	r0, [r3, #544]
 316:Src/usbd_conf.c ****   
 317:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 534              		.loc 1 317 0
 535 0012 4FF0A043 		mov	r3, #1342177280
 536              	.LVL49:
 537 0016 0360     		str	r3, [r0]
 318:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 538              		.loc 1 318 0
 539 0018 0423     		movs	r3, #4
 540 001a 4360     		str	r3, [r0, #4]
 319:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 541              		.loc 1 319 0
 542 001c 0222     		movs	r2, #2
 543 001e C260     		str	r2, [r0, #12]
 320:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 544              		.loc 1 320 0
 545 0020 0023     		movs	r3, #0
 546 0022 0361     		str	r3, [r0, #16]
 321:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.ep0_mps = DEP0CTL_MPS_64;
 547              		.loc 1 321 0
 548 0024 4361     		str	r3, [r0, #20]
 322:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 549              		.loc 1 322 0
 550 0026 8261     		str	r2, [r0, #24]
 323:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 551              		.loc 1 323 0
 552 0028 C361     		str	r3, [r0, #28]
 324:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 553              		.loc 1 324 0
 554 002a 0362     		str	r3, [r0, #32]
 325:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 555              		.loc 1 325 0
ARM GAS  /tmp/cc1pd6bw.s 			page 16


 556 002c 4362     		str	r3, [r0, #36]
 326:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 557              		.loc 1 326 0
 558 002e C362     		str	r3, [r0, #44]
 327:Src/usbd_conf.c ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 559              		.loc 1 327 0
 560 0030 0363     		str	r3, [r0, #48]
 328:Src/usbd_conf.c ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 561              		.loc 1 328 0
 562 0032 FFF7FEFF 		bl	HAL_PCD_Init
 563              	.LVL50:
 564 0036 08B1     		cbz	r0, .L43
 329:Src/usbd_conf.c ****   {
 330:Src/usbd_conf.c ****     Error_Handler( );
 565              		.loc 1 330 0
 566 0038 FFF7FEFF 		bl	Error_Handler
 567              	.LVL51:
 568              	.L43:
 331:Src/usbd_conf.c ****   }
 332:Src/usbd_conf.c **** 
 333:Src/usbd_conf.c ****   HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 569              		.loc 1 333 0
 570 003c 094C     		ldr	r4, .L46
 571 003e 8021     		movs	r1, #128
 572 0040 2046     		mov	r0, r4
 573 0042 FFF7FEFF 		bl	HAL_PCDEx_SetRxFiFo
 574              	.LVL52:
 334:Src/usbd_conf.c ****   HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 575              		.loc 1 334 0
 576 0046 4022     		movs	r2, #64
 577 0048 0021     		movs	r1, #0
 578 004a 2046     		mov	r0, r4
 579 004c FFF7FEFF 		bl	HAL_PCDEx_SetTxFiFo
 580              	.LVL53:
 335:Src/usbd_conf.c ****   HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 581              		.loc 1 335 0
 582 0050 8022     		movs	r2, #128
 583 0052 0121     		movs	r1, #1
 584 0054 2046     		mov	r0, r4
 585 0056 FFF7FEFF 		bl	HAL_PCDEx_SetTxFiFo
 586              	.LVL54:
 336:Src/usbd_conf.c ****   }
 337:Src/usbd_conf.c ****   return USBD_OK;
 338:Src/usbd_conf.c **** }
 587              		.loc 1 338 0
 588 005a 0020     		movs	r0, #0
 589 005c 10BD     		pop	{r4, pc}
 590              	.LVL55:
 591              	.L45:
 592              	.LCFI17:
 593              		.cfi_def_cfa_offset 0
 594              		.cfi_restore 4
 595              		.cfi_restore 14
 596 005e 0020     		movs	r0, #0
 597              	.LVL56:
 598 0060 7047     		bx	lr
 599              	.L47:
ARM GAS  /tmp/cc1pd6bw.s 			page 17


 600 0062 00BF     		.align	2
 601              	.L46:
 602 0064 00000000 		.word	hpcd_USB_OTG_FS
 603              		.cfi_endproc
 604              	.LFE137:
 606              		.section	.text.USBD_LL_DeInit,"ax",%progbits
 607              		.align	2
 608              		.global	USBD_LL_DeInit
 609              		.thumb
 610              		.thumb_func
 612              	USBD_LL_DeInit:
 613              	.LFB138:
 339:Src/usbd_conf.c **** 
 340:Src/usbd_conf.c **** /**
 341:Src/usbd_conf.c ****   * @brief  De-Initializes the low level portion of the device driver.
 342:Src/usbd_conf.c ****   * @param  pdev: Device handle
 343:Src/usbd_conf.c ****   * @retval USBD status
 344:Src/usbd_conf.c ****   */
 345:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
 346:Src/usbd_conf.c **** {
 614              		.loc 1 346 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL57:
 619 0000 08B5     		push	{r3, lr}
 620              	.LCFI18:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 3, -8
 623              		.cfi_offset 14, -4
 624              	.LVL58:
 347:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 348:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 349:Src/usbd_conf.c **** 
 350:Src/usbd_conf.c ****   hal_status = HAL_PCD_DeInit(pdev->pData);
 625              		.loc 1 350 0
 626 0002 D0F82002 		ldr	r0, [r0, #544]
 627              	.LVL59:
 628 0006 FFF7FEFF 		bl	HAL_PCD_DeInit
 629              	.LVL60:
 351:Src/usbd_conf.c **** 
 352:Src/usbd_conf.c ****   switch (hal_status) {
 630              		.loc 1 352 0
 631 000a 10B1     		cbz	r0, .L50
 632 000c 0228     		cmp	r0, #2
 633 000e 02D0     		beq	.L51
 634 0010 03E0     		b	.L53
 635              	.L50:
 353:Src/usbd_conf.c ****     case HAL_OK :
 354:Src/usbd_conf.c ****       usb_status = USBD_OK;
 636              		.loc 1 354 0
 637 0012 0020     		movs	r0, #0
 638              	.LVL61:
 639 0014 08BD     		pop	{r3, pc}
 640              	.LVL62:
 641              	.L51:
 355:Src/usbd_conf.c ****     break;
ARM GAS  /tmp/cc1pd6bw.s 			page 18


 356:Src/usbd_conf.c ****     case HAL_ERROR :
 357:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 358:Src/usbd_conf.c ****     break;
 359:Src/usbd_conf.c ****     case HAL_BUSY :
 360:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 642              		.loc 1 360 0
 643 0016 0120     		movs	r0, #1
 644              	.LVL63:
 361:Src/usbd_conf.c ****     break;
 645              		.loc 1 361 0
 646 0018 08BD     		pop	{r3, pc}
 647              	.LVL64:
 648              	.L53:
 357:Src/usbd_conf.c ****     break;
 649              		.loc 1 357 0
 650 001a 0220     		movs	r0, #2
 651              	.LVL65:
 362:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 363:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 364:Src/usbd_conf.c ****     break;
 365:Src/usbd_conf.c ****     default :
 366:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 367:Src/usbd_conf.c ****     break;
 368:Src/usbd_conf.c ****   }
 369:Src/usbd_conf.c ****   return usb_status; 
 370:Src/usbd_conf.c **** }
 652              		.loc 1 370 0
 653 001c 08BD     		pop	{r3, pc}
 654              		.cfi_endproc
 655              	.LFE138:
 657 001e 00BF     		.section	.text.USBD_LL_Start,"ax",%progbits
 658              		.align	2
 659              		.global	USBD_LL_Start
 660              		.thumb
 661              		.thumb_func
 663              	USBD_LL_Start:
 664              	.LFB139:
 371:Src/usbd_conf.c **** 
 372:Src/usbd_conf.c **** /**
 373:Src/usbd_conf.c ****   * @brief  Starts the low level portion of the device driver. 
 374:Src/usbd_conf.c ****   * @param  pdev: Device handle
 375:Src/usbd_conf.c ****   * @retval USBD status
 376:Src/usbd_conf.c ****   */
 377:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
 378:Src/usbd_conf.c **** {
 665              		.loc 1 378 0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL66:
 670 0000 08B5     		push	{r3, lr}
 671              	.LCFI19:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 3, -8
 674              		.cfi_offset 14, -4
 675              	.LVL67:
 379:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
ARM GAS  /tmp/cc1pd6bw.s 			page 19


 380:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 381:Src/usbd_conf.c ****  
 382:Src/usbd_conf.c ****   hal_status = HAL_PCD_Start(pdev->pData);
 676              		.loc 1 382 0
 677 0002 D0F82002 		ldr	r0, [r0, #544]
 678              	.LVL68:
 679 0006 FFF7FEFF 		bl	HAL_PCD_Start
 680              	.LVL69:
 383:Src/usbd_conf.c ****      
 384:Src/usbd_conf.c ****   switch (hal_status) {
 681              		.loc 1 384 0
 682 000a 10B1     		cbz	r0, .L57
 683 000c 0228     		cmp	r0, #2
 684 000e 02D0     		beq	.L58
 685 0010 03E0     		b	.L60
 686              	.L57:
 385:Src/usbd_conf.c ****     case HAL_OK :
 386:Src/usbd_conf.c ****       usb_status = USBD_OK;
 687              		.loc 1 386 0
 688 0012 0020     		movs	r0, #0
 689              	.LVL70:
 690 0014 08BD     		pop	{r3, pc}
 691              	.LVL71:
 692              	.L58:
 387:Src/usbd_conf.c ****     break;
 388:Src/usbd_conf.c ****     case HAL_ERROR :
 389:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 390:Src/usbd_conf.c ****     break;
 391:Src/usbd_conf.c ****     case HAL_BUSY :
 392:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 693              		.loc 1 392 0
 694 0016 0120     		movs	r0, #1
 695              	.LVL72:
 393:Src/usbd_conf.c ****     break;
 696              		.loc 1 393 0
 697 0018 08BD     		pop	{r3, pc}
 698              	.LVL73:
 699              	.L60:
 389:Src/usbd_conf.c ****     break;
 700              		.loc 1 389 0
 701 001a 0220     		movs	r0, #2
 702              	.LVL74:
 394:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 395:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 396:Src/usbd_conf.c ****     break;
 397:Src/usbd_conf.c ****     default :
 398:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 399:Src/usbd_conf.c ****     break;
 400:Src/usbd_conf.c ****   }
 401:Src/usbd_conf.c ****   return usb_status;
 402:Src/usbd_conf.c **** }
 703              		.loc 1 402 0
 704 001c 08BD     		pop	{r3, pc}
 705              		.cfi_endproc
 706              	.LFE139:
 708 001e 00BF     		.section	.text.USBD_LL_Stop,"ax",%progbits
 709              		.align	2
ARM GAS  /tmp/cc1pd6bw.s 			page 20


 710              		.global	USBD_LL_Stop
 711              		.thumb
 712              		.thumb_func
 714              	USBD_LL_Stop:
 715              	.LFB140:
 403:Src/usbd_conf.c **** 
 404:Src/usbd_conf.c **** /**
 405:Src/usbd_conf.c ****   * @brief  Stops the low level portion of the device driver.
 406:Src/usbd_conf.c ****   * @param  pdev: Device handle
 407:Src/usbd_conf.c ****   * @retval USBD status
 408:Src/usbd_conf.c ****   */
 409:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Stop(USBD_HandleTypeDef *pdev)
 410:Src/usbd_conf.c **** {
 716              		.loc 1 410 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              	.LVL75:
 721 0000 08B5     		push	{r3, lr}
 722              	.LCFI20:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 3, -8
 725              		.cfi_offset 14, -4
 726              	.LVL76:
 411:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 412:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 413:Src/usbd_conf.c **** 
 414:Src/usbd_conf.c ****   hal_status = HAL_PCD_Stop(pdev->pData);
 727              		.loc 1 414 0
 728 0002 D0F82002 		ldr	r0, [r0, #544]
 729              	.LVL77:
 730 0006 FFF7FEFF 		bl	HAL_PCD_Stop
 731              	.LVL78:
 415:Src/usbd_conf.c **** 
 416:Src/usbd_conf.c ****   switch (hal_status) {
 732              		.loc 1 416 0
 733 000a 10B1     		cbz	r0, .L64
 734 000c 0228     		cmp	r0, #2
 735 000e 02D0     		beq	.L65
 736 0010 03E0     		b	.L67
 737              	.L64:
 417:Src/usbd_conf.c ****     case HAL_OK :
 418:Src/usbd_conf.c ****       usb_status = USBD_OK;
 738              		.loc 1 418 0
 739 0012 0020     		movs	r0, #0
 740              	.LVL79:
 741 0014 08BD     		pop	{r3, pc}
 742              	.LVL80:
 743              	.L65:
 419:Src/usbd_conf.c ****     break;
 420:Src/usbd_conf.c ****     case HAL_ERROR :
 421:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 422:Src/usbd_conf.c ****     break;
 423:Src/usbd_conf.c ****     case HAL_BUSY :
 424:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 744              		.loc 1 424 0
 745 0016 0120     		movs	r0, #1
ARM GAS  /tmp/cc1pd6bw.s 			page 21


 746              	.LVL81:
 425:Src/usbd_conf.c ****     break;
 747              		.loc 1 425 0
 748 0018 08BD     		pop	{r3, pc}
 749              	.LVL82:
 750              	.L67:
 421:Src/usbd_conf.c ****     break;
 751              		.loc 1 421 0
 752 001a 0220     		movs	r0, #2
 753              	.LVL83:
 426:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 427:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 428:Src/usbd_conf.c ****     break;
 429:Src/usbd_conf.c ****     default :
 430:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 431:Src/usbd_conf.c ****     break;
 432:Src/usbd_conf.c ****   }
 433:Src/usbd_conf.c ****   return usb_status;
 434:Src/usbd_conf.c **** }
 754              		.loc 1 434 0
 755 001c 08BD     		pop	{r3, pc}
 756              		.cfi_endproc
 757              	.LFE140:
 759 001e 00BF     		.section	.text.USBD_LL_OpenEP,"ax",%progbits
 760              		.align	2
 761              		.global	USBD_LL_OpenEP
 762              		.thumb
 763              		.thumb_func
 765              	USBD_LL_OpenEP:
 766              	.LFB141:
 435:Src/usbd_conf.c **** 
 436:Src/usbd_conf.c **** /**
 437:Src/usbd_conf.c ****   * @brief  Opens an endpoint of the low level driver.
 438:Src/usbd_conf.c ****   * @param  pdev: Device handle
 439:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 440:Src/usbd_conf.c ****   * @param  ep_type: Endpoint type
 441:Src/usbd_conf.c ****   * @param  ep_mps: Endpoint max packet size
 442:Src/usbd_conf.c ****   * @retval USBD status
 443:Src/usbd_conf.c ****   */
 444:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint1
 445:Src/usbd_conf.c **** {
 767              		.loc 1 445 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL84:
 772 0000 10B5     		push	{r4, lr}
 773              	.LCFI21:
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 4, -8
 776              		.cfi_offset 14, -4
 777 0002 1C46     		mov	r4, r3
 778              	.LVL85:
 446:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 447:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 448:Src/usbd_conf.c **** 
 449:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
ARM GAS  /tmp/cc1pd6bw.s 			page 22


 779              		.loc 1 449 0
 780 0004 1346     		mov	r3, r2
 781              	.LVL86:
 782 0006 2246     		mov	r2, r4
 783              	.LVL87:
 784 0008 D0F82002 		ldr	r0, [r0, #544]
 785              	.LVL88:
 786 000c FFF7FEFF 		bl	HAL_PCD_EP_Open
 787              	.LVL89:
 450:Src/usbd_conf.c **** 
 451:Src/usbd_conf.c ****   switch (hal_status) {
 788              		.loc 1 451 0
 789 0010 10B1     		cbz	r0, .L71
 790 0012 0228     		cmp	r0, #2
 791 0014 02D0     		beq	.L72
 792 0016 03E0     		b	.L74
 793              	.L71:
 452:Src/usbd_conf.c ****     case HAL_OK :
 453:Src/usbd_conf.c ****       usb_status = USBD_OK;
 794              		.loc 1 453 0
 795 0018 0020     		movs	r0, #0
 796              	.LVL90:
 797 001a 10BD     		pop	{r4, pc}
 798              	.LVL91:
 799              	.L72:
 454:Src/usbd_conf.c ****     break;
 455:Src/usbd_conf.c ****     case HAL_ERROR :
 456:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 457:Src/usbd_conf.c ****     break;
 458:Src/usbd_conf.c ****     case HAL_BUSY :
 459:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 800              		.loc 1 459 0
 801 001c 0120     		movs	r0, #1
 802              	.LVL92:
 460:Src/usbd_conf.c ****     break;
 803              		.loc 1 460 0
 804 001e 10BD     		pop	{r4, pc}
 805              	.LVL93:
 806              	.L74:
 456:Src/usbd_conf.c ****     break;
 807              		.loc 1 456 0
 808 0020 0220     		movs	r0, #2
 809              	.LVL94:
 461:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 462:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 463:Src/usbd_conf.c ****     break;
 464:Src/usbd_conf.c ****     default :
 465:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 466:Src/usbd_conf.c ****     break;
 467:Src/usbd_conf.c ****   }
 468:Src/usbd_conf.c ****   return usb_status;
 469:Src/usbd_conf.c **** }
 810              		.loc 1 469 0
 811 0022 10BD     		pop	{r4, pc}
 812              		.cfi_endproc
 813              	.LFE141:
 815              		.section	.text.USBD_LL_CloseEP,"ax",%progbits
ARM GAS  /tmp/cc1pd6bw.s 			page 23


 816              		.align	2
 817              		.global	USBD_LL_CloseEP
 818              		.thumb
 819              		.thumb_func
 821              	USBD_LL_CloseEP:
 822              	.LFB142:
 470:Src/usbd_conf.c **** 
 471:Src/usbd_conf.c **** /**
 472:Src/usbd_conf.c ****   * @brief  Closes an endpoint of the low level driver.
 473:Src/usbd_conf.c ****   * @param  pdev: Device handle
 474:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 475:Src/usbd_conf.c ****   * @retval USBD status
 476:Src/usbd_conf.c ****   */
 477:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 478:Src/usbd_conf.c **** {
 823              		.loc 1 478 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              	.LVL95:
 828 0000 08B5     		push	{r3, lr}
 829              	.LCFI22:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 833              	.LVL96:
 479:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 480:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 481:Src/usbd_conf.c ****   
 482:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 834              		.loc 1 482 0
 835 0002 D0F82002 		ldr	r0, [r0, #544]
 836              	.LVL97:
 837 0006 FFF7FEFF 		bl	HAL_PCD_EP_Close
 838              	.LVL98:
 483:Src/usbd_conf.c ****       
 484:Src/usbd_conf.c ****   switch (hal_status) {
 839              		.loc 1 484 0
 840 000a 10B1     		cbz	r0, .L78
 841 000c 0228     		cmp	r0, #2
 842 000e 02D0     		beq	.L79
 843 0010 03E0     		b	.L81
 844              	.L78:
 485:Src/usbd_conf.c ****     case HAL_OK :
 486:Src/usbd_conf.c ****       usb_status = USBD_OK;
 845              		.loc 1 486 0
 846 0012 0020     		movs	r0, #0
 847              	.LVL99:
 848 0014 08BD     		pop	{r3, pc}
 849              	.LVL100:
 850              	.L79:
 487:Src/usbd_conf.c ****     break;
 488:Src/usbd_conf.c ****     case HAL_ERROR :
 489:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 490:Src/usbd_conf.c ****     break;
 491:Src/usbd_conf.c ****     case HAL_BUSY :
 492:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
ARM GAS  /tmp/cc1pd6bw.s 			page 24


 851              		.loc 1 492 0
 852 0016 0120     		movs	r0, #1
 853              	.LVL101:
 493:Src/usbd_conf.c ****     break;
 854              		.loc 1 493 0
 855 0018 08BD     		pop	{r3, pc}
 856              	.LVL102:
 857              	.L81:
 489:Src/usbd_conf.c ****     break;
 858              		.loc 1 489 0
 859 001a 0220     		movs	r0, #2
 860              	.LVL103:
 494:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 495:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 496:Src/usbd_conf.c ****     break;
 497:Src/usbd_conf.c ****     default :
 498:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 499:Src/usbd_conf.c ****     break;
 500:Src/usbd_conf.c ****   }
 501:Src/usbd_conf.c ****   return usb_status;  
 502:Src/usbd_conf.c **** }
 861              		.loc 1 502 0
 862 001c 08BD     		pop	{r3, pc}
 863              		.cfi_endproc
 864              	.LFE142:
 866 001e 00BF     		.section	.text.USBD_LL_FlushEP,"ax",%progbits
 867              		.align	2
 868              		.global	USBD_LL_FlushEP
 869              		.thumb
 870              		.thumb_func
 872              	USBD_LL_FlushEP:
 873              	.LFB143:
 503:Src/usbd_conf.c **** 
 504:Src/usbd_conf.c **** /**
 505:Src/usbd_conf.c ****   * @brief  Flushes an endpoint of the Low Level Driver.
 506:Src/usbd_conf.c ****   * @param  pdev: Device handle
 507:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 508:Src/usbd_conf.c ****   * @retval USBD status
 509:Src/usbd_conf.c ****   */
 510:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_FlushEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 511:Src/usbd_conf.c **** {
 874              		.loc 1 511 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL104:
 879 0000 08B5     		push	{r3, lr}
 880              	.LCFI23:
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 3, -8
 883              		.cfi_offset 14, -4
 884              	.LVL105:
 512:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 513:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 514:Src/usbd_conf.c ****   
 515:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Flush(pdev->pData, ep_addr);
 885              		.loc 1 515 0
ARM GAS  /tmp/cc1pd6bw.s 			page 25


 886 0002 D0F82002 		ldr	r0, [r0, #544]
 887              	.LVL106:
 888 0006 FFF7FEFF 		bl	HAL_PCD_EP_Flush
 889              	.LVL107:
 516:Src/usbd_conf.c ****       
 517:Src/usbd_conf.c ****   switch (hal_status) {
 890              		.loc 1 517 0
 891 000a 10B1     		cbz	r0, .L85
 892 000c 0228     		cmp	r0, #2
 893 000e 02D0     		beq	.L86
 894 0010 03E0     		b	.L88
 895              	.L85:
 518:Src/usbd_conf.c ****     case HAL_OK :
 519:Src/usbd_conf.c ****       usb_status = USBD_OK;
 896              		.loc 1 519 0
 897 0012 0020     		movs	r0, #0
 898              	.LVL108:
 899 0014 08BD     		pop	{r3, pc}
 900              	.LVL109:
 901              	.L86:
 520:Src/usbd_conf.c ****     break;
 521:Src/usbd_conf.c ****     case HAL_ERROR :
 522:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 523:Src/usbd_conf.c ****     break;
 524:Src/usbd_conf.c ****     case HAL_BUSY :
 525:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 902              		.loc 1 525 0
 903 0016 0120     		movs	r0, #1
 904              	.LVL110:
 526:Src/usbd_conf.c ****     break;
 905              		.loc 1 526 0
 906 0018 08BD     		pop	{r3, pc}
 907              	.LVL111:
 908              	.L88:
 522:Src/usbd_conf.c ****     break;
 909              		.loc 1 522 0
 910 001a 0220     		movs	r0, #2
 911              	.LVL112:
 527:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 528:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 529:Src/usbd_conf.c ****     break;
 530:Src/usbd_conf.c ****     default :
 531:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 532:Src/usbd_conf.c ****     break;
 533:Src/usbd_conf.c ****   }
 534:Src/usbd_conf.c ****   return usb_status;  
 535:Src/usbd_conf.c **** }
 912              		.loc 1 535 0
 913 001c 08BD     		pop	{r3, pc}
 914              		.cfi_endproc
 915              	.LFE143:
 917 001e 00BF     		.section	.text.USBD_LL_StallEP,"ax",%progbits
 918              		.align	2
 919              		.global	USBD_LL_StallEP
 920              		.thumb
 921              		.thumb_func
 923              	USBD_LL_StallEP:
ARM GAS  /tmp/cc1pd6bw.s 			page 26


 924              	.LFB144:
 536:Src/usbd_conf.c **** 
 537:Src/usbd_conf.c **** /**
 538:Src/usbd_conf.c ****   * @brief  Sets a Stall condition on an endpoint of the Low Level Driver.
 539:Src/usbd_conf.c ****   * @param  pdev: Device handle
 540:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 541:Src/usbd_conf.c ****   * @retval USBD status
 542:Src/usbd_conf.c ****   */
 543:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 544:Src/usbd_conf.c **** {
 925              		.loc 1 544 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL113:
 930 0000 08B5     		push	{r3, lr}
 931              	.LCFI24:
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 3, -8
 934              		.cfi_offset 14, -4
 935              	.LVL114:
 545:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 546:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 547:Src/usbd_conf.c ****   
 548:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 936              		.loc 1 548 0
 937 0002 D0F82002 		ldr	r0, [r0, #544]
 938              	.LVL115:
 939 0006 FFF7FEFF 		bl	HAL_PCD_EP_SetStall
 940              	.LVL116:
 549:Src/usbd_conf.c **** 
 550:Src/usbd_conf.c ****   switch (hal_status) {
 941              		.loc 1 550 0
 942 000a 10B1     		cbz	r0, .L92
 943 000c 0228     		cmp	r0, #2
 944 000e 02D0     		beq	.L93
 945 0010 03E0     		b	.L95
 946              	.L92:
 551:Src/usbd_conf.c ****     case HAL_OK :
 552:Src/usbd_conf.c ****       usb_status = USBD_OK;
 947              		.loc 1 552 0
 948 0012 0020     		movs	r0, #0
 949              	.LVL117:
 950 0014 08BD     		pop	{r3, pc}
 951              	.LVL118:
 952              	.L93:
 553:Src/usbd_conf.c ****     break;
 554:Src/usbd_conf.c ****     case HAL_ERROR :
 555:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 556:Src/usbd_conf.c ****     break;
 557:Src/usbd_conf.c ****     case HAL_BUSY :
 558:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 953              		.loc 1 558 0
 954 0016 0120     		movs	r0, #1
 955              	.LVL119:
 559:Src/usbd_conf.c ****     break;
 956              		.loc 1 559 0
ARM GAS  /tmp/cc1pd6bw.s 			page 27


 957 0018 08BD     		pop	{r3, pc}
 958              	.LVL120:
 959              	.L95:
 555:Src/usbd_conf.c ****     break;
 960              		.loc 1 555 0
 961 001a 0220     		movs	r0, #2
 962              	.LVL121:
 560:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 561:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 562:Src/usbd_conf.c ****     break;
 563:Src/usbd_conf.c ****     default :
 564:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 565:Src/usbd_conf.c ****     break;
 566:Src/usbd_conf.c ****   }
 567:Src/usbd_conf.c ****   return usb_status;  
 568:Src/usbd_conf.c **** }
 963              		.loc 1 568 0
 964 001c 08BD     		pop	{r3, pc}
 965              		.cfi_endproc
 966              	.LFE144:
 968 001e 00BF     		.section	.text.USBD_LL_ClearStallEP,"ax",%progbits
 969              		.align	2
 970              		.global	USBD_LL_ClearStallEP
 971              		.thumb
 972              		.thumb_func
 974              	USBD_LL_ClearStallEP:
 975              	.LFB145:
 569:Src/usbd_conf.c **** 
 570:Src/usbd_conf.c **** /**
 571:Src/usbd_conf.c ****   * @brief  Clears a Stall condition on an endpoint of the Low Level Driver.
 572:Src/usbd_conf.c ****   * @param  pdev: Device handle
 573:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 574:Src/usbd_conf.c ****   * @retval USBD status
 575:Src/usbd_conf.c ****   */
 576:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 577:Src/usbd_conf.c **** {
 976              		.loc 1 577 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              	.LVL122:
 981 0000 08B5     		push	{r3, lr}
 982              	.LCFI25:
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 3, -8
 985              		.cfi_offset 14, -4
 986              	.LVL123:
 578:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 579:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 580:Src/usbd_conf.c ****   
 581:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);  
 987              		.loc 1 581 0
 988 0002 D0F82002 		ldr	r0, [r0, #544]
 989              	.LVL124:
 990 0006 FFF7FEFF 		bl	HAL_PCD_EP_ClrStall
 991              	.LVL125:
 582:Src/usbd_conf.c ****      
ARM GAS  /tmp/cc1pd6bw.s 			page 28


 583:Src/usbd_conf.c ****   switch (hal_status) {
 992              		.loc 1 583 0
 993 000a 10B1     		cbz	r0, .L99
 994 000c 0228     		cmp	r0, #2
 995 000e 02D0     		beq	.L100
 996 0010 03E0     		b	.L102
 997              	.L99:
 584:Src/usbd_conf.c ****     case HAL_OK :
 585:Src/usbd_conf.c ****       usb_status = USBD_OK;
 998              		.loc 1 585 0
 999 0012 0020     		movs	r0, #0
 1000              	.LVL126:
 1001 0014 08BD     		pop	{r3, pc}
 1002              	.LVL127:
 1003              	.L100:
 586:Src/usbd_conf.c ****     break;
 587:Src/usbd_conf.c ****     case HAL_ERROR :
 588:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 589:Src/usbd_conf.c ****     break;
 590:Src/usbd_conf.c ****     case HAL_BUSY :
 591:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1004              		.loc 1 591 0
 1005 0016 0120     		movs	r0, #1
 1006              	.LVL128:
 592:Src/usbd_conf.c ****     break;
 1007              		.loc 1 592 0
 1008 0018 08BD     		pop	{r3, pc}
 1009              	.LVL129:
 1010              	.L102:
 588:Src/usbd_conf.c ****     break;
 1011              		.loc 1 588 0
 1012 001a 0220     		movs	r0, #2
 1013              	.LVL130:
 593:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 594:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 595:Src/usbd_conf.c ****     break;
 596:Src/usbd_conf.c ****     default :
 597:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 598:Src/usbd_conf.c ****     break;
 599:Src/usbd_conf.c ****   }
 600:Src/usbd_conf.c ****   return usb_status; 
 601:Src/usbd_conf.c **** }
 1014              		.loc 1 601 0
 1015 001c 08BD     		pop	{r3, pc}
 1016              		.cfi_endproc
 1017              	.LFE145:
 1019 001e 00BF     		.section	.text.USBD_LL_IsStallEP,"ax",%progbits
 1020              		.align	2
 1021              		.global	USBD_LL_IsStallEP
 1022              		.thumb
 1023              		.thumb_func
 1025              	USBD_LL_IsStallEP:
 1026              	.LFB146:
 602:Src/usbd_conf.c **** 
 603:Src/usbd_conf.c **** /**
 604:Src/usbd_conf.c ****   * @brief  Returns Stall condition.
 605:Src/usbd_conf.c ****   * @param  pdev: Device handle
ARM GAS  /tmp/cc1pd6bw.s 			page 29


 606:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 607:Src/usbd_conf.c ****   * @retval Stall (1: Yes, 0: No)
 608:Src/usbd_conf.c ****   */
 609:Src/usbd_conf.c **** uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 610:Src/usbd_conf.c **** {
 1027              		.loc 1 610 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 1032              	.LVL131:
 611:Src/usbd_conf.c ****   PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 1033              		.loc 1 611 0
 1034 0000 D0F82022 		ldr	r2, [r0, #544]
 1035              	.LVL132:
 612:Src/usbd_conf.c ****   
 613:Src/usbd_conf.c ****   if((ep_addr & 0x80) == 0x80)
 1036              		.loc 1 613 0
 1037 0004 11F0800F 		tst	r1, #128
 1038 0008 08D0     		beq	.L105
 614:Src/usbd_conf.c ****   {
 615:Src/usbd_conf.c ****     return hpcd->IN_ep[ep_addr & 0x7F].is_stall; 
 1039              		.loc 1 615 0
 1040 000a 01F07F01 		and	r1, r1, #127
 1041              	.LVL133:
 1042 000e C1EBC101 		rsb	r1, r1, r1, lsl #3
 1043 0012 8B00     		lsls	r3, r1, #2
 1044 0014 1344     		add	r3, r3, r2
 1045 0016 93F83A00 		ldrb	r0, [r3, #58]	@ zero_extendqisi2
 1046              	.LVL134:
 1047 001a 7047     		bx	lr
 1048              	.LVL135:
 1049              	.L105:
 616:Src/usbd_conf.c ****   }
 617:Src/usbd_conf.c ****   else
 618:Src/usbd_conf.c ****   {
 619:Src/usbd_conf.c ****     return hpcd->OUT_ep[ep_addr & 0x7F].is_stall; 
 1050              		.loc 1 619 0
 1051 001c 01F07F01 		and	r1, r1, #127
 1052              	.LVL136:
 1053 0020 C1EBC101 		rsb	r1, r1, r1, lsl #3
 1054 0024 8B00     		lsls	r3, r1, #2
 1055 0026 1344     		add	r3, r3, r2
 1056 0028 93F8FA01 		ldrb	r0, [r3, #506]	@ zero_extendqisi2
 1057              	.LVL137:
 620:Src/usbd_conf.c ****   }
 621:Src/usbd_conf.c **** }
 1058              		.loc 1 621 0
 1059 002c 7047     		bx	lr
 1060              		.cfi_endproc
 1061              	.LFE146:
 1063 002e 00BF     		.section	.text.USBD_LL_SetUSBAddress,"ax",%progbits
 1064              		.align	2
 1065              		.global	USBD_LL_SetUSBAddress
 1066              		.thumb
 1067              		.thumb_func
 1069              	USBD_LL_SetUSBAddress:
ARM GAS  /tmp/cc1pd6bw.s 			page 30


 1070              	.LFB147:
 622:Src/usbd_conf.c **** 
 623:Src/usbd_conf.c **** /**
 624:Src/usbd_conf.c ****   * @brief  Assigns a USB address to the device.
 625:Src/usbd_conf.c ****   * @param  pdev: Device handle
 626:Src/usbd_conf.c ****   * @param  dev_addr: Device address
 627:Src/usbd_conf.c ****   * @retval USBD status
 628:Src/usbd_conf.c ****   */
 629:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
 630:Src/usbd_conf.c **** {
 1071              		.loc 1 630 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              	.LVL138:
 1076 0000 08B5     		push	{r3, lr}
 1077              	.LCFI26:
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 3, -8
 1080              		.cfi_offset 14, -4
 1081              	.LVL139:
 631:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 632:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 633:Src/usbd_conf.c ****   
 634:Src/usbd_conf.c ****   hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 1082              		.loc 1 634 0
 1083 0002 D0F82002 		ldr	r0, [r0, #544]
 1084              	.LVL140:
 1085 0006 FFF7FEFF 		bl	HAL_PCD_SetAddress
 1086              	.LVL141:
 635:Src/usbd_conf.c ****      
 636:Src/usbd_conf.c ****   switch (hal_status) {
 1087              		.loc 1 636 0
 1088 000a 10B1     		cbz	r0, .L109
 1089 000c 0228     		cmp	r0, #2
 1090 000e 02D0     		beq	.L110
 1091 0010 03E0     		b	.L112
 1092              	.L109:
 637:Src/usbd_conf.c ****     case HAL_OK :
 638:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1093              		.loc 1 638 0
 1094 0012 0020     		movs	r0, #0
 1095              	.LVL142:
 1096 0014 08BD     		pop	{r3, pc}
 1097              	.LVL143:
 1098              	.L110:
 639:Src/usbd_conf.c ****     break;
 640:Src/usbd_conf.c ****     case HAL_ERROR :
 641:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 642:Src/usbd_conf.c ****     break;
 643:Src/usbd_conf.c ****     case HAL_BUSY :
 644:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1099              		.loc 1 644 0
 1100 0016 0120     		movs	r0, #1
 1101              	.LVL144:
 645:Src/usbd_conf.c ****     break;
 1102              		.loc 1 645 0
ARM GAS  /tmp/cc1pd6bw.s 			page 31


 1103 0018 08BD     		pop	{r3, pc}
 1104              	.LVL145:
 1105              	.L112:
 641:Src/usbd_conf.c ****     break;
 1106              		.loc 1 641 0
 1107 001a 0220     		movs	r0, #2
 1108              	.LVL146:
 646:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 647:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 648:Src/usbd_conf.c ****     break;
 649:Src/usbd_conf.c ****     default :
 650:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 651:Src/usbd_conf.c ****     break;
 652:Src/usbd_conf.c ****   }
 653:Src/usbd_conf.c ****   return usb_status;  
 654:Src/usbd_conf.c **** }
 1109              		.loc 1 654 0
 1110 001c 08BD     		pop	{r3, pc}
 1111              		.cfi_endproc
 1112              	.LFE147:
 1114 001e 00BF     		.section	.text.USBD_LL_Transmit,"ax",%progbits
 1115              		.align	2
 1116              		.global	USBD_LL_Transmit
 1117              		.thumb
 1118              		.thumb_func
 1120              	USBD_LL_Transmit:
 1121              	.LFB148:
 655:Src/usbd_conf.c **** 
 656:Src/usbd_conf.c **** /**
 657:Src/usbd_conf.c ****   * @brief  Transmits data over an endpoint.
 658:Src/usbd_conf.c ****   * @param  pdev: Device handle
 659:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 660:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be sent
 661:Src/usbd_conf.c ****   * @param  size: Data size    
 662:Src/usbd_conf.c ****   * @retval USBD status
 663:Src/usbd_conf.c ****   */
 664:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint1
 665:Src/usbd_conf.c **** {
 1122              		.loc 1 665 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126              	.LVL147:
 1127 0000 08B5     		push	{r3, lr}
 1128              	.LCFI27:
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 3, -8
 1131              		.cfi_offset 14, -4
 1132              	.LVL148:
 666:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 667:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 668:Src/usbd_conf.c **** 
 669:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 1133              		.loc 1 669 0
 1134 0002 D0F82002 		ldr	r0, [r0, #544]
 1135              	.LVL149:
 1136 0006 FFF7FEFF 		bl	HAL_PCD_EP_Transmit
ARM GAS  /tmp/cc1pd6bw.s 			page 32


 1137              	.LVL150:
 670:Src/usbd_conf.c ****      
 671:Src/usbd_conf.c ****   switch (hal_status) {
 1138              		.loc 1 671 0
 1139 000a 10B1     		cbz	r0, .L116
 1140 000c 0228     		cmp	r0, #2
 1141 000e 02D0     		beq	.L117
 1142 0010 03E0     		b	.L119
 1143              	.L116:
 672:Src/usbd_conf.c ****     case HAL_OK :
 673:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1144              		.loc 1 673 0
 1145 0012 0020     		movs	r0, #0
 1146              	.LVL151:
 1147 0014 08BD     		pop	{r3, pc}
 1148              	.LVL152:
 1149              	.L117:
 674:Src/usbd_conf.c ****     break;
 675:Src/usbd_conf.c ****     case HAL_ERROR :
 676:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 677:Src/usbd_conf.c ****     break;
 678:Src/usbd_conf.c ****     case HAL_BUSY :
 679:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1150              		.loc 1 679 0
 1151 0016 0120     		movs	r0, #1
 1152              	.LVL153:
 680:Src/usbd_conf.c ****     break;
 1153              		.loc 1 680 0
 1154 0018 08BD     		pop	{r3, pc}
 1155              	.LVL154:
 1156              	.L119:
 676:Src/usbd_conf.c ****     break;
 1157              		.loc 1 676 0
 1158 001a 0220     		movs	r0, #2
 1159              	.LVL155:
 681:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 682:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 683:Src/usbd_conf.c ****     break;
 684:Src/usbd_conf.c ****     default :
 685:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 686:Src/usbd_conf.c ****     break;
 687:Src/usbd_conf.c ****   }
 688:Src/usbd_conf.c ****   return usb_status;    
 689:Src/usbd_conf.c **** }
 1160              		.loc 1 689 0
 1161 001c 08BD     		pop	{r3, pc}
 1162              		.cfi_endproc
 1163              	.LFE148:
 1165 001e 00BF     		.section	.text.USBD_LL_PrepareReceive,"ax",%progbits
 1166              		.align	2
 1167              		.global	USBD_LL_PrepareReceive
 1168              		.thumb
 1169              		.thumb_func
 1171              	USBD_LL_PrepareReceive:
 1172              	.LFB149:
 690:Src/usbd_conf.c **** 
 691:Src/usbd_conf.c **** /**
ARM GAS  /tmp/cc1pd6bw.s 			page 33


 692:Src/usbd_conf.c ****   * @brief  Prepares an endpoint for reception.
 693:Src/usbd_conf.c ****   * @param  pdev: Device handle
 694:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 695:Src/usbd_conf.c ****   * @param  pbuf: Pointer to data to be received
 696:Src/usbd_conf.c ****   * @param  size: Data size
 697:Src/usbd_conf.c ****   * @retval USBD status
 698:Src/usbd_conf.c ****   */
 699:Src/usbd_conf.c **** USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf,
 700:Src/usbd_conf.c **** {
 1173              		.loc 1 700 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              	.LVL156:
 1178 0000 08B5     		push	{r3, lr}
 1179              	.LCFI28:
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 3, -8
 1182              		.cfi_offset 14, -4
 1183              	.LVL157:
 701:Src/usbd_conf.c ****   HAL_StatusTypeDef hal_status = HAL_OK;
 702:Src/usbd_conf.c ****   USBD_StatusTypeDef usb_status = USBD_OK;
 703:Src/usbd_conf.c **** 
 704:Src/usbd_conf.c ****   hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 1184              		.loc 1 704 0
 1185 0002 D0F82002 		ldr	r0, [r0, #544]
 1186              	.LVL158:
 1187 0006 FFF7FEFF 		bl	HAL_PCD_EP_Receive
 1188              	.LVL159:
 705:Src/usbd_conf.c ****      
 706:Src/usbd_conf.c ****   switch (hal_status) {
 1189              		.loc 1 706 0
 1190 000a 10B1     		cbz	r0, .L123
 1191 000c 0228     		cmp	r0, #2
 1192 000e 02D0     		beq	.L124
 1193 0010 03E0     		b	.L126
 1194              	.L123:
 707:Src/usbd_conf.c ****     case HAL_OK :
 708:Src/usbd_conf.c ****       usb_status = USBD_OK;
 1195              		.loc 1 708 0
 1196 0012 0020     		movs	r0, #0
 1197              	.LVL160:
 1198 0014 08BD     		pop	{r3, pc}
 1199              	.LVL161:
 1200              	.L124:
 709:Src/usbd_conf.c ****     break;
 710:Src/usbd_conf.c ****     case HAL_ERROR :
 711:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 712:Src/usbd_conf.c ****     break;
 713:Src/usbd_conf.c ****     case HAL_BUSY :
 714:Src/usbd_conf.c ****       usb_status = USBD_BUSY;
 1201              		.loc 1 714 0
 1202 0016 0120     		movs	r0, #1
 1203              	.LVL162:
 715:Src/usbd_conf.c ****     break;
 1204              		.loc 1 715 0
 1205 0018 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc1pd6bw.s 			page 34


 1206              	.LVL163:
 1207              	.L126:
 711:Src/usbd_conf.c ****     break;
 1208              		.loc 1 711 0
 1209 001a 0220     		movs	r0, #2
 1210              	.LVL164:
 716:Src/usbd_conf.c ****     case HAL_TIMEOUT :
 717:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 718:Src/usbd_conf.c ****     break;
 719:Src/usbd_conf.c ****     default :
 720:Src/usbd_conf.c ****       usb_status = USBD_FAIL;
 721:Src/usbd_conf.c ****     break;
 722:Src/usbd_conf.c ****   }
 723:Src/usbd_conf.c ****   return usb_status; 
 724:Src/usbd_conf.c **** }
 1211              		.loc 1 724 0
 1212 001c 08BD     		pop	{r3, pc}
 1213              		.cfi_endproc
 1214              	.LFE149:
 1216 001e 00BF     		.section	.text.USBD_LL_GetRxDataSize,"ax",%progbits
 1217              		.align	2
 1218              		.global	USBD_LL_GetRxDataSize
 1219              		.thumb
 1220              		.thumb_func
 1222              	USBD_LL_GetRxDataSize:
 1223              	.LFB150:
 725:Src/usbd_conf.c **** 
 726:Src/usbd_conf.c **** /**
 727:Src/usbd_conf.c ****   * @brief  Returns the last transfered packet size.
 728:Src/usbd_conf.c ****   * @param  pdev: Device handle
 729:Src/usbd_conf.c ****   * @param  ep_addr: Endpoint number
 730:Src/usbd_conf.c ****   * @retval Recived Data Size
 731:Src/usbd_conf.c ****   */
 732:Src/usbd_conf.c **** uint32_t USBD_LL_GetRxDataSize(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
 733:Src/usbd_conf.c **** {
 1224              		.loc 1 733 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL165:
 1229 0000 08B5     		push	{r3, lr}
 1230              	.LCFI29:
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 3, -8
 1233              		.cfi_offset 14, -4
 734:Src/usbd_conf.c ****   return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 1234              		.loc 1 734 0
 1235 0002 D0F82002 		ldr	r0, [r0, #544]
 1236              	.LVL166:
 1237 0006 FFF7FEFF 		bl	HAL_PCD_EP_GetRxCount
 1238              	.LVL167:
 735:Src/usbd_conf.c **** }
 1239              		.loc 1 735 0
 1240 000a 08BD     		pop	{r3, pc}
 1241              		.cfi_endproc
 1242              	.LFE150:
 1244              		.section	.text.USBD_LL_Delay,"ax",%progbits
ARM GAS  /tmp/cc1pd6bw.s 			page 35


 1245              		.align	2
 1246              		.global	USBD_LL_Delay
 1247              		.thumb
 1248              		.thumb_func
 1250              	USBD_LL_Delay:
 1251              	.LFB151:
 736:Src/usbd_conf.c **** 
 737:Src/usbd_conf.c **** #if (USBD_LPM_ENABLED == 1)
 738:Src/usbd_conf.c **** /**
 739:Src/usbd_conf.c ****   * @brief  Send LPM message to user layer
 740:Src/usbd_conf.c ****   * @param  hpcd: PCD handle
 741:Src/usbd_conf.c ****   * @param  msg: LPM message
 742:Src/usbd_conf.c ****   * @retval None
 743:Src/usbd_conf.c ****   */
 744:Src/usbd_conf.c **** void HAL_PCDEx_LPM_Callback(PCD_HandleTypeDef *hpcd, PCD_LPM_MsgTypeDef msg)
 745:Src/usbd_conf.c **** {
 746:Src/usbd_conf.c ****   switch (msg)
 747:Src/usbd_conf.c ****   {
 748:Src/usbd_conf.c ****   case PCD_LPM_L0_ACTIVE:
 749:Src/usbd_conf.c ****     if (hpcd->Init.low_power_enable)
 750:Src/usbd_conf.c ****     {
 751:Src/usbd_conf.c ****       SystemClock_Config();
 752:Src/usbd_conf.c ****       
 753:Src/usbd_conf.c ****       /* Reset SLEEPDEEP bit of Cortex System Control Register. */
 754:Src/usbd_conf.c ****       SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 755:Src/usbd_conf.c ****     }
 756:Src/usbd_conf.c ****     __HAL_PCD_UNGATE_PHYCLOCK(hpcd);
 757:Src/usbd_conf.c ****     USBD_LL_Resume(hpcd->pData);
 758:Src/usbd_conf.c ****     break;
 759:Src/usbd_conf.c ****     
 760:Src/usbd_conf.c ****   case PCD_LPM_L1_ACTIVE:
 761:Src/usbd_conf.c ****     __HAL_PCD_GATE_PHYCLOCK(hpcd);
 762:Src/usbd_conf.c ****     USBD_LL_Suspend(hpcd->pData);
 763:Src/usbd_conf.c ****     
 764:Src/usbd_conf.c ****     /* Enter in STOP mode. */
 765:Src/usbd_conf.c ****     if (hpcd->Init.low_power_enable)
 766:Src/usbd_conf.c ****     {   
 767:Src/usbd_conf.c ****       /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
 768:Src/usbd_conf.c ****       SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 769:Src/usbd_conf.c ****     }
 770:Src/usbd_conf.c ****     break;   
 771:Src/usbd_conf.c ****   }
 772:Src/usbd_conf.c **** }
 773:Src/usbd_conf.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 774:Src/usbd_conf.c **** 
 775:Src/usbd_conf.c **** /**
 776:Src/usbd_conf.c ****   * @brief  Delays routine for the USB Device Library.
 777:Src/usbd_conf.c ****   * @param  Delay: Delay in ms
 778:Src/usbd_conf.c ****   * @retval None
 779:Src/usbd_conf.c ****   */
 780:Src/usbd_conf.c **** void USBD_LL_Delay(uint32_t Delay)
 781:Src/usbd_conf.c **** {
 1252              		.loc 1 781 0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              	.LVL168:
ARM GAS  /tmp/cc1pd6bw.s 			page 36


 1257 0000 08B5     		push	{r3, lr}
 1258              	.LCFI30:
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 3, -8
 1261              		.cfi_offset 14, -4
 782:Src/usbd_conf.c ****   HAL_Delay(Delay);
 1262              		.loc 1 782 0
 1263 0002 FFF7FEFF 		bl	HAL_Delay
 1264              	.LVL169:
 1265 0006 08BD     		pop	{r3, pc}
 1266              		.cfi_endproc
 1267              	.LFE151:
 1269              		.comm	hpcd_USB_OTG_FS,1008,4
 1270              		.text
 1271              	.Letext0:
 1272              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 1273              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1274              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1275              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1276              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1277              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1278              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1279              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 1280              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 1281              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1282              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1283              		.file 13 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
 1284              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd_ex.h"
 1285              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc1pd6bw.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_conf.c
     /tmp/cc1pd6bw.s:22     .text.HAL_PCD_MspInit:00000000 $t
     /tmp/cc1pd6bw.s:27     .text.HAL_PCD_MspInit:00000000 HAL_PCD_MspInit
     /tmp/cc1pd6bw.s:110    .text.HAL_PCD_MspInit:00000060 $d
     /tmp/cc1pd6bw.s:116    .text.HAL_PCD_MspDeInit:00000000 $t
     /tmp/cc1pd6bw.s:121    .text.HAL_PCD_MspDeInit:00000000 HAL_PCD_MspDeInit
     /tmp/cc1pd6bw.s:157    .text.HAL_PCD_MspDeInit:00000028 $d
     /tmp/cc1pd6bw.s:163    .text.HAL_PCD_SetupStageCallback:00000000 $t
     /tmp/cc1pd6bw.s:168    .text.HAL_PCD_SetupStageCallback:00000000 HAL_PCD_SetupStageCallback
     /tmp/cc1pd6bw.s:191    .text.HAL_PCD_DataOutStageCallback:00000000 $t
     /tmp/cc1pd6bw.s:196    .text.HAL_PCD_DataOutStageCallback:00000000 HAL_PCD_DataOutStageCallback
     /tmp/cc1pd6bw.s:222    .text.HAL_PCD_DataInStageCallback:00000000 $t
     /tmp/cc1pd6bw.s:227    .text.HAL_PCD_DataInStageCallback:00000000 HAL_PCD_DataInStageCallback
     /tmp/cc1pd6bw.s:253    .text.HAL_PCD_SOFCallback:00000000 $t
     /tmp/cc1pd6bw.s:258    .text.HAL_PCD_SOFCallback:00000000 HAL_PCD_SOFCallback
     /tmp/cc1pd6bw.s:280    .text.HAL_PCD_ResetCallback:00000000 $t
     /tmp/cc1pd6bw.s:285    .text.HAL_PCD_ResetCallback:00000000 HAL_PCD_ResetCallback
     /tmp/cc1pd6bw.s:324    .text.HAL_PCD_SuspendCallback:00000000 $t
     /tmp/cc1pd6bw.s:329    .text.HAL_PCD_SuspendCallback:00000000 HAL_PCD_SuspendCallback
     /tmp/cc1pd6bw.s:366    .text.HAL_PCD_SuspendCallback:0000002c $d
     /tmp/cc1pd6bw.s:371    .text.HAL_PCD_ResumeCallback:00000000 $t
     /tmp/cc1pd6bw.s:376    .text.HAL_PCD_ResumeCallback:00000000 HAL_PCD_ResumeCallback
     /tmp/cc1pd6bw.s:398    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 $t
     /tmp/cc1pd6bw.s:403    .text.HAL_PCD_ISOOUTIncompleteCallback:00000000 HAL_PCD_ISOOUTIncompleteCallback
     /tmp/cc1pd6bw.s:425    .text.HAL_PCD_ISOINIncompleteCallback:00000000 $t
     /tmp/cc1pd6bw.s:430    .text.HAL_PCD_ISOINIncompleteCallback:00000000 HAL_PCD_ISOINIncompleteCallback
     /tmp/cc1pd6bw.s:452    .text.HAL_PCD_ConnectCallback:00000000 $t
     /tmp/cc1pd6bw.s:457    .text.HAL_PCD_ConnectCallback:00000000 HAL_PCD_ConnectCallback
     /tmp/cc1pd6bw.s:479    .text.HAL_PCD_DisconnectCallback:00000000 $t
     /tmp/cc1pd6bw.s:484    .text.HAL_PCD_DisconnectCallback:00000000 HAL_PCD_DisconnectCallback
     /tmp/cc1pd6bw.s:506    .text.USBD_LL_Init:00000000 $t
     /tmp/cc1pd6bw.s:511    .text.USBD_LL_Init:00000000 USBD_LL_Init
     /tmp/cc1pd6bw.s:602    .text.USBD_LL_Init:00000064 $d
                            *COM*:000003f0 hpcd_USB_OTG_FS
     /tmp/cc1pd6bw.s:607    .text.USBD_LL_DeInit:00000000 $t
     /tmp/cc1pd6bw.s:612    .text.USBD_LL_DeInit:00000000 USBD_LL_DeInit
     /tmp/cc1pd6bw.s:658    .text.USBD_LL_Start:00000000 $t
     /tmp/cc1pd6bw.s:663    .text.USBD_LL_Start:00000000 USBD_LL_Start
     /tmp/cc1pd6bw.s:709    .text.USBD_LL_Stop:00000000 $t
     /tmp/cc1pd6bw.s:714    .text.USBD_LL_Stop:00000000 USBD_LL_Stop
     /tmp/cc1pd6bw.s:760    .text.USBD_LL_OpenEP:00000000 $t
     /tmp/cc1pd6bw.s:765    .text.USBD_LL_OpenEP:00000000 USBD_LL_OpenEP
     /tmp/cc1pd6bw.s:816    .text.USBD_LL_CloseEP:00000000 $t
     /tmp/cc1pd6bw.s:821    .text.USBD_LL_CloseEP:00000000 USBD_LL_CloseEP
     /tmp/cc1pd6bw.s:867    .text.USBD_LL_FlushEP:00000000 $t
     /tmp/cc1pd6bw.s:872    .text.USBD_LL_FlushEP:00000000 USBD_LL_FlushEP
     /tmp/cc1pd6bw.s:918    .text.USBD_LL_StallEP:00000000 $t
     /tmp/cc1pd6bw.s:923    .text.USBD_LL_StallEP:00000000 USBD_LL_StallEP
     /tmp/cc1pd6bw.s:969    .text.USBD_LL_ClearStallEP:00000000 $t
     /tmp/cc1pd6bw.s:974    .text.USBD_LL_ClearStallEP:00000000 USBD_LL_ClearStallEP
     /tmp/cc1pd6bw.s:1020   .text.USBD_LL_IsStallEP:00000000 $t
     /tmp/cc1pd6bw.s:1025   .text.USBD_LL_IsStallEP:00000000 USBD_LL_IsStallEP
     /tmp/cc1pd6bw.s:1064   .text.USBD_LL_SetUSBAddress:00000000 $t
     /tmp/cc1pd6bw.s:1069   .text.USBD_LL_SetUSBAddress:00000000 USBD_LL_SetUSBAddress
     /tmp/cc1pd6bw.s:1115   .text.USBD_LL_Transmit:00000000 $t
     /tmp/cc1pd6bw.s:1120   .text.USBD_LL_Transmit:00000000 USBD_LL_Transmit
ARM GAS  /tmp/cc1pd6bw.s 			page 38


     /tmp/cc1pd6bw.s:1166   .text.USBD_LL_PrepareReceive:00000000 $t
     /tmp/cc1pd6bw.s:1171   .text.USBD_LL_PrepareReceive:00000000 USBD_LL_PrepareReceive
     /tmp/cc1pd6bw.s:1217   .text.USBD_LL_GetRxDataSize:00000000 $t
     /tmp/cc1pd6bw.s:1222   .text.USBD_LL_GetRxDataSize:00000000 USBD_LL_GetRxDataSize
     /tmp/cc1pd6bw.s:1245   .text.USBD_LL_Delay:00000000 $t
     /tmp/cc1pd6bw.s:1250   .text.USBD_LL_Delay:00000000 USBD_LL_Delay
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
USBD_LL_SetupStage
USBD_LL_DataOutStage
USBD_LL_DataInStage
USBD_LL_SOF
USBD_LL_SetSpeed
USBD_LL_Reset
USBD_LL_Suspend
USBD_LL_Resume
USBD_LL_IsoOUTIncomplete
USBD_LL_IsoINIncomplete
USBD_LL_DevConnected
USBD_LL_DevDisconnected
HAL_PCD_Init
Error_Handler
HAL_PCDEx_SetRxFiFo
HAL_PCDEx_SetTxFiFo
HAL_PCD_DeInit
HAL_PCD_Start
HAL_PCD_Stop
HAL_PCD_EP_Open
HAL_PCD_EP_Close
HAL_PCD_EP_Flush
HAL_PCD_EP_SetStall
HAL_PCD_EP_ClrStall
HAL_PCD_SetAddress
HAL_PCD_EP_Transmit
HAL_PCD_EP_Receive
HAL_PCD_EP_GetRxCount
HAL_Delay

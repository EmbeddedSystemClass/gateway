ARM GAS  /tmp/ccBR87qy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"adctask.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.adctask_init,"ax",%progbits
  22              		.align	2
  23              		.global	adctask_init
  24              		.thumb
  25              		.thumb_func
  27              	adctask_init:
  28              	.LFB129:
  29              		.file 1 "Ourwares/adctask.c"
   1:Ourwares/adctask.c **** /******************************************************************************
   2:Ourwares/adctask.c **** * File Name          : adctask.c
   3:Ourwares/adctask.c **** * Date First Issued  : 02/01/2019
   4:Ourwares/adctask.c **** * Description        : Handle ADC w DMA using FreeRTOS/ST HAL within a task
   5:Ourwares/adctask.c **** *******************************************************************************/
   6:Ourwares/adctask.c **** 
   7:Ourwares/adctask.c **** #include "FreeRTOS.h"
   8:Ourwares/adctask.c **** #include "cmsis_os.h"
   9:Ourwares/adctask.c **** #include "malloc.h"
  10:Ourwares/adctask.c **** #include "adctask.h"
  11:Ourwares/adctask.c **** #include "adcparams.h"
  12:Ourwares/adctask.c **** #include "adcfastsum16.h"
  13:Ourwares/adctask.c **** #include "ADCTask.h"
  14:Ourwares/adctask.c **** 
  15:Ourwares/adctask.c **** #include "morse.h"
  16:Ourwares/adctask.c **** 
  17:Ourwares/adctask.c **** 
  18:Ourwares/adctask.c **** struct ADCDMATSKBLK adc1dmatskblk[ADCNUM];
  19:Ourwares/adctask.c **** 
  20:Ourwares/adctask.c **** /* *************************************************************************
  21:Ourwares/adctask.c ****  * struct ADCDMATSKBLK* adctask_init(ADC_HandleTypeDef* phadc,\
  22:Ourwares/adctask.c **** 	 uint32_t  notebit1,\
  23:Ourwares/adctask.c **** 	 uint32_t  notebit2,\
  24:Ourwares/adctask.c **** 	 uint32_t* pnoteval);
  25:Ourwares/adctask.c ****  *	@brief	: Setup ADC DMA buffers and control block
  26:Ourwares/adctask.c ****  * @param	: phadc = pointer to 'MX ADC control block
  27:Ourwares/adctask.c ****  * @param	: notebit1 = unique bit for notification @ 1/2 dma buffer
  28:Ourwares/adctask.c ****  * @param	: notebit2 = unique bit for notification @ end dma buffer
  29:Ourwares/adctask.c ****  * @param	: pnoteval = pointer to word receiving notification word from OS
ARM GAS  /tmp/ccBR87qy.s 			page 2


  30:Ourwares/adctask.c ****  * @return	: NULL = fail
  31:Ourwares/adctask.c ****  * *************************************************************************/
  32:Ourwares/adctask.c **** /*
  33:Ourwares/adctask.c ****    notebit1 notify at the halfway dma buffer point
  34:Ourwares/adctask.c ****      associates with pdma (beginning of dma buffer)
  35:Ourwares/adctask.c ****    notebit2 notify at the end of the dma buffer
  36:Ourwares/adctask.c ****      associates with pdma + dmact * phadc->Init.NbrOfConversion
  37:Ourwares/adctask.c **** */
  38:Ourwares/adctask.c **** 
  39:Ourwares/adctask.c **** struct ADCDMATSKBLK* adctask_init(ADC_HandleTypeDef* phadc,\
  40:Ourwares/adctask.c **** 	uint32_t  notebit1,\
  41:Ourwares/adctask.c **** 	uint32_t  notebit2,\
  42:Ourwares/adctask.c **** 	uint32_t* pnoteval)
  43:Ourwares/adctask.c **** {
  30              		.loc 1 43 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 4, -32
  39              		.cfi_offset 5, -28
  40              		.cfi_offset 6, -24
  41              		.cfi_offset 7, -20
  42              		.cfi_offset 8, -16
  43              		.cfi_offset 9, -12
  44              		.cfi_offset 10, -8
  45              		.cfi_offset 14, -4
  46              	.LVL1:
  44:Ourwares/adctask.c **** 	uint16_t* pdma;
  45:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* pblk = &adc1dmatskblk[0]; // ADC1 only for now
  46:Ourwares/adctask.c **** 
  47:Ourwares/adctask.c **** 	/* 'adcparams.h' MUST match what STM32CubeMX set up. */
  48:Ourwares/adctask.c **** 	if (ADC1IDX_ADCSCANSIZE != phadc->Init.NbrOfConversion) return NULL;
  47              		.loc 1 48 0
  48 0004 C469     		ldr	r4, [r0, #28]
  49 0006 0A2C     		cmp	r4, #10
  50 0008 2CD1     		bne	.L4
  51 000a 1F46     		mov	r7, r3
  52 000c 9046     		mov	r8, r2
  53 000e 8946     		mov	r9, r1
  54 0010 0546     		mov	r5, r0
  49:Ourwares/adctask.c **** 
  50:Ourwares/adctask.c **** 	/* ADC DMA summation length must match 1/2 DMA buffer sizing. */
  51:Ourwares/adctask.c **** 	if (ADCFASTSUM16SIZE != ADC1DMANUMSEQ) return NULL;
  52:Ourwares/adctask.c **** 
  53:Ourwares/adctask.c **** 	/* length = total number of uint16_t in dma buffer */
  54:Ourwares/adctask.c **** 	uint32_t length = ADC1DMANUMSEQ * 2 * phadc->Init.NbrOfConversion;
  55              		.loc 1 54 0
  56 0012 4FEA441A 		lsl	r10, r4, #5
  57              	.LVL2:
  55:Ourwares/adctask.c **** 
  56:Ourwares/adctask.c **** taskENTER_CRITICAL();
  58              		.loc 1 56 0
  59 0016 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  /tmp/ccBR87qy.s 			page 3


  60              	.LVL3:
  57:Ourwares/adctask.c **** 
  58:Ourwares/adctask.c **** 	/* Initialize params for ADC. */
  59:Ourwares/adctask.c **** 	adcparams_init();
  61              		.loc 1 59 0
  62 001a FFF7FEFF 		bl	adcparams_init
  63              	.LVL4:
  60:Ourwares/adctask.c **** 
  61:Ourwares/adctask.c **** 	/* Get dma buffer allocated */
  62:Ourwares/adctask.c **** 	pdma = (uint16_t*)calloc(length, sizeof(uint16_t));
  64              		.loc 1 62 0
  65 001e 0221     		movs	r1, #2
  66 0020 5046     		mov	r0, r10
  67 0022 FFF7FEFF 		bl	calloc
  68              	.LVL5:
  63:Ourwares/adctask.c **** 	if (pdma == NULL) {taskEXIT_CRITICAL();return NULL;}
  69              		.loc 1 63 0
  70 0026 20B9     		cbnz	r0, .L3
  71              		.loc 1 63 0 is_stmt 0 discriminator 1
  72 0028 FFF7FEFF 		bl	vPortExitCritical
  73              	.LVL6:
  74 002c 0020     		movs	r0, #0
  75 002e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
  76              	.LVL7:
  77              	.L3:
  64:Ourwares/adctask.c **** 
  65:Ourwares/adctask.c **** 	/* Populate our control block */
  66:Ourwares/adctask.c **** /* The following reproduced for convenience--
  67:Ourwares/adctask.c **** struct ADCDMATSKBLK
  68:Ourwares/adctask.c **** {
  69:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* pnext;
  70:Ourwares/adctask.c **** 	ADC_HandleTypeDef* phadc; // Pointer to 'MX adc control block
  71:Ourwares/adctask.c **** 	uint32_t  notebit1; // Notification bit for dma half complete interrupt
  72:Ourwares/adctask.c **** 	uint32_t  notebit2; // Notification bit for dma complete interrupt
  73:Ourwares/adctask.c **** 	uint32_t* pnoteval; // Pointer to notification word
  74:Ourwares/adctask.c **** 	uint16_t* pdma1;    // Pointer to first half of dma buffer
  75:Ourwares/adctask.c **** 	uint16_t* pdma2;    // Pointer to second half of dma buffer
  76:Ourwares/adctask.c **** 	osThreadId adctaskHandle;
  77:Ourwares/adctask.c **** 	uint32_t* psum;     // Pointer summed 1/2 dma buffer
  78:Ourwares/adctask.c **** 	uint16_t  dmact;    // Number of sequences in 1/2 dma buffer
  79:Ourwares/adctask.c **** };
  80:Ourwares/adctask.c **** 
  81:Ourwares/adctask.c **** */
  82:Ourwares/adctask.c **** 	pblk->phadc    = phadc;
  78              		.loc 1 82 0 is_stmt 1
  79 0032 0E4C     		ldr	r4, .L6
  80 0034 6560     		str	r5, [r4, #4]
  83:Ourwares/adctask.c **** 	pblk->notebit1 = notebit1;
  81              		.loc 1 83 0
  82 0036 C4F80890 		str	r9, [r4, #8]
  84:Ourwares/adctask.c **** 	pblk->notebit2 = notebit2;
  83              		.loc 1 84 0
  84 003a C4F80C80 		str	r8, [r4, #12]
  85:Ourwares/adctask.c **** 	pblk->pnoteval = pnoteval;
  85              		.loc 1 85 0
  86 003e 2761     		str	r7, [r4, #16]
  86:Ourwares/adctask.c **** 	pblk->pdma1    = pdma;
ARM GAS  /tmp/ccBR87qy.s 			page 4


  87              		.loc 1 86 0
  88 0040 6061     		str	r0, [r4, #20]
  87:Ourwares/adctask.c **** 	pblk->pdma2    = pdma + (ADC1DMANUMSEQ * phadc->Init.NbrOfConversion);
  89              		.loc 1 87 0
  90 0042 EB69     		ldr	r3, [r5, #28]
  91 0044 00EB4316 		add	r6, r0, r3, lsl #5
  92 0048 A661     		str	r6, [r4, #24]
  88:Ourwares/adctask.c **** 	pblk->adctaskHandle = ADCTaskHandle;
  93              		.loc 1 88 0
  94 004a 094B     		ldr	r3, .L6+4
  95 004c 1B68     		ldr	r3, [r3]
  96 004e E361     		str	r3, [r4, #28]
  89:Ourwares/adctask.c **** 
  90:Ourwares/adctask.c **** /**
  91:Ourwares/adctask.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
  92:Ourwares/adctask.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  93:Ourwares/adctask.c ****   *         the configuration information for the specified ADC.
  94:Ourwares/adctask.c ****   * @param  pData The destination Buffer address.
  95:Ourwares/adctask.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
  96:Ourwares/adctask.c ****   * @retval HAL status
  97:Ourwares/adctask.c ****   */
  98:Ourwares/adctask.c **** 
  99:Ourwares/adctask.c **** taskEXIT_CRITICAL();
  97              		.loc 1 99 0
  98 0050 FFF7FEFF 		bl	vPortExitCritical
  99              	.LVL8:
 100:Ourwares/adctask.c **** 	
 101:Ourwares/adctask.c **** 	HAL_ADC_Start_DMA(pblk->phadc, (uint32_t*)pblk->pdma1, length);
 100              		.loc 1 101 0
 101 0054 5246     		mov	r2, r10
 102 0056 6169     		ldr	r1, [r4, #20]
 103 0058 6068     		ldr	r0, [r4, #4]
 104 005a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 105              	.LVL9:
 102:Ourwares/adctask.c **** 	return pblk;
 106              		.loc 1 102 0
 107 005e 2046     		mov	r0, r4
 108 0060 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 109              	.LVL10:
 110              	.L4:
  48:Ourwares/adctask.c **** 
 111              		.loc 1 48 0
 112 0064 0020     		movs	r0, #0
 113              	.LVL11:
 103:Ourwares/adctask.c **** }
 114              		.loc 1 103 0
 115 0066 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 116              	.L7:
 117 006a 00BF     		.align	2
 118              	.L6:
 119 006c 00000000 		.word	adc1dmatskblk
 120 0070 00000000 		.word	ADCTaskHandle
 121              		.cfi_endproc
 122              	.LFE129:
 124              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 125              		.align	2
 126              		.global	HAL_ADC_ConvHalfCpltCallback
ARM GAS  /tmp/ccBR87qy.s 			page 5


 127              		.thumb
 128              		.thumb_func
 130              	HAL_ADC_ConvHalfCpltCallback:
 131              	.LFB130:
 104:Ourwares/adctask.c **** 
 105:Ourwares/adctask.c **** /* #######################################################################
 106:Ourwares/adctask.c ****    ADC DMA interrupt callbacks
 107:Ourwares/adctask.c ****    ####################################################################### */
 108:Ourwares/adctask.c **** /* *************************************************************************
 109:Ourwares/adctask.c ****  * void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc);
 110:Ourwares/adctask.c ****  *	@brief	: Call back from stm32f4xx_hal_adc: Halfway point of dma buffer
 111:Ourwares/adctask.c ****  * *************************************************************************/
 112:Ourwares/adctask.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 113:Ourwares/adctask.c **** {
 132              		.loc 1 113 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL12:
 137 0000 00B5     		push	{lr}
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 85B0     		sub	sp, sp, #20
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 24
 114:Ourwares/adctask.c **** 	adcommon.dmact += 1; // Running count
 144              		.loc 1 114 0
 145 0004 0E4A     		ldr	r2, .L11
 146 0006 936B     		ldr	r3, [r2, #56]
 147 0008 0133     		adds	r3, r3, #1
 148 000a 9363     		str	r3, [r2, #56]
 115:Ourwares/adctask.c **** 	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 149              		.loc 1 115 0
 150 000c 0023     		movs	r3, #0
 151 000e 0393     		str	r3, [sp, #12]
 152              	.LVL13:
 116:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* ptmp = &adc1dmatskblk[0];
 117:Ourwares/adctask.c **** 
 118:Ourwares/adctask.c **** 	/* Trigger Recieve Task to poll dma uarts */
 119:Ourwares/adctask.c **** 	if( ptmp->adctaskHandle == NULL) return; // Skip task has not been created
 153              		.loc 1 119 0
 154 0010 0C4B     		ldr	r3, .L11+4
 155 0012 D869     		ldr	r0, [r3, #28]
 156              	.LVL14:
 157 0014 80B1     		cbz	r0, .L8
 120:Ourwares/adctask.c **** 	xTaskNotifyFromISR(ptmp->adctaskHandle, 
 158              		.loc 1 120 0
 159 0016 9968     		ldr	r1, [r3, #8]
 160 0018 03AB     		add	r3, sp, #12
 161 001a 0093     		str	r3, [sp]
 162 001c 0023     		movs	r3, #0
 163 001e 0122     		movs	r2, #1
 164 0020 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 165              	.LVL15:
 121:Ourwares/adctask.c **** 		ptmp->notebit1,	/* 'or' bit assigned to buffer to notification value. */
 122:Ourwares/adctask.c **** 		eSetBits,      /* Set 'or' option */
ARM GAS  /tmp/ccBR87qy.s 			page 6


 123:Ourwares/adctask.c **** 		&xHigherPriorityTaskWoken ); 
 124:Ourwares/adctask.c **** 
 125:Ourwares/adctask.c **** 	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 166              		.loc 1 125 0
 167 0024 039B     		ldr	r3, [sp, #12]
 168 0026 3BB1     		cbz	r3, .L8
 169              		.loc 1 125 0 is_stmt 0 discriminator 1
 170 0028 4FF08052 		mov	r2, #268435456
 171 002c 064B     		ldr	r3, .L11+8
 172 002e 1A60     		str	r2, [r3]
 173              		.syntax unified
 174              	@ 125 "Ourwares/adctask.c" 1
 175 0030 BFF34F8F 		dsb
 176              	@ 0 "" 2
 177              	@ 125 "Ourwares/adctask.c" 1
 178 0034 BFF36F8F 		isb
 179              	@ 0 "" 2
 180              		.thumb
 181              		.syntax unified
 182              	.L8:
 126:Ourwares/adctask.c **** 	return;
 127:Ourwares/adctask.c **** }
 183              		.loc 1 127 0 is_stmt 1
 184 0038 05B0     		add	sp, sp, #20
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 4
 187              		@ sp needed
 188 003a 5DF804FB 		ldr	pc, [sp], #4
 189              	.L12:
 190 003e 00BF     		.align	2
 191              	.L11:
 192 0040 00000000 		.word	adcommon
 193 0044 00000000 		.word	adc1dmatskblk
 194 0048 04ED00E0 		.word	-536810236
 195              		.cfi_endproc
 196              	.LFE130:
 198              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 199              		.align	2
 200              		.global	HAL_ADC_ConvCpltCallback
 201              		.thumb
 202              		.thumb_func
 204              	HAL_ADC_ConvCpltCallback:
 205              	.LFB131:
 128:Ourwares/adctask.c **** /* *************************************************************************
 129:Ourwares/adctask.c ****  * void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc);
 130:Ourwares/adctask.c ****  *	@brief	: Call back from stm32f4xx_hal_adc: End point of dma buffer
 131:Ourwares/adctask.c ****  * *************************************************************************/
 132:Ourwares/adctask.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 133:Ourwares/adctask.c **** {
 206              		.loc 1 133 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL16:
 211 0000 00B5     		push	{lr}
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccBR87qy.s 			page 7


 214              		.cfi_offset 14, -4
 215 0002 85B0     		sub	sp, sp, #20
 216              	.LCFI5:
 217              		.cfi_def_cfa_offset 24
 134:Ourwares/adctask.c **** 	adcommon.dmact += 1; // Running count
 218              		.loc 1 134 0
 219 0004 0E4A     		ldr	r2, .L16
 220 0006 936B     		ldr	r3, [r2, #56]
 221 0008 0133     		adds	r3, r3, #1
 222 000a 9363     		str	r3, [r2, #56]
 135:Ourwares/adctask.c **** 	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 223              		.loc 1 135 0
 224 000c 0023     		movs	r3, #0
 225 000e 0393     		str	r3, [sp, #12]
 226              	.LVL17:
 136:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* ptmp = &adc1dmatskblk[0];
 137:Ourwares/adctask.c **** 
 138:Ourwares/adctask.c **** 	/* Trigger Recieve Task to poll dma uarts */
 139:Ourwares/adctask.c **** 	if( ptmp->adctaskHandle == NULL) return; // Skip task has not been created
 227              		.loc 1 139 0
 228 0010 0C4B     		ldr	r3, .L16+4
 229 0012 D869     		ldr	r0, [r3, #28]
 230              	.LVL18:
 231 0014 80B1     		cbz	r0, .L13
 140:Ourwares/adctask.c **** 	xTaskNotifyFromISR(ptmp->adctaskHandle, 
 232              		.loc 1 140 0
 233 0016 D968     		ldr	r1, [r3, #12]
 234 0018 03AB     		add	r3, sp, #12
 235 001a 0093     		str	r3, [sp]
 236 001c 0023     		movs	r3, #0
 237 001e 0122     		movs	r2, #1
 238 0020 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 239              	.LVL19:
 141:Ourwares/adctask.c **** 		ptmp->notebit2,	/* 'or' bit assigned to buffer to notification value. */
 142:Ourwares/adctask.c **** 		eSetBits,      /* Set 'or' option */
 143:Ourwares/adctask.c **** 		&xHigherPriorityTaskWoken ); 
 144:Ourwares/adctask.c **** 
 145:Ourwares/adctask.c **** 	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 240              		.loc 1 145 0
 241 0024 039B     		ldr	r3, [sp, #12]
 242 0026 3BB1     		cbz	r3, .L13
 243              		.loc 1 145 0 is_stmt 0 discriminator 1
 244 0028 4FF08052 		mov	r2, #268435456
 245 002c 064B     		ldr	r3, .L16+8
 246 002e 1A60     		str	r2, [r3]
 247              		.syntax unified
 248              	@ 145 "Ourwares/adctask.c" 1
 249 0030 BFF34F8F 		dsb
 250              	@ 0 "" 2
 251              	@ 145 "Ourwares/adctask.c" 1
 252 0034 BFF36F8F 		isb
 253              	@ 0 "" 2
 254              		.thumb
 255              		.syntax unified
 256              	.L13:
 146:Ourwares/adctask.c **** 	return;
 147:Ourwares/adctask.c **** }
ARM GAS  /tmp/ccBR87qy.s 			page 8


 257              		.loc 1 147 0 is_stmt 1
 258 0038 05B0     		add	sp, sp, #20
 259              	.LCFI6:
 260              		.cfi_def_cfa_offset 4
 261              		@ sp needed
 262 003a 5DF804FB 		ldr	pc, [sp], #4
 263              	.L17:
 264 003e 00BF     		.align	2
 265              	.L16:
 266 0040 00000000 		.word	adcommon
 267 0044 00000000 		.word	adc1dmatskblk
 268 0048 04ED00E0 		.word	-536810236
 269              		.cfi_endproc
 270              	.LFE131:
 272              		.comm	adc1dmatskblk,96,4
 273              		.text
 274              	.Letext0:
 275              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 276              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 277              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 278              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 279              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 280              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 281              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 282              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 283              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 284              		.file 11 "Ourwares/adctask.h"
 285              		.file 12 "Ourtasks/adcparams.h"
 286              		.file 13 "Drivers/CMSIS/Include/core_cm4.h"
 287              		.file 14 "Ourwares/ADCTask.h"
 288              		.file 15 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/malloc.h"
ARM GAS  /tmp/ccBR87qy.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 adctask.c
     /tmp/ccBR87qy.s:22     .text.adctask_init:00000000 $t
     /tmp/ccBR87qy.s:27     .text.adctask_init:00000000 adctask_init
     /tmp/ccBR87qy.s:119    .text.adctask_init:0000006c $d
                            *COM*:00000060 adc1dmatskblk
     /tmp/ccBR87qy.s:125    .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
     /tmp/ccBR87qy.s:130    .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccBR87qy.s:192    .text.HAL_ADC_ConvHalfCpltCallback:00000040 $d
     /tmp/ccBR87qy.s:199    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/ccBR87qy.s:204    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/ccBR87qy.s:266    .text.HAL_ADC_ConvCpltCallback:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
adcparams_init
calloc
vPortExitCritical
HAL_ADC_Start_DMA
ADCTaskHandle
xTaskGenericNotifyFromISR
adcommon

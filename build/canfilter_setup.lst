ARM GAS  /tmp/cc8STPUm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"canfilter_setup.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.canfilter_setup_first,"ax",%progbits
  22              		.align	2
  23              		.global	canfilter_setup_first
  24              		.thumb
  25              		.thumb_func
  27              	canfilter_setup_first:
  28              	.LFB129:
  29              		.file 1 "Ourwares/canfilter_setup.c"
   1:Ourwares/canfilter_setup.c **** /******************************************************************************
   2:Ourwares/canfilter_setup.c **** * File Name          : canfilter_setup.c
   3:Ourwares/canfilter_setup.c **** * Date First Issued  : 01/10/2019
   4:Ourwares/canfilter_setup.c **** * Description        : CAN FreeRTOS/ST HAL: Hardware filtering. (32b only)
   5:Ourwares/canfilter_setup.c **** *******************************************************************************/
   6:Ourwares/canfilter_setup.c **** #include "canfilter_setup.h"
   7:Ourwares/canfilter_setup.c **** 
   8:Ourwares/canfilter_setup.c **** #include "CanTask.h"
   9:Ourwares/canfilter_setup.c **** #include "can_iface.h"
  10:Ourwares/canfilter_setup.c **** 
  11:Ourwares/canfilter_setup.c **** struct CANFILTERW
  12:Ourwares/canfilter_setup.c **** {
  13:Ourwares/canfilter_setup.c **** 	CAN_FilterTypeDef filt;  // HAL filter struct
  14:Ourwares/canfilter_setup.c **** 	uint8_t banknum;         // Filter bank number: next available (pair 32b words)
  15:Ourwares/canfilter_setup.c **** 	uint8_t odd;             // Filter bank 32b reg pair, next : 0 = even, 1 = odd					
  16:Ourwares/canfilter_setup.c **** 	uint8_t oto_sw;          // OTO setup switch for struct
  17:Ourwares/canfilter_setup.c **** };
  18:Ourwares/canfilter_setup.c **** 
  19:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt1 = {0};
  20:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt2 = {0};
  21:Ourwares/canfilter_setup.c **** static struct CANFILTERW canfilt3 = {0};
  22:Ourwares/canfilter_setup.c **** 
  23:Ourwares/canfilter_setup.c **** /* *************************************************************************
  24:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_first(uint8_t cannum, CAN_HandleTypeDef *phcan, uint8_t slaveb
  25:Ourwares/canfilter_setup.c ****  * @brief	: Sets Bank 0 to pass ==>all<== msgs to FIFO 0, 32b mask mode
  26:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
  27:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
  28:Ourwares/canfilter_setup.c ****  * @param	: slavebankdmarc = For CAN2, filter bank number demarcation, where CAN2 banks start
  29:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
ARM GAS  /tmp/cc8STPUm.s 			page 2


  30:Ourwares/canfilter_setup.c ****  * *************************************************************************/
  31:Ourwares/canfilter_setup.c **** /* NOTE: 'banknum' is left at zero, odd zero, so that the next addition will override
  32:Ourwares/canfilter_setup.c ****    the "accept all" configuration of this setup.
  33:Ourwares/canfilter_setup.c **** 
  34:Ourwares/canfilter_setup.c **** 	Some of the values in the HAL struct do not need to be updated, e.g. 'FilterActivation' hence
  35:Ourwares/canfilter_setup.c ****    the call to  'first"' sets these up.
  36:Ourwares/canfilter_setup.c **** */
  37:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_first(uint8_t cannum, CAN_HandleTypeDef *phcan, uint8_t slavebank
  38:Ourwares/canfilter_setup.c **** {
  30              		.loc 1 38 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  39:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
  40:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
  41:Ourwares/canfilter_setup.c **** 
  42:Ourwares/canfilter_setup.c **** 	switch(cannum)
  42              		.loc 1 42 0
  43 0002 0228     		cmp	r0, #2
  44 0004 07D0     		beq	.L9
  45 0006 0328     		cmp	r0, #3
  46 0008 03D0     		beq	.L4
  47 000a 0128     		cmp	r0, #1
  48 000c 20D1     		bne	.L10
  43:Ourwares/canfilter_setup.c **** 	{
  44:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
  49              		.loc 1 44 0
  50 000e 114C     		ldr	r4, .L12
  51 0010 02E0     		b	.L3
  52              	.L4:
  53              	.LVL1:
  45:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
  46:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
  54              		.loc 1 46 0
  55 0012 114C     		ldr	r4, .L12+4
  56 0014 00E0     		b	.L3
  57              	.LVL2:
  58              	.L9:
  45:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
  59              		.loc 1 45 0
  60 0016 114C     		ldr	r4, .L12+8
  61              	.L3:
  62              	.LVL3:
  47:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
  48:Ourwares/canfilter_setup.c **** 	} // CAN1 & CAN3 start at zero
  49:Ourwares/canfilter_setup.c **** 	if (cannum != 2)
  63              		.loc 1 49 0
  64 0018 0228     		cmp	r0, #2
  65 001a 02D0     		beq	.L6
ARM GAS  /tmp/cc8STPUm.s 			page 3


  50:Ourwares/canfilter_setup.c **** 	{
  51:Ourwares/canfilter_setup.c **** 		p->filt.FilterBank = 0;  // Filter bank number
  66              		.loc 1 51 0
  67 001c 0023     		movs	r3, #0
  68 001e 6361     		str	r3, [r4, #20]
  69 0020 00E0     		b	.L7
  70              	.L6:
  52:Ourwares/canfilter_setup.c **** 	}
  53:Ourwares/canfilter_setup.c **** 	else
  54:Ourwares/canfilter_setup.c **** 	{ // Here, CAN2 slave filter bank is shifted
  55:Ourwares/canfilter_setup.c **** 		p->filt.FilterBank = slavebankdmarc;  // CAN1-CAN2 bank demarcation
  71              		.loc 1 55 0
  72 0022 6261     		str	r2, [r4, #20]
  73              	.L7:
  74 0024 0846     		mov	r0, r1
  75              	.LVL4:
  56:Ourwares/canfilter_setup.c **** 	}
  57:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdHigh         = 0;
  76              		.loc 1 57 0
  77 0026 0025     		movs	r5, #0
  78 0028 2560     		str	r5, [r4]
  58:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdLow          = 0;
  79              		.loc 1 58 0
  80 002a 6560     		str	r5, [r4, #4]
  59:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdHigh     = 0;
  81              		.loc 1 59 0
  82 002c A560     		str	r5, [r4, #8]
  60:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdLow      = 0;
  83              		.loc 1 60 0
  84 002e E560     		str	r5, [r4, #12]
  61:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = 0;	// FIFO 0
  85              		.loc 1 61 0
  86 0030 2561     		str	r5, [r4, #16]
  62:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDMASK;
  87              		.loc 1 62 0
  88 0032 A561     		str	r5, [r4, #24]
  63:Ourwares/canfilter_setup.c **** 	p->filt.FilterScale          = CAN_FILTERSCALE_32BIT;
  89              		.loc 1 63 0
  90 0034 0126     		movs	r6, #1
  91 0036 E661     		str	r6, [r4, #28]
  64:Ourwares/canfilter_setup.c **** 	p->filt.FilterActivation     = ENABLE;
  92              		.loc 1 64 0
  93 0038 2662     		str	r6, [r4, #32]
  65:Ourwares/canfilter_setup.c **** 	p->filt.SlaveStartFilterBank = slavebankdmarc; // No meaning for CAN3
  94              		.loc 1 65 0
  95 003a 6262     		str	r2, [r4, #36]
  66:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
  96              		.loc 1 66 0
  97 003c 2146     		mov	r1, r4
  98              	.LVL5:
  99 003e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 100              	.LVL6:
  67:Ourwares/canfilter_setup.c **** 	p->oto_sw = 1;
 101              		.loc 1 67 0
 102 0042 84F82A60 		strb	r6, [r4, #42]
  68:Ourwares/canfilter_setup.c **** 	p->banknum = 0;
 103              		.loc 1 68 0
ARM GAS  /tmp/cc8STPUm.s 			page 4


 104 0046 84F82850 		strb	r5, [r4, #40]
  69:Ourwares/canfilter_setup.c **** 	p->odd     = 0;
 105              		.loc 1 69 0
 106 004a 84F82950 		strb	r5, [r4, #41]
  70:Ourwares/canfilter_setup.c **** 	return ret;
 107              		.loc 1 70 0
 108 004e 70BD     		pop	{r4, r5, r6, pc}
 109              	.LVL7:
 110              	.L10:
  47:Ourwares/canfilter_setup.c **** 	} // CAN1 & CAN3 start at zero
 111              		.loc 1 47 0
 112 0050 0120     		movs	r0, #1
 113              	.LVL8:
  71:Ourwares/canfilter_setup.c **** }
 114              		.loc 1 71 0
 115 0052 70BD     		pop	{r4, r5, r6, pc}
 116              	.L13:
 117              		.align	2
 118              	.L12:
 119 0054 00000000 		.word	.LANCHOR0
 120 0058 00000000 		.word	.LANCHOR2
 121 005c 00000000 		.word	.LANCHOR1
 122              		.cfi_endproc
 123              	.LFE129:
 125              		.section	.text.canfilter_setup_add32b_mskmode,"ax",%progbits
 126              		.align	2
 127              		.global	canfilter_setup_add32b_mskmode
 128              		.thumb
 129              		.thumb_func
 131              	canfilter_setup_add32b_mskmode:
 132              	.LFB130:
  72:Ourwares/canfilter_setup.c **** /* *************************************************************************
  73:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_add32b_mskmode(uint8_t cannum, CAN_HandleTypeDef *phcan, \
  74:Ourwares/canfilter_setup.c ****     uint32_t id,   \ 
  75:Ourwares/canfilter_setup.c ****     uint32_t msk,  \
  76:Ourwares/canfilter_setup.c ****     uint8_t  fifo, \
  77:Ourwares/canfilter_setup.c ****     uint8_t  banknum);
  78:Ourwares/canfilter_setup.c ****  * @brief	: Add a 32b  id and mask to a specified filter bank
  79:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
  80:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
  81:Ourwares/canfilter_setup.c ****  * @param	: id    = 32b CAN id
  82:Ourwares/canfilter_setup.c ****  * @param	: msk   = 32b mask (0's are don't cares)
  83:Ourwares/canfilter_setup.c ****  * @param	: fifo  = fifo: 0 or 1
  84:Ourwares/canfilter_setup.c ****  * @param	: banknum = filter bank number 0 - 14/28 depending on single or slave
  85:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
  86:Ourwares/canfilter_setup.c ****  * *************************************************************************/
  87:Ourwares/canfilter_setup.c **** /* NOTE: banknum is "absolute" and overrides "banknum" that may have been incremented
  88:Ourwares/canfilter_setup.c ****    by additions.
  89:Ourwares/canfilter_setup.c **** */
  90:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_add32b_mskmode(uint8_t cannum, CAN_HandleTypeDef *phcan, \
  91:Ourwares/canfilter_setup.c ****     uint32_t id,   \
  92:Ourwares/canfilter_setup.c ****     uint32_t msk,  \
  93:Ourwares/canfilter_setup.c ****     uint8_t  fifo, \
  94:Ourwares/canfilter_setup.c ****     uint8_t  banknum)
  95:Ourwares/canfilter_setup.c **** {
 133              		.loc 1 95 0
 134              		.cfi_startproc
ARM GAS  /tmp/cc8STPUm.s 			page 5


 135              		@ args = 8, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              	.LVL9:
 138 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 32
 141              		.cfi_offset 3, -32
 142              		.cfi_offset 4, -28
 143              		.cfi_offset 5, -24
 144              		.cfi_offset 6, -20
 145              		.cfi_offset 7, -16
 146              		.cfi_offset 8, -12
 147              		.cfi_offset 9, -8
 148              		.cfi_offset 14, -4
 149 0004 9DF82490 		ldrb	r9, [sp, #36]	@ zero_extendqisi2
  96:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
  97:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
  98:Ourwares/canfilter_setup.c **** 
  99:Ourwares/canfilter_setup.c **** 	switch(cannum)
 150              		.loc 1 99 0
 151 0008 0228     		cmp	r0, #2
 152 000a 07D0     		beq	.L23
 153 000c 0328     		cmp	r0, #3
 154 000e 03D0     		beq	.L17
 155 0010 0128     		cmp	r0, #1
 156 0012 3AD1     		bne	.L25
 100:Ourwares/canfilter_setup.c **** 	{
 101:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
 157              		.loc 1 101 0
 158 0014 204C     		ldr	r4, .L27
 159 0016 02E0     		b	.L16
 160              	.L17:
 161              	.LVL10:
 102:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 103:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
 162              		.loc 1 103 0
 163 0018 204C     		ldr	r4, .L27+4
 164 001a 00E0     		b	.L16
 165              	.LVL11:
 166              	.L23:
 102:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 167              		.loc 1 102 0
 168 001c 204C     		ldr	r4, .L27+8
 169              	.L16:
 170 001e 1E46     		mov	r6, r3
 171 0020 1746     		mov	r7, r2
 172 0022 8846     		mov	r8, r1
 173 0024 0546     		mov	r5, r0
 174              	.LVL12:
 104:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
 105:Ourwares/canfilter_setup.c **** 	}
 106:Ourwares/canfilter_setup.c **** 
 107:Ourwares/canfilter_setup.c **** 	/* Make sure the first setup was made */
 108:Ourwares/canfilter_setup.c **** 	if (p->oto_sw == 0)
 175              		.loc 1 108 0
 176 0026 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 177              	.LVL13:
ARM GAS  /tmp/cc8STPUm.s 			page 6


 178 002a 13B9     		cbnz	r3, .L19
 109:Ourwares/canfilter_setup.c **** 	{
 110:Ourwares/canfilter_setup.c **** 		canfilter_setup_first(cannum, phcan, 14);
 179              		.loc 1 110 0
 180 002c 0E22     		movs	r2, #14
 181              	.LVL14:
 182 002e FFF7FEFF 		bl	canfilter_setup_first
 183              	.LVL15:
 184              	.L19:
 111:Ourwares/canfilter_setup.c **** 	}
 112:Ourwares/canfilter_setup.c **** 
 113:Ourwares/canfilter_setup.c **** 	/* Check for bozo call. */
 114:Ourwares/canfilter_setup.c **** 	if ((cannum == 2) && (banknum <= p->filt.SlaveStartFilterBank))
 185              		.loc 1 114 0
 186 0032 022D     		cmp	r5, #2
 187 0034 02D1     		bne	.L20
 188              		.loc 1 114 0 is_stmt 0 discriminator 1
 189 0036 636A     		ldr	r3, [r4, #36]
 190 0038 9945     		cmp	r9, r3
 191 003a 29D9     		bls	.L24
 192              	.L20:
 115:Ourwares/canfilter_setup.c **** 	{ // Here, bank number is in CAN1 area
 116:Ourwares/canfilter_setup.c **** 		return HAL_ERROR;
 117:Ourwares/canfilter_setup.c **** 	}
 118:Ourwares/canfilter_setup.c **** 
 119:Ourwares/canfilter_setup.c **** 	/* 32b id & mask take a complete filter bank */
 120:Ourwares/canfilter_setup.c **** 	if (p->odd != 0)
 193              		.loc 1 120 0 is_stmt 1
 194 003c 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 195 0040 3BB1     		cbz	r3, .L21
 121:Ourwares/canfilter_setup.c **** 	{ // Here one register availalbe in current banknum
 122:Ourwares/canfilter_setup.c **** 		p->banknum += 1;	// Advance to next bank
 196              		.loc 1 122 0
 197 0042 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 198 0046 0133     		adds	r3, r3, #1
 199 0048 84F82830 		strb	r3, [r4, #40]
 123:Ourwares/canfilter_setup.c **** 		p->odd = 0;
 200              		.loc 1 123 0
 201 004c 0023     		movs	r3, #0
 202 004e 84F82930 		strb	r3, [r4, #41]
 203              	.L21:
 124:Ourwares/canfilter_setup.c **** 	}
 125:Ourwares/canfilter_setup.c **** 
 126:Ourwares/canfilter_setup.c **** 	p->filt.FilterBank       = banknum;
 204              		.loc 1 126 0
 205 0052 C4F81490 		str	r9, [r4, #20]
 127:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdHigh     = (id  >> 16) & 0xffff;
 206              		.loc 1 127 0
 207 0056 3B0C     		lsrs	r3, r7, #16
 208 0058 2360     		str	r3, [r4]
 128:Ourwares/canfilter_setup.c **** 	p->filt.FilterIdLow      = (id  >>  0) & 0xffff;
 209              		.loc 1 128 0
 210 005a BFB2     		uxth	r7, r7
 211              	.LVL16:
 212 005c 6760     		str	r7, [r4, #4]
 129:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdHigh = (msk >> 16) & 0xffff;
 213              		.loc 1 129 0
ARM GAS  /tmp/cc8STPUm.s 			page 7


 214 005e 330C     		lsrs	r3, r6, #16
 215 0060 A360     		str	r3, [r4, #8]
 130:Ourwares/canfilter_setup.c **** 	p->filt.FilterMaskIdLow  = (msk >>  0) & 0xffff;
 216              		.loc 1 130 0
 217 0062 B6B2     		uxth	r6, r6
 218              	.LVL17:
 219 0064 E660     		str	r6, [r4, #12]
 131:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = fifo & 0x1;
 220              		.loc 1 131 0
 221 0066 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 222 006a 03F00103 		and	r3, r3, #1
 223 006e 2361     		str	r3, [r4, #16]
 132:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDMASK;
 224              		.loc 1 132 0
 225 0070 0023     		movs	r3, #0
 226 0072 A361     		str	r3, [r4, #24]
 133:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
 227              		.loc 1 133 0
 228 0074 2146     		mov	r1, r4
 229 0076 4046     		mov	r0, r8
 230 0078 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 231              	.LVL18:
 134:Ourwares/canfilter_setup.c **** 
 135:Ourwares/canfilter_setup.c **** 	p->banknum += 1;	// Advance to next bank
 232              		.loc 1 135 0
 233 007c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 234 0080 0133     		adds	r3, r3, #1
 235 0082 84F82830 		strb	r3, [r4, #40]
 136:Ourwares/canfilter_setup.c **** 	return ret;
 236              		.loc 1 136 0
 237 0086 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 238              	.LVL19:
 239              	.L25:
 104:Ourwares/canfilter_setup.c **** 	}
 240              		.loc 1 104 0
 241 008a 0120     		movs	r0, #1
 242              	.LVL20:
 243 008c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 244              	.LVL21:
 245              	.L24:
 116:Ourwares/canfilter_setup.c **** 	}
 246              		.loc 1 116 0
 247 0090 0120     		movs	r0, #1
 137:Ourwares/canfilter_setup.c **** }
 248              		.loc 1 137 0
 249 0092 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 250              	.LVL22:
 251              	.L28:
 252 0096 00BF     		.align	2
 253              	.L27:
 254 0098 00000000 		.word	.LANCHOR0
 255 009c 00000000 		.word	.LANCHOR2
 256 00a0 00000000 		.word	.LANCHOR1
 257              		.cfi_endproc
 258              	.LFE130:
 260              		.section	.text.canfilter_setup_add32b_id,"ax",%progbits
 261              		.align	2
ARM GAS  /tmp/cc8STPUm.s 			page 8


 262              		.global	canfilter_setup_add32b_id
 263              		.thumb
 264              		.thumb_func
 266              	canfilter_setup_add32b_id:
 267              	.LFB131:
 138:Ourwares/canfilter_setup.c **** 
 139:Ourwares/canfilter_setup.c **** /* *************************************************************************
 140:Ourwares/canfilter_setup.c ****  * HAL_StatusTypeDef canfilter_setup_add32b_id(uint8_t cannum, CAN_HandleTypeDef *phcan, \
 141:Ourwares/canfilter_setup.c ****     uint32_t id,   \ 
 142:Ourwares/canfilter_setup.c ****     uint8_t  fifo );
 143:Ourwares/canfilter_setup.c ****  * @brief	: Add a 32b id, advance bank number & odd/even
 144:Ourwares/canfilter_setup.c ****  * @param	: cannum = CAN module number 1, 2, or 3
 145:Ourwares/canfilter_setup.c ****  * @param	: phcan = Pointer to HAL CAN handle (control block)
 146:Ourwares/canfilter_setup.c ****  * @param	: id    = 32b CAN id
 147:Ourwares/canfilter_setup.c ****  * @param	: fifo  = fifo: 0 or 1
 148:Ourwares/canfilter_setup.c ****  * @return	: HAL_ERROR or HAL_OK
 149:Ourwares/canfilter_setup.c ****  * *************************************************************************/
 150:Ourwares/canfilter_setup.c **** HAL_StatusTypeDef canfilter_setup_add32b_id(uint8_t cannum, CAN_HandleTypeDef *phcan, \
 151:Ourwares/canfilter_setup.c ****     uint32_t id,   \
 152:Ourwares/canfilter_setup.c ****     uint8_t  fifo )
 153:Ourwares/canfilter_setup.c **** {
 268              		.loc 1 153 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              	.LVL23:
 273 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 274              	.LCFI2:
 275              		.cfi_def_cfa_offset 24
 276              		.cfi_offset 4, -24
 277              		.cfi_offset 5, -20
 278              		.cfi_offset 6, -16
 279              		.cfi_offset 7, -12
 280              		.cfi_offset 8, -8
 281              		.cfi_offset 14, -4
 154:Ourwares/canfilter_setup.c **** 	struct CANFILTERW* p;
 155:Ourwares/canfilter_setup.c **** 	HAL_StatusTypeDef ret;
 156:Ourwares/canfilter_setup.c **** 
 157:Ourwares/canfilter_setup.c **** 	switch(cannum)
 282              		.loc 1 157 0
 283 0004 0228     		cmp	r0, #2
 284 0006 07D0     		beq	.L39
 285 0008 0328     		cmp	r0, #3
 286 000a 03D0     		beq	.L32
 287 000c 0128     		cmp	r0, #1
 288 000e 3CD1     		bne	.L43
 158:Ourwares/canfilter_setup.c **** 	{
 159:Ourwares/canfilter_setup.c **** 	case 1:	p = &canfilt1; break; // CAN 1
 289              		.loc 1 159 0
 290 0010 244C     		ldr	r4, .L45
 291 0012 02E0     		b	.L31
 292              	.L32:
 293              	.LVL24:
 160:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 161:Ourwares/canfilter_setup.c **** 	case 3:	p = &canfilt3; break; // CAN 3
 294              		.loc 1 161 0
 295 0014 244C     		ldr	r4, .L45+4
ARM GAS  /tmp/cc8STPUm.s 			page 9


 296 0016 00E0     		b	.L31
 297              	.LVL25:
 298              	.L39:
 160:Ourwares/canfilter_setup.c **** 	case 2: 	p = &canfilt2; break; // CAN 2
 299              		.loc 1 160 0
 300 0018 244C     		ldr	r4, .L45+8
 301              	.L31:
 302 001a 1F46     		mov	r7, r3
 303 001c 1646     		mov	r6, r2
 304 001e 8846     		mov	r8, r1
 305 0020 0546     		mov	r5, r0
 306              	.LVL26:
 162:Ourwares/canfilter_setup.c **** 	default:		return HAL_ERROR;
 163:Ourwares/canfilter_setup.c **** 	}
 164:Ourwares/canfilter_setup.c **** 
 165:Ourwares/canfilter_setup.c **** 	/* Make sure the first setup was made */
 166:Ourwares/canfilter_setup.c **** 	if (p->oto_sw == 0)
 307              		.loc 1 166 0
 308 0022 94F82A30 		ldrb	r3, [r4, #42]	@ zero_extendqisi2
 309              	.LVL27:
 310 0026 23B9     		cbnz	r3, .L34
 167:Ourwares/canfilter_setup.c **** 	{ // If not setup, use default for CAN2 bank demarcation
 168:Ourwares/canfilter_setup.c **** 		ret = canfilter_setup_first(cannum, phcan, 14);
 311              		.loc 1 168 0
 312 0028 0E22     		movs	r2, #14
 313              	.LVL28:
 314 002a FFF7FEFF 		bl	canfilter_setup_first
 315              	.LVL29:
 169:Ourwares/canfilter_setup.c **** 		if (ret == HAL_ERROR) return HAL_ERROR;
 316              		.loc 1 169 0
 317 002e 0128     		cmp	r0, #1
 318 0030 2ED0     		beq	.L40
 319              	.LVL30:
 320              	.L34:
 170:Ourwares/canfilter_setup.c **** 	}
 171:Ourwares/canfilter_setup.c **** 
 172:Ourwares/canfilter_setup.c **** 	/* Check for bad CAN1,2 bank number */
 173:Ourwares/canfilter_setup.c **** 	if ((cannum == 2) && (p->banknum <= p->filt.SlaveStartFilterBank))
 321              		.loc 1 173 0
 322 0032 022D     		cmp	r5, #2
 323 0034 04D1     		bne	.L35
 324              		.loc 1 173 0 is_stmt 0 discriminator 1
 325 0036 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 326 003a 636A     		ldr	r3, [r4, #36]
 327 003c 9A42     		cmp	r2, r3
 328 003e 2AD9     		bls	.L41
 329              	.L35:
 174:Ourwares/canfilter_setup.c **** 	{ // Here, bank number is in CAN1 area
 175:Ourwares/canfilter_setup.c **** 		return HAL_ERROR;
 176:Ourwares/canfilter_setup.c **** 	}
 177:Ourwares/canfilter_setup.c **** 
 178:Ourwares/canfilter_setup.c **** 	if (p->odd != 0)
 330              		.loc 1 178 0 is_stmt 1
 331 0040 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 332 0044 7BB1     		cbz	r3, .L36
 179:Ourwares/canfilter_setup.c **** 	{ // Here, next available is in the odd position
 180:Ourwares/canfilter_setup.c **** 
ARM GAS  /tmp/cc8STPUm.s 			page 10


 181:Ourwares/canfilter_setup.c **** 		/* Setup First position of pair with ID */
 182:Ourwares/canfilter_setup.c **** 		p->filt.FilterIdHigh = (id >> 16) & 0xffff;
 333              		.loc 1 182 0
 334 0046 330C     		lsrs	r3, r6, #16
 335 0048 2360     		str	r3, [r4]
 183:Ourwares/canfilter_setup.c **** 		p->filt.FilterIdLow  = (id >>  0) & 0xffff;
 336              		.loc 1 183 0
 337 004a B6B2     		uxth	r6, r6
 338              	.LVL31:
 339 004c 6660     		str	r6, [r4, #4]
 184:Ourwares/canfilter_setup.c **** 
 185:Ourwares/canfilter_setup.c **** 		/* Advance one of ID (out of pair for one bank) */
 186:Ourwares/canfilter_setup.c **** 		p->odd = 0;	// Reset to even
 340              		.loc 1 186 0
 341 004e 0023     		movs	r3, #0
 342 0050 84F82930 		strb	r3, [r4, #41]
 187:Ourwares/canfilter_setup.c **** 		p->banknum += 1; // Advance bank number
 343              		.loc 1 187 0
 344 0054 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 345 0058 0133     		adds	r3, r3, #1
 346 005a DBB2     		uxtb	r3, r3
 347 005c 84F82830 		strb	r3, [r4, #40]
 188:Ourwares/canfilter_setup.c **** 		if (p->banknum >= 28) return HAL_ERROR; // Oops check
 348              		.loc 1 188 0
 349 0060 1B2B     		cmp	r3, #27
 350 0062 07D9     		bls	.L37
 351 0064 1AE0     		b	.L42
 352              	.LVL32:
 353              	.L36:
 189:Ourwares/canfilter_setup.c **** 	}
 190:Ourwares/canfilter_setup.c **** 	else
 191:Ourwares/canfilter_setup.c **** 	{ // Here, next position is in the first/even of pair. */
 192:Ourwares/canfilter_setup.c **** 		/* Setup 2nd position of pair with ID */
 193:Ourwares/canfilter_setup.c **** 		p->filt.FilterMaskIdHigh = (id >> 16) & 0xffff;
 354              		.loc 1 193 0
 355 0066 330C     		lsrs	r3, r6, #16
 356 0068 A360     		str	r3, [r4, #8]
 194:Ourwares/canfilter_setup.c **** 		p->filt.FilterMaskIdLow  = (id >>  0) & 0xffff;
 357              		.loc 1 194 0
 358 006a B6B2     		uxth	r6, r6
 359              	.LVL33:
 360 006c E660     		str	r6, [r4, #12]
 195:Ourwares/canfilter_setup.c **** 		p->odd = 1;
 361              		.loc 1 195 0
 362 006e 0123     		movs	r3, #1
 363 0070 84F82930 		strb	r3, [r4, #41]
 364              	.L37:
 196:Ourwares/canfilter_setup.c **** 	}
 197:Ourwares/canfilter_setup.c **** 	p->filt.FilterFIFOAssignment = fifo & 0x1;
 365              		.loc 1 197 0
 366 0074 07F00107 		and	r7, r7, #1
 367 0078 2761     		str	r7, [r4, #16]
 198:Ourwares/canfilter_setup.c **** 	p->filt.FilterMode           = CAN_FILTERMODE_IDLIST;
 368              		.loc 1 198 0
 369 007a 0123     		movs	r3, #1
 370 007c A361     		str	r3, [r4, #24]
 199:Ourwares/canfilter_setup.c **** 	ret = HAL_CAN_ConfigFilter(phcan, &p->filt); // Store in hardware
ARM GAS  /tmp/cc8STPUm.s 			page 11


 371              		.loc 1 199 0
 372 007e 2146     		mov	r1, r4
 373 0080 4046     		mov	r0, r8
 374 0082 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 375              	.LVL34:
 200:Ourwares/canfilter_setup.c **** 
 201:Ourwares/canfilter_setup.c **** 	return ret;
 376              		.loc 1 201 0
 377 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 378              	.LVL35:
 379              	.L43:
 162:Ourwares/canfilter_setup.c **** 	}
 380              		.loc 1 162 0
 381 008a 0120     		movs	r0, #1
 382              	.LVL36:
 383 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 384              	.LVL37:
 385              	.L40:
 169:Ourwares/canfilter_setup.c **** 	}
 386              		.loc 1 169 0
 387 0090 0120     		movs	r0, #1
 388              	.LVL38:
 389 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 390              	.LVL39:
 391              	.L41:
 175:Ourwares/canfilter_setup.c **** 	}
 392              		.loc 1 175 0
 393 0096 0120     		movs	r0, #1
 394 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 395              	.LVL40:
 396              	.L42:
 188:Ourwares/canfilter_setup.c **** 	}
 397              		.loc 1 188 0
 398 009c 0120     		movs	r0, #1
 202:Ourwares/canfilter_setup.c **** }
 399              		.loc 1 202 0
 400 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 401              	.LVL41:
 402              	.L46:
 403 00a2 00BF     		.align	2
 404              	.L45:
 405 00a4 00000000 		.word	.LANCHOR0
 406 00a8 00000000 		.word	.LANCHOR2
 407 00ac 00000000 		.word	.LANCHOR1
 408              		.cfi_endproc
 409              	.LFE131:
 411              		.section	.bss.canfilt1,"aw",%nobits
 412              		.align	2
 413              		.set	.LANCHOR0,. + 0
 416              	canfilt1:
 417 0000 00000000 		.space	44
 417      00000000 
 417      00000000 
 417      00000000 
 417      00000000 
 418              		.section	.bss.canfilt2,"aw",%nobits
 419              		.align	2
ARM GAS  /tmp/cc8STPUm.s 			page 12


 420              		.set	.LANCHOR1,. + 0
 423              	canfilt2:
 424 0000 00000000 		.space	44
 424      00000000 
 424      00000000 
 424      00000000 
 424      00000000 
 425              		.section	.bss.canfilt3,"aw",%nobits
 426              		.align	2
 427              		.set	.LANCHOR2,. + 0
 430              	canfilt3:
 431 0000 00000000 		.space	44
 431      00000000 
 431      00000000 
 431      00000000 
 431      00000000 
 432              		.text
 433              	.Letext0:
 434              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 435              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 436              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 437              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 438              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 439              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 440              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cc8STPUm.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 canfilter_setup.c
     /tmp/cc8STPUm.s:22     .text.canfilter_setup_first:00000000 $t
     /tmp/cc8STPUm.s:27     .text.canfilter_setup_first:00000000 canfilter_setup_first
     /tmp/cc8STPUm.s:119    .text.canfilter_setup_first:00000054 $d
     /tmp/cc8STPUm.s:126    .text.canfilter_setup_add32b_mskmode:00000000 $t
     /tmp/cc8STPUm.s:131    .text.canfilter_setup_add32b_mskmode:00000000 canfilter_setup_add32b_mskmode
     /tmp/cc8STPUm.s:254    .text.canfilter_setup_add32b_mskmode:00000098 $d
     /tmp/cc8STPUm.s:261    .text.canfilter_setup_add32b_id:00000000 $t
     /tmp/cc8STPUm.s:266    .text.canfilter_setup_add32b_id:00000000 canfilter_setup_add32b_id
     /tmp/cc8STPUm.s:405    .text.canfilter_setup_add32b_id:000000a4 $d
     /tmp/cc8STPUm.s:412    .bss.canfilt1:00000000 $d
     /tmp/cc8STPUm.s:416    .bss.canfilt1:00000000 canfilt1
     /tmp/cc8STPUm.s:419    .bss.canfilt2:00000000 $d
     /tmp/cc8STPUm.s:423    .bss.canfilt2:00000000 canfilt2
     /tmp/cc8STPUm.s:426    .bss.canfilt3:00000000 $d
     /tmp/cc8STPUm.s:430    .bss.canfilt3:00000000 canfilt3
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter

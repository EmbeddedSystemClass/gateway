ARM GAS  /tmp/ccz6of6N.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"timers.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	prvGetNextExpireTime:
  27              	.LFB17:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    is the industry's de facto standard.                               *
ARM GAS  /tmp/ccz6of6N.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
ARM GAS  /tmp/ccz6of6N.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
ARM GAS  /tmp/ccz6of6N.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static variables must be declared volatile. */
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_INITIALIZED_DATA static QueueHandle_t xTimerQueue = NULL;
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_INITIALIZED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint +e956 */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvCheckForValidListAndQueue( void );
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvTimerTask( void *pvParameters );
ARM GAS  /tmp/ccz6of6N.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvProcessReceivedCommands( void );
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const Ti
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const Tic
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvSwitchTimerLists( void );
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty );
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseT
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_FUNCTION static void prvInitialiseNewTimer(	const char * const pcTimerName,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ); /*lint !e971 Unqualified char types are allowed for strings and sin
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccz6of6N.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													"Tmr Svc",
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									"Tmr Svc",
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
ARM GAS  /tmp/ccz6of6N.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction ) /*lint !e971 Unqualified char types are allowe
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer ) /*lint !e971 Unqualified char types are allowed for string
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structures. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccz6of6N.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) /*lint !e971 Unqualified char types are allowed for strings and sing
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
ARM GAS  /tmp/ccz6of6N.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
ARM GAS  /tmp/ccz6of6N.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
ARM GAS  /tmp/ccz6of6N.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
ARM GAS  /tmp/ccz6of6N.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  29              		.loc 1 635 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  35              		.loc 1 645 0
  36 0000 064B     		ldr	r3, .L4
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 1368     		ldr	r3, [r2]
  39 0006 B3FA83F3 		clz	r3, r3
  40 000a 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/ccz6of6N.s 			page 13


  41 000c 0360     		str	r3, [r0]
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  42              		.loc 1 646 0
  43 000e 13B9     		cbnz	r3, .L3
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  44              		.loc 1 648 0
  45 0010 D368     		ldr	r3, [r2, #12]
  46 0012 1868     		ldr	r0, [r3]
  47              	.LVL1:
  48 0014 7047     		bx	lr
  49              	.LVL2:
  50              	.L3:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  51              		.loc 1 653 0
  52 0016 0020     		movs	r0, #0
  53              	.LVL3:
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  54              		.loc 1 657 0
  55 0018 7047     		bx	lr
  56              	.L5:
  57 001a 00BF     		.align	2
  58              	.L4:
  59 001c 00000000 		.word	.LANCHOR0
  60              		.cfi_endproc
  61              	.LFE17:
  63              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  68              	prvInsertTimerInActiveList:
  69              	.LFB19:
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_INITIALIZED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable 
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
ARM GAS  /tmp/ccz6of6N.s 			page 14


 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70              		.loc 1 684 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL4:
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  80              	.LVL5:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  81              		.loc 1 687 0
  82 0002 4160     		str	r1, [r0, #4]
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  83              		.loc 1 688 0
  84 0004 0061     		str	r0, [r0, #16]
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  85              		.loc 1 690 0
  86 0006 9142     		cmp	r1, r2
  87 0008 0AD8     		bhi	.L7
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  88              		.loc 1 694 0
  89 000a D21A     		subs	r2, r2, r3
  90              	.LVL6:
  91 000c 8369     		ldr	r3, [r0, #24]
  92              	.LVL7:
  93 000e 9A42     		cmp	r2, r3
  94 0010 11D2     		bcs	.L10
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  95              		.loc 1 702 0
  96 0012 011D     		adds	r1, r0, #4
  97              	.LVL8:
  98 0014 0A4B     		ldr	r3, .L13
  99 0016 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccz6of6N.s 			page 15


 100              	.LVL9:
 101 0018 FFF7FEFF 		bl	vListInsert
 102              	.LVL10:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 103              		.loc 1 685 0
 104 001c 0020     		movs	r0, #0
 105 001e 08BD     		pop	{r3, pc}
 106              	.LVL11:
 107              	.L7:
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 108              		.loc 1 707 0
 109 0020 9A42     		cmp	r2, r3
 110 0022 01D2     		bcs	.L9
 111              		.loc 1 707 0 is_stmt 0 discriminator 1
 112 0024 9942     		cmp	r1, r3
 113 0026 08D2     		bcs	.L11
 114              	.L9:
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 115              		.loc 1 716 0 is_stmt 1
 116 0028 011D     		adds	r1, r0, #4
 117              	.LVL12:
 118 002a 064B     		ldr	r3, .L13+4
 119              	.LVL13:
 120 002c 1868     		ldr	r0, [r3]
 121              	.LVL14:
 122 002e FFF7FEFF 		bl	vListInsert
 123              	.LVL15:
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 124              		.loc 1 685 0
 125 0032 0020     		movs	r0, #0
 126 0034 08BD     		pop	{r3, pc}
 127              	.LVL16:
 128              	.L10:
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 129              		.loc 1 698 0
 130 0036 0120     		movs	r0, #1
 131              	.LVL17:
 132 0038 08BD     		pop	{r3, pc}
 133              	.LVL18:
 134              	.L11:
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 135              		.loc 1 712 0
 136 003a 0120     		movs	r0, #1
 137              	.LVL19:
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/ccz6of6N.s 			page 16


 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 138              		.loc 1 721 0
 139 003c 08BD     		pop	{r3, pc}
 140              	.LVL20:
 141              	.L14:
 142 003e 00BF     		.align	2
 143              	.L13:
 144 0040 00000000 		.word	.LANCHOR1
 145 0044 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE19:
 149              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 150              		.align	2
 151              		.thumb
 152              		.thumb_func
 154              	prvCheckForValidListAndQueue:
 155              	.LFB22:
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/ccz6of6N.s 			page 17


 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
ARM GAS  /tmp/ccz6of6N.s 			page 18


 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
ARM GAS  /tmp/ccz6of6N.s 			page 19


 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccz6of6N.s 			page 20


 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 156              		.loc 1 931 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 30B5     		push	{r4, r5, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 24
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 169              		.loc 1 935 0
 170 0004 FFF7FEFF 		bl	vPortEnterCritical
 171              	.LVL21:
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 172              		.loc 1 937 0
 173 0008 104B     		ldr	r3, .L18
 174 000a 1B68     		ldr	r3, [r3]
 175 000c CBB9     		cbnz	r3, .L16
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 176              		.loc 1 939 0
 177 000e 104D     		ldr	r5, .L18+4
 178 0010 2846     		mov	r0, r5
 179 0012 FFF7FEFF 		bl	vListInitialise
 180              	.LVL22:
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 181              		.loc 1 940 0
 182 0016 0F4C     		ldr	r4, .L18+8
 183 0018 2046     		mov	r0, r4
 184 001a FFF7FEFF 		bl	vListInitialise
 185              	.LVL23:
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 186              		.loc 1 941 0
 187 001e 0E4B     		ldr	r3, .L18+12
 188 0020 1D60     		str	r5, [r3]
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 189              		.loc 1 942 0
 190 0022 0E4B     		ldr	r3, .L18+16
 191 0024 1C60     		str	r4, [r3]
 192              	.LBB36:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_
ARM GAS  /tmp/ccz6of6N.s 			page 21


 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskM
 193              		.loc 1 951 0
 194 0026 0023     		movs	r3, #0
 195 0028 0093     		str	r3, [sp]
 196 002a 0D4B     		ldr	r3, .L18+20
 197 002c 0D4A     		ldr	r2, .L18+24
 198 002e 0C21     		movs	r1, #12
 199 0030 0A20     		movs	r0, #10
 200 0032 FFF7FEFF 		bl	xQueueGenericCreateStatic
 201              	.LVL24:
 202 0036 054B     		ldr	r3, .L18
 203 0038 1860     		str	r0, [r3]
 204              	.LBE36:
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 205              		.loc 1 961 0
 206 003a 10B1     		cbz	r0, .L16
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 207              		.loc 1 963 0
 208 003c 0A49     		ldr	r1, .L18+28
 209 003e FFF7FEFF 		bl	vQueueAddToRegistry
 210              	.LVL25:
 211              	.L16:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 212              		.loc 1 977 0
 213 0042 FFF7FEFF 		bl	vPortExitCritical
 214              	.LVL26:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 215              		.loc 1 978 0
 216 0046 03B0     		add	sp, sp, #12
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 12
 219              		@ sp needed
 220 0048 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccz6of6N.s 			page 22


 221              	.L19:
 222 004a 00BF     		.align	2
 223              	.L18:
 224 004c 00000000 		.word	.LANCHOR2
 225 0050 00000000 		.word	.LANCHOR3
 226 0054 00000000 		.word	.LANCHOR4
 227 0058 00000000 		.word	.LANCHOR0
 228 005c 00000000 		.word	.LANCHOR1
 229 0060 00000000 		.word	.LANCHOR5
 230 0064 00000000 		.word	.LANCHOR6
 231 0068 00000000 		.word	.LC0
 232              		.cfi_endproc
 233              	.LFE22:
 235              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 236              		.align	2
 237              		.thumb
 238              		.thumb_func
 240              	prvInitialiseNewTimer:
 241              	.LFB8:
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 242              		.loc 1 394 0
 243              		.cfi_startproc
 244              		@ args = 8, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL27:
 247 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 248              	.LCFI4:
 249              		.cfi_def_cfa_offset 24
 250              		.cfi_offset 4, -24
 251              		.cfi_offset 5, -20
 252              		.cfi_offset 6, -16
 253              		.cfi_offset 7, -12
 254              		.cfi_offset 8, -8
 255              		.cfi_offset 14, -4
 256 0004 079C     		ldr	r4, [sp, #28]
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 257              		.loc 1 396 0
 258 0006 41B9     		cbnz	r1, .L21
 259              	.LBB37:
 260              	.LBB38:
 261              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
ARM GAS  /tmp/ccz6of6N.s 			page 23


  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccz6of6N.s 			page 24


  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
ARM GAS  /tmp/ccz6of6N.s 			page 25


 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/ccz6of6N.s 			page 26


 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 262              		.loc 2 237 0
 263              		.syntax unified
 264              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 265 0008 4FF05003 			mov r3, #80												
 266 000c 83F31188 		msr basepri, r3											
 267 0010 BFF36F8F 		isb														
 268 0014 BFF34F8F 		dsb														
ARM GAS  /tmp/ccz6of6N.s 			page 27


 269              	
 270              	@ 0 "" 2
 271              	.LVL28:
 272              		.thumb
 273              		.syntax unified
 274              	.L22:
 275 0018 FEE7     		b	.L22
 276              	.LVL29:
 277              	.L21:
 278 001a 0F46     		mov	r7, r1
 279              	.LBE38:
 280              	.LBE37:
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 281              		.loc 1 398 0
 282 001c 74B1     		cbz	r4, .L20
 283 001e 1D46     		mov	r5, r3
 284 0020 1646     		mov	r6, r2
 285 0022 8046     		mov	r8, r0
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286              		.loc 1 402 0
 287 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 288              	.LVL30:
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 289              		.loc 1 406 0
 290 0028 C4F80080 		str	r8, [r4]
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 291              		.loc 1 407 0
 292 002c A761     		str	r7, [r4, #24]
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 293              		.loc 1 408 0
 294 002e E661     		str	r6, [r4, #28]
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 295              		.loc 1 409 0
 296 0030 2562     		str	r5, [r4, #32]
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 297              		.loc 1 410 0
 298 0032 069B     		ldr	r3, [sp, #24]
 299 0034 6362     		str	r3, [r4, #36]
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 300              		.loc 1 411 0
 301 0036 201D     		adds	r0, r4, #4
 302 0038 FFF7FEFF 		bl	vListInitialiseItem
 303              	.LVL31:
 304              	.L20:
 305 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 306              		.cfi_endproc
 307              	.LFE8:
 309              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 310              		.align	2
 311              		.global	xTimerCreateTimerTask
 312              		.thumb
 313              		.thumb_func
 315              	xTimerCreateTimerTask:
 316              	.LFB5:
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 317              		.loc 1 260 0
 318              		.cfi_startproc
ARM GAS  /tmp/ccz6of6N.s 			page 28


 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326 0002 88B0     		sub	sp, sp, #32
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 40
 329              	.LVL32:
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 330              		.loc 1 267 0
 331 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 332              	.LVL33:
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 333              		.loc 1 269 0
 334 0008 154B     		ldr	r3, .L33
 335 000a 1B68     		ldr	r3, [r3]
 336 000c D3B1     		cbz	r3, .L30
 337              	.LBB39:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 338              		.loc 1 273 0
 339 000e 0024     		movs	r4, #0
 340 0010 0594     		str	r4, [sp, #20]
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 341              		.loc 1 274 0
 342 0012 0694     		str	r4, [sp, #24]
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 343              		.loc 1 277 0
 344 0014 07AA     		add	r2, sp, #28
 345 0016 06A9     		add	r1, sp, #24
 346 0018 05A8     		add	r0, sp, #20
 347 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 348              	.LVL34:
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													"Tmr Svc",
 349              		.loc 1 278 0
 350 001e 059B     		ldr	r3, [sp, #20]
 351 0020 0293     		str	r3, [sp, #8]
 352 0022 069B     		ldr	r3, [sp, #24]
 353 0024 0193     		str	r3, [sp, #4]
 354 0026 0223     		movs	r3, #2
 355 0028 0093     		str	r3, [sp]
 356 002a 2346     		mov	r3, r4
 357 002c 079A     		ldr	r2, [sp, #28]
 358 002e 0D49     		ldr	r1, .L33+4
 359 0030 0D48     		ldr	r0, .L33+8
 360 0032 FFF7FEFF 		bl	xTaskCreateStatic
 361              	.LVL35:
 362 0036 0D4B     		ldr	r3, .L33+12
 363 0038 1860     		str	r0, [r3]
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 364              		.loc 1 286 0
 365 003a 08B9     		cbnz	r0, .L31
 366              	.LBE39:
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 367              		.loc 1 261 0
ARM GAS  /tmp/ccz6of6N.s 			page 29


 368 003c 2046     		mov	r0, r4
 369 003e 02E0     		b	.L26
 370              	.L31:
 371              	.LBB40:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 372              		.loc 1 288 0
 373 0040 0120     		movs	r0, #1
 374              	.LVL36:
 375 0042 00E0     		b	.L26
 376              	.LVL37:
 377              	.L30:
 378              	.LBE40:
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 379              		.loc 1 261 0
 380 0044 0020     		movs	r0, #0
 381              	.LVL38:
 382              	.L26:
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 383              		.loc 1 307 0
 384 0046 40B9     		cbnz	r0, .L28
 385              	.LBB41:
 386              	.LBB42:
 387              		.loc 2 237 0
 388              		.syntax unified
 389              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 390 0048 4FF05003 			mov r3, #80												
 391 004c 83F31188 		msr basepri, r3											
 392 0050 BFF36F8F 		isb														
 393 0054 BFF34F8F 		dsb														
 394              	
 395              	@ 0 "" 2
 396              	.LVL39:
 397              		.thumb
 398              		.syntax unified
 399              	.L29:
 400 0058 FEE7     		b	.L29
 401              	.L28:
 402              	.LBE42:
 403              	.LBE41:
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 404              		.loc 1 309 0
 405 005a 08B0     		add	sp, sp, #32
 406              	.LCFI7:
 407              		.cfi_def_cfa_offset 8
 408              		@ sp needed
 409 005c 10BD     		pop	{r4, pc}
 410              	.L34:
 411 005e 00BF     		.align	2
 412              	.L33:
 413 0060 00000000 		.word	.LANCHOR2
 414 0064 08000000 		.word	.LC1
 415 0068 00000000 		.word	prvTimerTask
 416 006c 00000000 		.word	.LANCHOR7
 417              		.cfi_endproc
 418              	.LFE5:
 420              		.section	.text.xTimerCreate,"ax",%progbits
 421              		.align	2
ARM GAS  /tmp/ccz6of6N.s 			page 30


 422              		.global	xTimerCreate
 423              		.thumb
 424              		.thumb_func
 426              	xTimerCreate:
 427              	.LFB6:
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 428              		.loc 1 319 0
 429              		.cfi_startproc
 430              		@ args = 4, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL40:
 433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 434              	.LCFI8:
 435              		.cfi_def_cfa_offset 24
 436              		.cfi_offset 4, -24
 437              		.cfi_offset 5, -20
 438              		.cfi_offset 6, -16
 439              		.cfi_offset 7, -12
 440              		.cfi_offset 8, -8
 441              		.cfi_offset 14, -4
 442 0004 82B0     		sub	sp, sp, #8
 443              	.LCFI9:
 444              		.cfi_def_cfa_offset 32
 445 0006 0546     		mov	r5, r0
 446 0008 0E46     		mov	r6, r1
 447 000a 1746     		mov	r7, r2
 448 000c 9846     		mov	r8, r3
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 449              		.loc 1 322 0
 450 000e 2C20     		movs	r0, #44
 451              	.LVL41:
 452 0010 FFF7FEFF 		bl	pvPortMalloc
 453              	.LVL42:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 454              		.loc 1 324 0
 455 0014 0446     		mov	r4, r0
 456 0016 58B1     		cbz	r0, .L36
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457              		.loc 1 326 0
 458 0018 0190     		str	r0, [sp, #4]
 459 001a 089B     		ldr	r3, [sp, #32]
 460 001c 0093     		str	r3, [sp]
 461 001e 4346     		mov	r3, r8
 462 0020 3A46     		mov	r2, r7
 463 0022 3146     		mov	r1, r6
 464 0024 2846     		mov	r0, r5
 465              	.LVL43:
 466 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 467              	.LVL44:
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 468              		.loc 1 333 0
 469 002a 0023     		movs	r3, #0
 470 002c 84F82830 		strb	r3, [r4, #40]
 471              	.L36:
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472              		.loc 1 339 0
 473 0030 2046     		mov	r0, r4
ARM GAS  /tmp/ccz6of6N.s 			page 31


 474 0032 02B0     		add	sp, sp, #8
 475              	.LCFI10:
 476              		.cfi_def_cfa_offset 24
 477              		@ sp needed
 478 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 479              		.cfi_endproc
 480              	.LFE6:
 482              		.section	.text.xTimerCreateStatic,"ax",%progbits
 483              		.align	2
 484              		.global	xTimerCreateStatic
 485              		.thumb
 486              		.thumb_func
 488              	xTimerCreateStatic:
 489              	.LFB7:
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 490              		.loc 1 352 0
 491              		.cfi_startproc
 492              		@ args = 8, pretend = 0, frame = 8
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL45:
 495 0000 30B5     		push	{r4, r5, lr}
 496              	.LCFI11:
 497              		.cfi_def_cfa_offset 12
 498              		.cfi_offset 4, -12
 499              		.cfi_offset 5, -8
 500              		.cfi_offset 14, -4
 501 0002 85B0     		sub	sp, sp, #20
 502              	.LCFI12:
 503              		.cfi_def_cfa_offset 32
 504 0004 099C     		ldr	r4, [sp, #36]
 505              	.LBB43:
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 506              		.loc 1 360 0
 507 0006 2C25     		movs	r5, #44
 508 0008 0395     		str	r5, [sp, #12]
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 509              		.loc 1 361 0
 510 000a 039D     		ldr	r5, [sp, #12]
 511 000c 2C2D     		cmp	r5, #44
 512 000e 08D0     		beq	.L39
 513              	.LBB44:
 514              	.LBB45:
 515              		.loc 2 237 0
 516              		.syntax unified
 517              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 518 0010 4FF05003 			mov r3, #80												
 519 0014 83F31188 		msr basepri, r3											
 520 0018 BFF36F8F 		isb														
 521 001c BFF34F8F 		dsb														
 522              	
 523              	@ 0 "" 2
 524              	.LVL46:
 525              		.thumb
 526              		.syntax unified
 527              	.L40:
 528 0020 FEE7     		b	.L40
 529              	.LVL47:
ARM GAS  /tmp/ccz6of6N.s 			page 32


 530              	.L39:
 531              	.LBE45:
 532              	.LBE44:
 533              	.LBE43:
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 534              		.loc 1 366 0
 535 0022 44B9     		cbnz	r4, .L41
 536              	.LBB46:
 537              	.LBB47:
 538              		.loc 2 237 0
 539              		.syntax unified
 540              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 541 0024 4FF05003 			mov r3, #80												
 542 0028 83F31188 		msr basepri, r3											
 543 002c BFF36F8F 		isb														
 544 0030 BFF34F8F 		dsb														
 545              	
 546              	@ 0 "" 2
 547              	.LVL48:
 548              		.thumb
 549              		.syntax unified
 550              	.L42:
 551 0034 FEE7     		b	.L42
 552              	.LVL49:
 553              	.L41:
 554              	.LBE47:
 555              	.LBE46:
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 556              		.loc 1 369 0
 557 0036 3CB1     		cbz	r4, .L43
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 558              		.loc 1 371 0
 559 0038 0194     		str	r4, [sp, #4]
 560 003a 089D     		ldr	r5, [sp, #32]
 561 003c 0095     		str	r5, [sp]
 562 003e FFF7FEFF 		bl	prvInitialiseNewTimer
 563              	.LVL50:
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 564              		.loc 1 377 0
 565 0042 0123     		movs	r3, #1
 566 0044 84F82830 		strb	r3, [r4, #40]
 567              	.L43:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568              		.loc 1 383 0
 569 0048 2046     		mov	r0, r4
 570 004a 05B0     		add	sp, sp, #20
 571              	.LCFI13:
 572              		.cfi_def_cfa_offset 12
 573              		@ sp needed
 574 004c 30BD     		pop	{r4, r5, pc}
 575              		.cfi_endproc
 576              	.LFE7:
 578 004e 00BF     		.section	.text.xTimerGenericCommand,"ax",%progbits
 579              		.align	2
 580              		.global	xTimerGenericCommand
 581              		.thumb
 582              		.thumb_func
ARM GAS  /tmp/ccz6of6N.s 			page 33


 584              	xTimerGenericCommand:
 585              	.LFB9:
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 586              		.loc 1 418 0
 587              		.cfi_startproc
 588              		@ args = 4, pretend = 0, frame = 16
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL51:
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 591              		.loc 1 422 0
 592 0000 40B9     		cbnz	r0, .L46
 593              	.LBB48:
 594              	.LBB49:
 595              		.loc 2 237 0
 596              		.syntax unified
 597              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 598 0002 4FF05003 			mov r3, #80												
 599 0006 83F31188 		msr basepri, r3											
 600 000a BFF36F8F 		isb														
 601 000e BFF34F8F 		dsb														
 602              	
 603              	@ 0 "" 2
 604              	.LVL52:
 605              		.thumb
 606              		.syntax unified
 607              	.L47:
 608 0012 FEE7     		b	.L47
 609              	.LVL53:
 610              	.L46:
 611              	.LBE49:
 612              	.LBE48:
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 613              		.loc 1 418 0
 614 0014 30B5     		push	{r4, r5, lr}
 615              	.LCFI14:
 616              		.cfi_def_cfa_offset 12
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0016 85B0     		sub	sp, sp, #20
 621              	.LCFI15:
 622              		.cfi_def_cfa_offset 32
 623 0018 1546     		mov	r5, r2
 624 001a 0446     		mov	r4, r0
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 625              		.loc 1 426 0
 626 001c 124A     		ldr	r2, .L53
 627              	.LVL54:
 628 001e 1068     		ldr	r0, [r2]
 629              	.LVL55:
 630 0020 F0B1     		cbz	r0, .L51
 631 0022 1A46     		mov	r2, r3
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 632              		.loc 1 429 0
 633 0024 0191     		str	r1, [sp, #4]
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 634              		.loc 1 430 0
ARM GAS  /tmp/ccz6of6N.s 			page 34


 635 0026 0295     		str	r5, [sp, #8]
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 636              		.loc 1 431 0
 637 0028 0394     		str	r4, [sp, #12]
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 638              		.loc 1 433 0
 639 002a 0529     		cmp	r1, #5
 640 002c 13DC     		bgt	.L49
 641              	.LVL56:
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 642              		.loc 1 435 0
 643 002e FFF7FEFF 		bl	xTaskGetSchedulerState
 644              	.LVL57:
 645 0032 0228     		cmp	r0, #2
 646 0034 07D1     		bne	.L50
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 647              		.loc 1 437 0
 648 0036 0023     		movs	r3, #0
 649 0038 089A     		ldr	r2, [sp, #32]
 650 003a 01A9     		add	r1, sp, #4
 651 003c 0A48     		ldr	r0, .L53
 652 003e 0068     		ldr	r0, [r0]
 653 0040 FFF7FEFF 		bl	xQueueGenericSend
 654              	.LVL58:
 655 0044 0DE0     		b	.L48
 656              	.LVL59:
 657              	.L50:
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 658              		.loc 1 441 0
 659 0046 0023     		movs	r3, #0
 660 0048 1A46     		mov	r2, r3
 661 004a 01A9     		add	r1, sp, #4
 662 004c 0648     		ldr	r0, .L53
 663 004e 0068     		ldr	r0, [r0]
 664 0050 FFF7FEFF 		bl	xQueueGenericSend
 665              	.LVL60:
 666 0054 05E0     		b	.L48
 667              	.LVL61:
 668              	.L49:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 669              		.loc 1 446 0
 670 0056 0023     		movs	r3, #0
 671 0058 01A9     		add	r1, sp, #4
 672              	.LVL62:
 673 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 674              	.LVL63:
 675 005e 00E0     		b	.L48
 676              	.LVL64:
 677              	.L51:
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 678              		.loc 1 419 0
 679 0060 0020     		movs	r0, #0
 680              	.LVL65:
 681              	.L48:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 682              		.loc 1 457 0
 683 0062 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccz6of6N.s 			page 35


 684              	.LCFI16:
 685              		.cfi_def_cfa_offset 12
 686              		@ sp needed
 687 0064 30BD     		pop	{r4, r5, pc}
 688              	.LVL66:
 689              	.L54:
 690 0066 00BF     		.align	2
 691              	.L53:
 692 0068 00000000 		.word	.LANCHOR2
 693              		.cfi_endproc
 694              	.LFE9:
 696              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 697              		.align	2
 698              		.thumb
 699              		.thumb_func
 701              	prvSwitchTimerLists:
 702              	.LFB21:
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 703              		.loc 1 872 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707 0000 70B5     		push	{r4, r5, r6, lr}
 708              	.LCFI17:
 709              		.cfi_def_cfa_offset 16
 710              		.cfi_offset 4, -16
 711              		.cfi_offset 5, -12
 712              		.cfi_offset 6, -8
 713              		.cfi_offset 14, -4
 714 0002 82B0     		sub	sp, sp, #8
 715              	.LCFI18:
 716              		.cfi_def_cfa_offset 24
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 717              		.loc 1 882 0
 718 0004 29E0     		b	.L57
 719              	.L61:
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 720              		.loc 1 884 0
 721 0006 DB68     		ldr	r3, [r3, #12]
 722 0008 1E68     		ldr	r6, [r3]
 723              	.LVL67:
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 724              		.loc 1 887 0
 725 000a DC68     		ldr	r4, [r3, #12]
 726              	.LVL68:
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 727              		.loc 1 888 0
 728 000c 251D     		adds	r5, r4, #4
 729 000e 2846     		mov	r0, r5
 730 0010 FFF7FEFF 		bl	uxListRemove
 731              	.LVL69:
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 732              		.loc 1 894 0
 733 0014 636A     		ldr	r3, [r4, #36]
 734 0016 2046     		mov	r0, r4
 735 0018 9847     		blx	r3
 736              	.LVL70:
ARM GAS  /tmp/ccz6of6N.s 			page 36


 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 737              		.loc 1 896 0
 738 001a E369     		ldr	r3, [r4, #28]
 739 001c 012B     		cmp	r3, #1
 740 001e 1CD1     		bne	.L57
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 741              		.loc 1 904 0
 742 0020 A369     		ldr	r3, [r4, #24]
 743 0022 3344     		add	r3, r3, r6
 744              	.LVL71:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 745              		.loc 1 905 0
 746 0024 9E42     		cmp	r6, r3
 747 0026 07D2     		bcs	.L58
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 748              		.loc 1 907 0
 749 0028 6360     		str	r3, [r4, #4]
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 750              		.loc 1 908 0
 751 002a 2461     		str	r4, [r4, #16]
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 752              		.loc 1 909 0
 753 002c 2946     		mov	r1, r5
 754 002e 114B     		ldr	r3, .L63
 755              	.LVL72:
 756 0030 1868     		ldr	r0, [r3]
 757 0032 FFF7FEFF 		bl	vListInsert
 758              	.LVL73:
 759 0036 10E0     		b	.L57
 760              	.LVL74:
 761              	.L58:
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 762              		.loc 1 913 0
 763 0038 0021     		movs	r1, #0
 764 003a 0091     		str	r1, [sp]
 765 003c 0B46     		mov	r3, r1
 766              	.LVL75:
 767 003e 3246     		mov	r2, r6
 768 0040 2046     		mov	r0, r4
 769 0042 FFF7FEFF 		bl	xTimerGenericCommand
 770              	.LVL76:
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 771              		.loc 1 914 0
 772 0046 40B9     		cbnz	r0, .L57
 773              	.LBB50:
 774              	.LBB51:
 775              		.loc 2 237 0
 776              		.syntax unified
 777              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 778 0048 4FF05003 			mov r3, #80												
 779 004c 83F31188 		msr basepri, r3											
 780 0050 BFF36F8F 		isb														
 781 0054 BFF34F8F 		dsb														
 782              	
 783              	@ 0 "" 2
 784              	.LVL77:
 785              		.thumb
ARM GAS  /tmp/ccz6of6N.s 			page 37


 786              		.syntax unified
 787              	.L60:
 788 0058 FEE7     		b	.L60
 789              	.LVL78:
 790              	.L57:
 791              	.LBE51:
 792              	.LBE50:
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 793              		.loc 1 882 0
 794 005a 064B     		ldr	r3, .L63
 795 005c 1B68     		ldr	r3, [r3]
 796 005e 1A68     		ldr	r2, [r3]
 797 0060 002A     		cmp	r2, #0
 798 0062 D0D1     		bne	.L61
 799              	.LVL79:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 800              		.loc 1 925 0
 801 0064 044A     		ldr	r2, .L63+4
 802 0066 1068     		ldr	r0, [r2]
 803 0068 0249     		ldr	r1, .L63
 804 006a 0860     		str	r0, [r1]
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 805              		.loc 1 926 0
 806 006c 1360     		str	r3, [r2]
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 807              		.loc 1 927 0
 808 006e 02B0     		add	sp, sp, #8
 809              	.LCFI19:
 810              		.cfi_def_cfa_offset 16
 811              		@ sp needed
 812 0070 70BD     		pop	{r4, r5, r6, pc}
 813              	.L64:
 814 0072 00BF     		.align	2
 815              	.L63:
 816 0074 00000000 		.word	.LANCHOR0
 817 0078 00000000 		.word	.LANCHOR1
 818              		.cfi_endproc
 819              	.LFE21:
 821              		.section	.text.prvSampleTimeNow,"ax",%progbits
 822              		.align	2
 823              		.thumb
 824              		.thumb_func
 826              	prvSampleTimeNow:
 827              	.LFB18:
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 828              		.loc 1 661 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL80:
 833 0000 38B5     		push	{r3, r4, r5, lr}
 834              	.LCFI20:
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 3, -16
 837              		.cfi_offset 4, -12
 838              		.cfi_offset 5, -8
 839              		.cfi_offset 14, -4
ARM GAS  /tmp/ccz6of6N.s 			page 38


 840 0002 0546     		mov	r5, r0
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 841              		.loc 1 665 0
 842 0004 FFF7FEFF 		bl	xTaskGetTickCount
 843              	.LVL81:
 844 0008 0446     		mov	r4, r0
 845              	.LVL82:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 846              		.loc 1 667 0
 847 000a 074B     		ldr	r3, .L69
 848 000c 1B68     		ldr	r3, [r3]
 849 000e 9842     		cmp	r0, r3
 850 0010 04D2     		bcs	.L66
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 851              		.loc 1 669 0
 852 0012 FFF7FEFF 		bl	prvSwitchTimerLists
 853              	.LVL83:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 854              		.loc 1 670 0
 855 0016 0123     		movs	r3, #1
 856 0018 2B60     		str	r3, [r5]
 857 001a 01E0     		b	.L67
 858              	.LVL84:
 859              	.L66:
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 860              		.loc 1 674 0
 861 001c 0023     		movs	r3, #0
 862 001e 2B60     		str	r3, [r5]
 863              	.LVL85:
 864              	.L67:
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 865              		.loc 1 677 0
 866 0020 014B     		ldr	r3, .L69
 867 0022 1C60     		str	r4, [r3]
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 868              		.loc 1 680 0
 869 0024 2046     		mov	r0, r4
 870 0026 38BD     		pop	{r3, r4, r5, pc}
 871              	.LVL86:
 872              	.L70:
 873              		.align	2
 874              	.L69:
 875 0028 00000000 		.word	.LANCHOR8
 876              		.cfi_endproc
 877              	.LFE18:
 879              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 880              		.align	2
 881              		.thumb
 882              		.thumb_func
 884              	prvProcessExpiredTimer:
 885              	.LFB14:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 886              		.loc 1 499 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL87:
ARM GAS  /tmp/ccz6of6N.s 			page 39


 891 0000 70B5     		push	{r4, r5, r6, lr}
 892              	.LCFI21:
 893              		.cfi_def_cfa_offset 16
 894              		.cfi_offset 4, -16
 895              		.cfi_offset 5, -12
 896              		.cfi_offset 6, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              	.LCFI22:
 900              		.cfi_def_cfa_offset 24
 901 0004 0546     		mov	r5, r0
 902 0006 0E46     		mov	r6, r1
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 903              		.loc 1 501 0
 904 0008 134B     		ldr	r3, .L75
 905 000a 1B68     		ldr	r3, [r3]
 906 000c DB68     		ldr	r3, [r3, #12]
 907 000e DC68     		ldr	r4, [r3, #12]
 908              	.LVL88:
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 909              		.loc 1 505 0
 910 0010 201D     		adds	r0, r4, #4
 911              	.LVL89:
 912 0012 FFF7FEFF 		bl	uxListRemove
 913              	.LVL90:
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 914              		.loc 1 510 0
 915 0016 E369     		ldr	r3, [r4, #28]
 916 0018 012B     		cmp	r3, #1
 917 001a 18D1     		bne	.L72
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 918              		.loc 1 515 0
 919 001c A169     		ldr	r1, [r4, #24]
 920 001e 2B46     		mov	r3, r5
 921 0020 3246     		mov	r2, r6
 922 0022 2944     		add	r1, r1, r5
 923 0024 2046     		mov	r0, r4
 924 0026 FFF7FEFF 		bl	prvInsertTimerInActiveList
 925              	.LVL91:
 926 002a 80B1     		cbz	r0, .L72
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 927              		.loc 1 519 0
 928 002c 0021     		movs	r1, #0
 929 002e 0091     		str	r1, [sp]
 930 0030 0B46     		mov	r3, r1
 931 0032 2A46     		mov	r2, r5
 932 0034 2046     		mov	r0, r4
 933 0036 FFF7FEFF 		bl	xTimerGenericCommand
 934              	.LVL92:
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 935              		.loc 1 520 0
 936 003a 40B9     		cbnz	r0, .L72
 937              	.LBB52:
 938              	.LBB53:
 939              		.loc 2 237 0
 940              		.syntax unified
 941              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccz6of6N.s 			page 40


 942 003c 4FF05003 			mov r3, #80												
 943 0040 83F31188 		msr basepri, r3											
 944 0044 BFF36F8F 		isb														
 945 0048 BFF34F8F 		dsb														
 946              	
 947              	@ 0 "" 2
 948              	.LVL93:
 949              		.thumb
 950              		.syntax unified
 951              	.L73:
 952 004c FEE7     		b	.L73
 953              	.LVL94:
 954              	.L72:
 955              	.LBE53:
 956              	.LBE52:
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 957              		.loc 1 534 0
 958 004e 636A     		ldr	r3, [r4, #36]
 959 0050 2046     		mov	r0, r4
 960 0052 9847     		blx	r3
 961              	.LVL95:
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 962              		.loc 1 535 0
 963 0054 02B0     		add	sp, sp, #8
 964              	.LCFI23:
 965              		.cfi_def_cfa_offset 16
 966              		@ sp needed
 967 0056 70BD     		pop	{r4, r5, r6, pc}
 968              	.LVL96:
 969              	.L76:
 970              		.align	2
 971              	.L75:
 972 0058 00000000 		.word	.LANCHOR0
 973              		.cfi_endproc
 974              	.LFE14:
 976              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 977              		.align	2
 978              		.thumb
 979              		.thumb_func
 981              	prvProcessTimerOrBlockTask:
 982              	.LFB16:
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 983              		.loc 1 575 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL97:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              	.LCFI24:
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 4, -16
 992              		.cfi_offset 5, -12
 993              		.cfi_offset 6, -8
 994              		.cfi_offset 14, -4
 995 0002 82B0     		sub	sp, sp, #8
 996              	.LCFI25:
 997              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccz6of6N.s 			page 41


 998 0004 0646     		mov	r6, r0
 999 0006 0C46     		mov	r4, r1
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1000              		.loc 1 579 0
 1001 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1002              	.LVL98:
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1003              		.loc 1 586 0
 1004 000c 01A8     		add	r0, sp, #4
 1005 000e FFF7FEFF 		bl	prvSampleTimeNow
 1006              	.LVL99:
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1007              		.loc 1 587 0
 1008 0012 019B     		ldr	r3, [sp, #4]
 1009 0014 1BBB     		cbnz	r3, .L78
 1010 0016 0546     		mov	r5, r0
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1011              		.loc 1 590 0
 1012 0018 44B9     		cbnz	r4, .L79
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1013              		.loc 1 590 0 is_stmt 0 discriminator 1
 1014 001a B042     		cmp	r0, r6
 1015 001c 06D3     		bcc	.L79
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1016              		.loc 1 592 0 is_stmt 1
 1017 001e FFF7FEFF 		bl	xTaskResumeAll
 1018              	.LVL100:
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1019              		.loc 1 593 0
 1020 0022 2946     		mov	r1, r5
 1021 0024 3046     		mov	r0, r6
 1022 0026 FFF7FEFF 		bl	prvProcessExpiredTimer
 1023              	.LVL101:
 1024 002a 1AE0     		b	.L77
 1025              	.LVL102:
 1026              	.L79:
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1027              		.loc 1 603 0
 1028 002c 2CB1     		cbz	r4, .L81
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1029              		.loc 1 607 0
 1030 002e 0E4B     		ldr	r3, .L83
 1031 0030 1B68     		ldr	r3, [r3]
 1032 0032 1C68     		ldr	r4, [r3]
 1033              	.LVL103:
 1034 0034 B4FA84F4 		clz	r4, r4
 1035 0038 6409     		lsrs	r4, r4, #5
 1036              	.LVL104:
 1037              	.L81:
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1038              		.loc 1 610 0
 1039 003a 2246     		mov	r2, r4
 1040 003c 711B     		subs	r1, r6, r5
 1041 003e 0B4B     		ldr	r3, .L83+4
 1042 0040 1868     		ldr	r0, [r3]
 1043              	.LVL105:
 1044 0042 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
ARM GAS  /tmp/ccz6of6N.s 			page 42


 1045              	.LVL106:
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1046              		.loc 1 612 0
 1047 0046 FFF7FEFF 		bl	xTaskResumeAll
 1048              	.LVL107:
 1049 004a 50B9     		cbnz	r0, .L77
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1050              		.loc 1 618 0
 1051 004c 4FF08052 		mov	r2, #268435456
 1052 0050 074B     		ldr	r3, .L83+8
 1053 0052 1A60     		str	r2, [r3]
 1054              		.syntax unified
 1055              	@ 618 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1056 0054 BFF34F8F 		dsb
 1057              	@ 0 "" 2
 1058              	@ 618 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1059 0058 BFF36F8F 		isb
 1060              	@ 0 "" 2
 1061              		.thumb
 1062              		.syntax unified
 1063 005c 01E0     		b	.L77
 1064              	.LVL108:
 1065              	.L78:
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1066              		.loc 1 628 0
 1067 005e FFF7FEFF 		bl	xTaskResumeAll
 1068              	.LVL109:
 1069              	.L77:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1070              		.loc 1 631 0
 1071 0062 02B0     		add	sp, sp, #8
 1072              	.LCFI26:
 1073              		.cfi_def_cfa_offset 16
 1074              		@ sp needed
 1075 0064 70BD     		pop	{r4, r5, r6, pc}
 1076              	.LVL110:
 1077              	.L84:
 1078 0066 00BF     		.align	2
 1079              	.L83:
 1080 0068 00000000 		.word	.LANCHOR1
 1081 006c 00000000 		.word	.LANCHOR2
 1082 0070 04ED00E0 		.word	-536810236
 1083              		.cfi_endproc
 1084              	.LFE16:
 1086              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1087              		.align	2
 1088              		.thumb
 1089              		.thumb_func
 1091              	prvProcessReceivedCommands:
 1092              	.LFB20:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1093              		.loc 1 725 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 16
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 30B5     		push	{r4, r5, lr}
 1098              	.LCFI27:
ARM GAS  /tmp/ccz6of6N.s 			page 43


 1099              		.cfi_def_cfa_offset 12
 1100              		.cfi_offset 4, -12
 1101              		.cfi_offset 5, -8
 1102              		.cfi_offset 14, -4
 1103 0002 87B0     		sub	sp, sp, #28
 1104              	.LCFI28:
 1105              		.cfi_def_cfa_offset 40
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1106              		.loc 1 731 0
 1107 0004 50E0     		b	.L87
 1108              	.L97:
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1109              		.loc 1 757 0
 1110 0006 039B     		ldr	r3, [sp, #12]
 1111 0008 002B     		cmp	r3, #0
 1112 000a 4DDB     		blt	.L87
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1113              		.loc 1 761 0
 1114 000c 059C     		ldr	r4, [sp, #20]
 1115              	.LVL111:
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1116              		.loc 1 763 0
 1117 000e 6369     		ldr	r3, [r4, #20]
 1118 0010 13B1     		cbz	r3, .L88
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1119              		.loc 1 766 0
 1120 0012 201D     		adds	r0, r4, #4
 1121 0014 FFF7FEFF 		bl	uxListRemove
 1122              	.LVL112:
 1123              	.L88:
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1124              		.loc 1 781 0
 1125 0018 02A8     		add	r0, sp, #8
 1126 001a FFF7FEFF 		bl	prvSampleTimeNow
 1127              	.LVL113:
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1128              		.loc 1 783 0
 1129 001e 039B     		ldr	r3, [sp, #12]
 1130 0020 092B     		cmp	r3, #9
 1131 0022 41D8     		bhi	.L87
 1132 0024 DFE803F0 		tbb	[pc, r3]
 1133              	.L91:
 1134 0028 05       		.byte	(.L90-.L91)/2
 1135 0029 05       		.byte	(.L90-.L91)/2
 1136 002a 05       		.byte	(.L90-.L91)/2
 1137 002b 40       		.byte	(.L87-.L91)/2
 1138 002c 27       		.byte	(.L92-.L91)/2
 1139 002d 3A       		.byte	(.L93-.L91)/2
 1140 002e 05       		.byte	(.L90-.L91)/2
 1141 002f 05       		.byte	(.L90-.L91)/2
 1142 0030 40       		.byte	(.L87-.L91)/2
 1143 0031 27       		.byte	(.L92-.L91)/2
 1144              		.p2align 1
 1145              	.L90:
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1146              		.loc 1 791 0
 1147 0032 0499     		ldr	r1, [sp, #16]
ARM GAS  /tmp/ccz6of6N.s 			page 44


 1148 0034 A569     		ldr	r5, [r4, #24]
 1149 0036 0B46     		mov	r3, r1
 1150 0038 0246     		mov	r2, r0
 1151 003a 2944     		add	r1, r1, r5
 1152 003c 2046     		mov	r0, r4
 1153              	.LVL114:
 1154 003e FFF7FEFF 		bl	prvInsertTimerInActiveList
 1155              	.LVL115:
 1156 0042 88B3     		cbz	r0, .L87
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1157              		.loc 1 795 0
 1158 0044 636A     		ldr	r3, [r4, #36]
 1159 0046 2046     		mov	r0, r4
 1160 0048 9847     		blx	r3
 1161              	.LVL116:
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1162              		.loc 1 798 0
 1163 004a E369     		ldr	r3, [r4, #28]
 1164 004c 012B     		cmp	r3, #1
 1165 004e 2BD1     		bne	.L87
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1166              		.loc 1 800 0
 1167 0050 A269     		ldr	r2, [r4, #24]
 1168 0052 0021     		movs	r1, #0
 1169 0054 0091     		str	r1, [sp]
 1170 0056 0B46     		mov	r3, r1
 1171 0058 0498     		ldr	r0, [sp, #16]
 1172 005a 0244     		add	r2, r2, r0
 1173 005c 2046     		mov	r0, r4
 1174 005e FFF7FEFF 		bl	xTimerGenericCommand
 1175              	.LVL117:
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1176              		.loc 1 801 0
 1177 0062 08BB     		cbnz	r0, .L87
 1178              	.LBB54:
 1179              	.LBB55:
 1180              		.loc 2 237 0
 1181              		.syntax unified
 1182              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1183 0064 4FF05003 			mov r3, #80												
 1184 0068 83F31188 		msr basepri, r3											
 1185 006c BFF36F8F 		isb														
 1186 0070 BFF34F8F 		dsb														
 1187              	
 1188              	@ 0 "" 2
 1189              	.LVL118:
 1190              		.thumb
 1191              		.syntax unified
 1192              	.L94:
 1193 0074 FEE7     		b	.L94
 1194              	.LVL119:
 1195              	.L92:
 1196              	.LBE55:
 1197              	.LBE54:
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1198              		.loc 1 823 0
 1199 0076 0499     		ldr	r1, [sp, #16]
ARM GAS  /tmp/ccz6of6N.s 			page 45


 1200 0078 A161     		str	r1, [r4, #24]
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1201              		.loc 1 824 0
 1202 007a 41B9     		cbnz	r1, .L95
 1203              	.LBB56:
 1204              	.LBB57:
 1205              		.loc 2 237 0
 1206              		.syntax unified
 1207              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1208 007c 4FF05003 			mov r3, #80												
 1209 0080 83F31188 		msr basepri, r3											
 1210 0084 BFF36F8F 		isb														
 1211 0088 BFF34F8F 		dsb														
 1212              	
 1213              	@ 0 "" 2
 1214              	.LVL120:
 1215              		.thumb
 1216              		.syntax unified
 1217              	.L96:
 1218 008c FEE7     		b	.L96
 1219              	.L95:
 1220              	.LBE57:
 1221              	.LBE56:
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1222              		.loc 1 832 0
 1223 008e 0346     		mov	r3, r0
 1224 0090 0246     		mov	r2, r0
 1225 0092 0144     		add	r1, r1, r0
 1226 0094 2046     		mov	r0, r4
 1227              	.LVL121:
 1228 0096 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1229              	.LVL122:
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1230              		.loc 1 833 0
 1231 009a 05E0     		b	.L87
 1232              	.LVL123:
 1233              	.L93:
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1234              		.loc 1 850 0
 1235 009c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1236 00a0 13B9     		cbnz	r3, .L87
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1237              		.loc 1 852 0
 1238 00a2 2046     		mov	r0, r4
 1239              	.LVL124:
 1240 00a4 FFF7FEFF 		bl	vPortFree
 1241              	.LVL125:
 1242              	.L87:
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1243              		.loc 1 731 0
 1244 00a8 0023     		movs	r3, #0
 1245 00aa 1A46     		mov	r2, r3
 1246 00ac 03A9     		add	r1, sp, #12
 1247 00ae 0448     		ldr	r0, .L99
 1248 00b0 0068     		ldr	r0, [r0]
 1249 00b2 FFF7FEFF 		bl	xQueueGenericReceive
 1250              	.LVL126:
ARM GAS  /tmp/ccz6of6N.s 			page 46


 1251 00b6 0028     		cmp	r0, #0
 1252 00b8 A5D1     		bne	.L97
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1253              		.loc 1 868 0
 1254 00ba 07B0     		add	sp, sp, #28
 1255              	.LCFI29:
 1256              		.cfi_def_cfa_offset 12
 1257              		@ sp needed
 1258 00bc 30BD     		pop	{r4, r5, pc}
 1259              	.L100:
 1260 00be 00BF     		.align	2
 1261              	.L99:
 1262 00c0 00000000 		.word	.LANCHOR2
 1263              		.cfi_endproc
 1264              	.LFE20:
 1266              		.section	.text.prvTimerTask,"ax",%progbits
 1267              		.align	2
 1268              		.thumb
 1269              		.thumb_func
 1271              	prvTimerTask:
 1272              	.LFB15:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1273              		.loc 1 539 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 8
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              	.LVL127:
 1278 0000 00B5     		push	{lr}
 1279              	.LCFI30:
 1280              		.cfi_def_cfa_offset 4
 1281              		.cfi_offset 14, -4
 1282 0002 83B0     		sub	sp, sp, #12
 1283              	.LCFI31:
 1284              		.cfi_def_cfa_offset 16
 1285              	.LVL128:
 1286              	.L102:
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1287              		.loc 1 562 0 discriminator 1
 1288 0004 01A8     		add	r0, sp, #4
 1289 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1290              	.LVL129:
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1291              		.loc 1 566 0 discriminator 1
 1292 000a 0199     		ldr	r1, [sp, #4]
 1293 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1294              	.LVL130:
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1295              		.loc 1 569 0 discriminator 1
 1296 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1297              	.LVL131:
 1298 0014 F6E7     		b	.L102
 1299              		.cfi_endproc
 1300              	.LFE15:
 1302 0016 00BF     		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1303              		.align	2
 1304              		.global	xTimerGetTimerDaemonTaskHandle
 1305              		.thumb
ARM GAS  /tmp/ccz6of6N.s 			page 47


 1306              		.thumb_func
 1308              	xTimerGetTimerDaemonTaskHandle:
 1309              	.LFB10:
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1310              		.loc 1 461 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1315              		.loc 1 464 0
 1316 0000 064B     		ldr	r3, .L107
 1317 0002 1868     		ldr	r0, [r3]
 1318 0004 40B9     		cbnz	r0, .L105
 1319              	.LBB58:
 1320              	.LBB59:
 1321              		.loc 2 237 0
 1322              		.syntax unified
 1323              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1324 0006 4FF05003 			mov r3, #80												
 1325 000a 83F31188 		msr basepri, r3											
 1326 000e BFF36F8F 		isb														
 1327 0012 BFF34F8F 		dsb														
 1328              	
 1329              	@ 0 "" 2
 1330              	.LVL132:
 1331              		.thumb
 1332              		.syntax unified
 1333              	.L106:
 1334 0016 FEE7     		b	.L106
 1335              	.L105:
 1336              	.LBE59:
 1337              	.LBE58:
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1338              		.loc 1 466 0
 1339 0018 7047     		bx	lr
 1340              	.L108:
 1341 001a 00BF     		.align	2
 1342              	.L107:
 1343 001c 00000000 		.word	.LANCHOR7
 1344              		.cfi_endproc
 1345              	.LFE10:
 1347              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1348              		.align	2
 1349              		.global	xTimerGetPeriod
 1350              		.thumb
 1351              		.thumb_func
 1353              	xTimerGetPeriod:
 1354              	.LFB11:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1355              		.loc 1 470 0
 1356              		.cfi_startproc
 1357              		@ args = 0, pretend = 0, frame = 0
 1358              		@ frame_needed = 0, uses_anonymous_args = 0
 1359              		@ link register save eliminated.
 1360              	.LVL133:
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
ARM GAS  /tmp/ccz6of6N.s 			page 48


 1361              		.loc 1 473 0
 1362 0000 40B9     		cbnz	r0, .L110
 1363              	.LBB60:
 1364              	.LBB61:
 1365              		.loc 2 237 0
 1366              		.syntax unified
 1367              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1368 0002 4FF05003 			mov r3, #80												
 1369 0006 83F31188 		msr basepri, r3											
 1370 000a BFF36F8F 		isb														
 1371 000e BFF34F8F 		dsb														
 1372              	
 1373              	@ 0 "" 2
 1374              	.LVL134:
 1375              		.thumb
 1376              		.syntax unified
 1377              	.L111:
 1378 0012 FEE7     		b	.L111
 1379              	.L110:
 1380              	.LBE61:
 1381              	.LBE60:
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1382              		.loc 1 475 0
 1383 0014 8069     		ldr	r0, [r0, #24]
 1384              	.LVL135:
 1385 0016 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE11:
 1389              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1390              		.align	2
 1391              		.global	xTimerGetExpiryTime
 1392              		.thumb
 1393              		.thumb_func
 1395              	xTimerGetExpiryTime:
 1396              	.LFB12:
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1397              		.loc 1 479 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 0, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402              	.LVL136:
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1403              		.loc 1 483 0
 1404 0000 40B9     		cbnz	r0, .L113
 1405              	.LBB62:
 1406              	.LBB63:
 1407              		.loc 2 237 0
 1408              		.syntax unified
 1409              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1410 0002 4FF05003 			mov r3, #80												
 1411 0006 83F31188 		msr basepri, r3											
 1412 000a BFF36F8F 		isb														
 1413 000e BFF34F8F 		dsb														
 1414              	
 1415              	@ 0 "" 2
 1416              	.LVL137:
ARM GAS  /tmp/ccz6of6N.s 			page 49


 1417              		.thumb
 1418              		.syntax unified
 1419              	.L114:
 1420 0012 FEE7     		b	.L114
 1421              	.L113:
 1422              	.LVL138:
 1423              	.LBE63:
 1424              	.LBE62:
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1425              		.loc 1 486 0
 1426 0014 4068     		ldr	r0, [r0, #4]
 1427              	.LVL139:
 1428 0016 7047     		bx	lr
 1429              		.cfi_endproc
 1430              	.LFE12:
 1432              		.section	.text.pcTimerGetName,"ax",%progbits
 1433              		.align	2
 1434              		.global	pcTimerGetName
 1435              		.thumb
 1436              		.thumb_func
 1438              	pcTimerGetName:
 1439              	.LFB13:
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1440              		.loc 1 490 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445              	.LVL140:
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1446              		.loc 1 493 0
 1447 0000 40B9     		cbnz	r0, .L116
 1448              	.LBB64:
 1449              	.LBB65:
 1450              		.loc 2 237 0
 1451              		.syntax unified
 1452              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1453 0002 4FF05003 			mov r3, #80												
 1454 0006 83F31188 		msr basepri, r3											
 1455 000a BFF36F8F 		isb														
 1456 000e BFF34F8F 		dsb														
 1457              	
 1458              	@ 0 "" 2
 1459              	.LVL141:
 1460              		.thumb
 1461              		.syntax unified
 1462              	.L117:
 1463 0012 FEE7     		b	.L117
 1464              	.L116:
 1465              	.LBE65:
 1466              	.LBE64:
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1467              		.loc 1 495 0
 1468 0014 0068     		ldr	r0, [r0]
 1469              	.LVL142:
 1470 0016 7047     		bx	lr
 1471              		.cfi_endproc
ARM GAS  /tmp/ccz6of6N.s 			page 50


 1472              	.LFE13:
 1474              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1475              		.align	2
 1476              		.global	xTimerIsTimerActive
 1477              		.thumb
 1478              		.thumb_func
 1480              	xTimerIsTimerActive:
 1481              	.LFB23:
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1482              		.loc 1 982 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              	.LVL143:
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1487              		.loc 1 986 0
 1488 0000 40B9     		cbnz	r0, .L119
 1489              	.LBB66:
 1490              	.LBB67:
 1491              		.loc 2 237 0
 1492              		.syntax unified
 1493              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1494 0002 4FF05003 			mov r3, #80												
 1495 0006 83F31188 		msr basepri, r3											
 1496 000a BFF36F8F 		isb														
 1497 000e BFF34F8F 		dsb														
 1498              	
 1499              	@ 0 "" 2
 1500              	.LVL144:
 1501              		.thumb
 1502              		.syntax unified
 1503              	.L120:
 1504 0012 FEE7     		b	.L120
 1505              	.L119:
 1506              	.LBE67:
 1507              	.LBE66:
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1508              		.loc 1 982 0
 1509 0014 10B5     		push	{r4, lr}
 1510              	.LCFI32:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 4, -8
 1513              		.cfi_offset 14, -4
 1514 0016 0446     		mov	r4, r0
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1515              		.loc 1 989 0
 1516 0018 FFF7FEFF 		bl	vPortEnterCritical
 1517              	.LVL145:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /tmp/ccz6of6N.s 			page 51


 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1518              		.loc 1 994 0
 1519 001c 6469     		ldr	r4, [r4, #20]
 1520              	.LVL146:
 1521 001e 0034     		adds	r4, r4, #0
 1522 0020 18BF     		it	ne
 1523 0022 0124     		movne	r4, #1
 1524              	.LVL147:
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1525              		.loc 1 996 0
 1526 0024 FFF7FEFF 		bl	vPortExitCritical
 1527              	.LVL148:
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1528              		.loc 1 999 0
 1529 0028 2046     		mov	r0, r4
 1530 002a 10BD     		pop	{r4, pc}
 1531              		.cfi_endproc
 1532              	.LFE23:
 1534              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1535              		.align	2
 1536              		.global	pvTimerGetTimerID
 1537              		.thumb
 1538              		.thumb_func
 1540              	pvTimerGetTimerID:
 1541              	.LFB24:
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1542              		.loc 1 1003 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              	.LVL149:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1547              		.loc 1 1007 0
 1548 0000 40B9     		cbnz	r0, .L123
 1549              	.LBB68:
 1550              	.LBB69:
 1551              		.loc 2 237 0
 1552              		.syntax unified
 1553              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1554 0002 4FF05003 			mov r3, #80												
 1555 0006 83F31188 		msr basepri, r3											
 1556 000a BFF36F8F 		isb														
 1557 000e BFF34F8F 		dsb														
 1558              	
 1559              	@ 0 "" 2
ARM GAS  /tmp/ccz6of6N.s 			page 52


 1560              	.LVL150:
 1561              		.thumb
 1562              		.syntax unified
 1563              	.L124:
 1564 0012 FEE7     		b	.L124
 1565              	.L123:
 1566              	.LBE69:
 1567              	.LBE68:
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1568              		.loc 1 1003 0
 1569 0014 10B5     		push	{r4, lr}
 1570              	.LCFI33:
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 4, -8
 1573              		.cfi_offset 14, -4
 1574 0016 0446     		mov	r4, r0
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1575              		.loc 1 1009 0
 1576 0018 FFF7FEFF 		bl	vPortEnterCritical
 1577              	.LVL151:
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1578              		.loc 1 1011 0
 1579 001c 246A     		ldr	r4, [r4, #32]
 1580              	.LVL152:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1581              		.loc 1 1013 0
 1582 001e FFF7FEFF 		bl	vPortExitCritical
 1583              	.LVL153:
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1584              		.loc 1 1016 0
 1585 0022 2046     		mov	r0, r4
 1586 0024 10BD     		pop	{r4, pc}
 1587              		.cfi_endproc
 1588              	.LFE24:
 1590 0026 00BF     		.section	.text.vTimerSetTimerID,"ax",%progbits
 1591              		.align	2
 1592              		.global	vTimerSetTimerID
 1593              		.thumb
 1594              		.thumb_func
 1596              	vTimerSetTimerID:
 1597              	.LFB25:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1598              		.loc 1 1020 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602              	.LVL154:
 1603 0000 38B5     		push	{r3, r4, r5, lr}
 1604              	.LCFI34:
ARM GAS  /tmp/ccz6of6N.s 			page 53


 1605              		.cfi_def_cfa_offset 16
 1606              		.cfi_offset 3, -16
 1607              		.cfi_offset 4, -12
 1608              		.cfi_offset 5, -8
 1609              		.cfi_offset 14, -4
 1610              	.LVL155:
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1611              		.loc 1 1023 0
 1612 0002 40B9     		cbnz	r0, .L127
 1613              	.LBB70:
 1614              	.LBB71:
 1615              		.loc 2 237 0
 1616              		.syntax unified
 1617              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1618 0004 4FF05003 			mov r3, #80												
 1619 0008 83F31188 		msr basepri, r3											
 1620 000c BFF36F8F 		isb														
 1621 0010 BFF34F8F 		dsb														
 1622              	
 1623              	@ 0 "" 2
 1624              	.LVL156:
 1625              		.thumb
 1626              		.syntax unified
 1627              	.L128:
 1628 0014 FEE7     		b	.L128
 1629              	.L127:
 1630 0016 0446     		mov	r4, r0
 1631 0018 0D46     		mov	r5, r1
 1632              	.LBE71:
 1633              	.LBE70:
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1634              		.loc 1 1025 0
 1635 001a FFF7FEFF 		bl	vPortEnterCritical
 1636              	.LVL157:
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1637              		.loc 1 1027 0
 1638 001e 2562     		str	r5, [r4, #32]
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1639              		.loc 1 1029 0
 1640 0020 FFF7FEFF 		bl	vPortExitCritical
 1641              	.LVL158:
 1642 0024 38BD     		pop	{r3, r4, r5, pc}
 1643              		.cfi_endproc
 1644              	.LFE25:
 1646 0026 00BF     		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1647              		.align	2
 1648              		.set	.LANCHOR0,. + 0
 1651              	pxCurrentTimerList:
 1652 0000 00000000 		.space	4
 1653              		.section	.bss.ucStaticTimerQueueStorage.5527,"aw",%nobits
 1654              		.align	2
 1655              		.set	.LANCHOR6,. + 0
ARM GAS  /tmp/ccz6of6N.s 			page 54


 1658              	ucStaticTimerQueueStorage.5527:
 1659 0000 00000000 		.space	120
 1659      00000000 
 1659      00000000 
 1659      00000000 
 1659      00000000 
 1660              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1661              		.align	2
 1662              		.set	.LANCHOR3,. + 0
 1665              	xActiveTimerList1:
 1666 0000 00000000 		.space	20
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1667              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1668              		.align	2
 1669              		.set	.LANCHOR4,. + 0
 1672              	xActiveTimerList2:
 1673 0000 00000000 		.space	20
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1673      00000000 
 1674              		.section	.bss.xStaticTimerQueue.5526,"aw",%nobits
 1675              		.align	2
 1676              		.set	.LANCHOR5,. + 0
 1679              	xStaticTimerQueue.5526:
 1680 0000 00000000 		.space	72
 1680      00000000 
 1680      00000000 
 1680      00000000 
 1680      00000000 
 1681              		.section	.rodata.str1.4,"aMS",%progbits,1
 1682              		.align	2
 1683              	.LC0:
 1684 0000 546D7251 		.ascii	"TmrQ\000"
 1684      00
 1685 0005 000000   		.space	3
 1686              	.LC1:
 1687 0008 546D7220 		.ascii	"Tmr Svc\000"
 1687      53766300 
 1688              		.section	.bss.xLastTime.5478,"aw",%nobits
 1689              		.align	2
 1690              		.set	.LANCHOR8,. + 0
 1693              	xLastTime.5478:
 1694 0000 00000000 		.space	4
 1695              		.section	.bss.xTimerQueue,"aw",%nobits
 1696              		.align	2
 1697              		.set	.LANCHOR2,. + 0
 1700              	xTimerQueue:
 1701 0000 00000000 		.space	4
 1702              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1703              		.align	2
 1704              		.set	.LANCHOR1,. + 0
 1707              	pxOverflowTimerList:
 1708 0000 00000000 		.space	4
ARM GAS  /tmp/ccz6of6N.s 			page 55


 1709              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1710              		.align	2
 1711              		.set	.LANCHOR7,. + 0
 1714              	xTimerTaskHandle:
 1715 0000 00000000 		.space	4
 1716              		.text
 1717              	.Letext0:
 1718              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/lib/gcc/arm-none-eabi/5.4.1/include/stdd
 1719              		.file 4 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 1720              		.file 5 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1721              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1722              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1723              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1724              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1725              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1726              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccz6of6N.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
     /tmp/ccz6of6N.s:22     .text.prvGetNextExpireTime:00000000 $t
     /tmp/ccz6of6N.s:26     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
     /tmp/ccz6of6N.s:59     .text.prvGetNextExpireTime:0000001c $d
     /tmp/ccz6of6N.s:64     .text.prvInsertTimerInActiveList:00000000 $t
     /tmp/ccz6of6N.s:68     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
     /tmp/ccz6of6N.s:144    .text.prvInsertTimerInActiveList:00000040 $d
     /tmp/ccz6of6N.s:150    .text.prvCheckForValidListAndQueue:00000000 $t
     /tmp/ccz6of6N.s:154    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
     /tmp/ccz6of6N.s:224    .text.prvCheckForValidListAndQueue:0000004c $d
     /tmp/ccz6of6N.s:236    .text.prvInitialiseNewTimer:00000000 $t
     /tmp/ccz6of6N.s:240    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
     /tmp/ccz6of6N.s:310    .text.xTimerCreateTimerTask:00000000 $t
     /tmp/ccz6of6N.s:315    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
     /tmp/ccz6of6N.s:413    .text.xTimerCreateTimerTask:00000060 $d
     /tmp/ccz6of6N.s:1271   .text.prvTimerTask:00000000 prvTimerTask
     /tmp/ccz6of6N.s:421    .text.xTimerCreate:00000000 $t
     /tmp/ccz6of6N.s:426    .text.xTimerCreate:00000000 xTimerCreate
     /tmp/ccz6of6N.s:483    .text.xTimerCreateStatic:00000000 $t
     /tmp/ccz6of6N.s:488    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
     /tmp/ccz6of6N.s:579    .text.xTimerGenericCommand:00000000 $t
     /tmp/ccz6of6N.s:584    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
     /tmp/ccz6of6N.s:692    .text.xTimerGenericCommand:00000068 $d
     /tmp/ccz6of6N.s:697    .text.prvSwitchTimerLists:00000000 $t
     /tmp/ccz6of6N.s:701    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
     /tmp/ccz6of6N.s:816    .text.prvSwitchTimerLists:00000074 $d
     /tmp/ccz6of6N.s:822    .text.prvSampleTimeNow:00000000 $t
     /tmp/ccz6of6N.s:826    .text.prvSampleTimeNow:00000000 prvSampleTimeNow
     /tmp/ccz6of6N.s:875    .text.prvSampleTimeNow:00000028 $d
     /tmp/ccz6of6N.s:880    .text.prvProcessExpiredTimer:00000000 $t
     /tmp/ccz6of6N.s:884    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
     /tmp/ccz6of6N.s:972    .text.prvProcessExpiredTimer:00000058 $d
     /tmp/ccz6of6N.s:977    .text.prvProcessTimerOrBlockTask:00000000 $t
     /tmp/ccz6of6N.s:981    .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
     /tmp/ccz6of6N.s:1080   .text.prvProcessTimerOrBlockTask:00000068 $d
     /tmp/ccz6of6N.s:1087   .text.prvProcessReceivedCommands:00000000 $t
     /tmp/ccz6of6N.s:1091   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
     /tmp/ccz6of6N.s:1134   .text.prvProcessReceivedCommands:00000028 $d
     /tmp/ccz6of6N.s:1144   .text.prvProcessReceivedCommands:00000032 $t
     /tmp/ccz6of6N.s:1262   .text.prvProcessReceivedCommands:000000c0 $d
     /tmp/ccz6of6N.s:1267   .text.prvTimerTask:00000000 $t
     /tmp/ccz6of6N.s:1303   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
     /tmp/ccz6of6N.s:1308   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccz6of6N.s:1343   .text.xTimerGetTimerDaemonTaskHandle:0000001c $d
     /tmp/ccz6of6N.s:1348   .text.xTimerGetPeriod:00000000 $t
     /tmp/ccz6of6N.s:1353   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
     /tmp/ccz6of6N.s:1390   .text.xTimerGetExpiryTime:00000000 $t
     /tmp/ccz6of6N.s:1395   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
     /tmp/ccz6of6N.s:1433   .text.pcTimerGetName:00000000 $t
     /tmp/ccz6of6N.s:1438   .text.pcTimerGetName:00000000 pcTimerGetName
     /tmp/ccz6of6N.s:1475   .text.xTimerIsTimerActive:00000000 $t
     /tmp/ccz6of6N.s:1480   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
     /tmp/ccz6of6N.s:1535   .text.pvTimerGetTimerID:00000000 $t
     /tmp/ccz6of6N.s:1540   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
     /tmp/ccz6of6N.s:1591   .text.vTimerSetTimerID:00000000 $t
     /tmp/ccz6of6N.s:1596   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
ARM GAS  /tmp/ccz6of6N.s 			page 57


     /tmp/ccz6of6N.s:1647   .bss.pxCurrentTimerList:00000000 $d
     /tmp/ccz6of6N.s:1651   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
     /tmp/ccz6of6N.s:1654   .bss.ucStaticTimerQueueStorage.5527:00000000 $d
     /tmp/ccz6of6N.s:1658   .bss.ucStaticTimerQueueStorage.5527:00000000 ucStaticTimerQueueStorage.5527
     /tmp/ccz6of6N.s:1661   .bss.xActiveTimerList1:00000000 $d
     /tmp/ccz6of6N.s:1665   .bss.xActiveTimerList1:00000000 xActiveTimerList1
     /tmp/ccz6of6N.s:1668   .bss.xActiveTimerList2:00000000 $d
     /tmp/ccz6of6N.s:1672   .bss.xActiveTimerList2:00000000 xActiveTimerList2
     /tmp/ccz6of6N.s:1675   .bss.xStaticTimerQueue.5526:00000000 $d
     /tmp/ccz6of6N.s:1679   .bss.xStaticTimerQueue.5526:00000000 xStaticTimerQueue.5526
     /tmp/ccz6of6N.s:1682   .rodata.str1.4:00000000 $d
     /tmp/ccz6of6N.s:1689   .bss.xLastTime.5478:00000000 $d
     /tmp/ccz6of6N.s:1693   .bss.xLastTime.5478:00000000 xLastTime.5478
     /tmp/ccz6of6N.s:1696   .bss.xTimerQueue:00000000 $d
     /tmp/ccz6of6N.s:1700   .bss.xTimerQueue:00000000 xTimerQueue
     /tmp/ccz6of6N.s:1703   .bss.pxOverflowTimerList:00000000 $d
     /tmp/ccz6of6N.s:1707   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
     /tmp/ccz6of6N.s:1710   .bss.xTimerTaskHandle:00000000 $d
     /tmp/ccz6of6N.s:1714   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vPortExitCritical
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
vPortFree
xQueueGenericReceive

ARM GAS  /tmp/cc3yWBbK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"usbd_desc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  22              		.align	2
  23              		.global	USBD_FS_DeviceDescriptor
  24              		.thumb
  25              		.thumb_func
  27              	USBD_FS_DeviceDescriptor:
  28              	.LFB124:
  29              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   4:Src/usbd_desc.c ****   * @version        : v1.0_Cube
   5:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   * This notice applies to any and all portions of this file
   8:Src/usbd_desc.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usbd_desc.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usbd_desc.c ****   * inserted by the user or by software development tools
  11:Src/usbd_desc.c ****   * are owned by their respective copyright owners.
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  14:Src/usbd_desc.c ****   * All rights reserved.
  15:Src/usbd_desc.c ****   *
  16:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/usbd_desc.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/usbd_desc.c ****   *
  19:Src/usbd_desc.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer.
  21:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/usbd_desc.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/usbd_desc.c ****   *    and/or other materials provided with the distribution.
  24:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/usbd_desc.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/usbd_desc.c ****   *    derived from this software without specific written permission.
  27:Src/usbd_desc.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/usbd_desc.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/usbd_desc.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
ARM GAS  /tmp/cc3yWBbK.s 			page 2


  30:Src/usbd_desc.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/usbd_desc.c ****   *    this license is void and will automatically terminate your rights under 
  32:Src/usbd_desc.c ****   *    this license. 
  33:Src/usbd_desc.c ****   *
  34:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/usbd_desc.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/usbd_desc.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/usbd_desc.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/usbd_desc.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/usbd_desc.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/usbd_desc.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/usbd_desc.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/usbd_desc.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/usbd_desc.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/usbd_desc.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/usbd_desc.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/usbd_desc.c ****   *
  47:Src/usbd_desc.c ****   ******************************************************************************
  48:Src/usbd_desc.c ****   */
  49:Src/usbd_desc.c **** 
  50:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  51:Src/usbd_desc.c **** #include "usbd_core.h"
  52:Src/usbd_desc.c **** #include "usbd_desc.h"
  53:Src/usbd_desc.c **** #include "usbd_conf.h"
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  58:Src/usbd_desc.c **** 
  59:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  60:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  61:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  62:Src/usbd_desc.c **** 
  63:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  64:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** /* USER CODE END PV */
  67:Src/usbd_desc.c **** 
  68:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  69:Src/usbd_desc.c ****   * @{
  70:Src/usbd_desc.c ****   */
  71:Src/usbd_desc.c **** 
  72:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  73:Src/usbd_desc.c ****   * @{
  74:Src/usbd_desc.c ****   */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  77:Src/usbd_desc.c ****   * @brief Private types.
  78:Src/usbd_desc.c ****   * @{
  79:Src/usbd_desc.c ****   */
  80:Src/usbd_desc.c **** 
  81:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  84:Src/usbd_desc.c **** 
  85:Src/usbd_desc.c **** /**
  86:Src/usbd_desc.c ****   * @}
ARM GAS  /tmp/cc3yWBbK.s 			page 3


  87:Src/usbd_desc.c ****   */
  88:Src/usbd_desc.c **** 
  89:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  90:Src/usbd_desc.c ****   * @brief Private defines.
  91:Src/usbd_desc.c ****   * @{
  92:Src/usbd_desc.c ****   */
  93:Src/usbd_desc.c **** 
  94:Src/usbd_desc.c **** #define USBD_VID     1155
  95:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  96:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  97:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  98:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  99:Src/usbd_desc.c **** #define USBD_SERIALNUMBER_STRING_FS     "00000000001A"
 100:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
 101:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
 102:Src/usbd_desc.c **** 
 103:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC            0x0C
 104:Src/usbd_desc.c **** 
 105:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
 106:Src/usbd_desc.c **** 
 107:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
 108:Src/usbd_desc.c **** 
 109:Src/usbd_desc.c **** /**
 110:Src/usbd_desc.c ****   * @}
 111:Src/usbd_desc.c ****   */
 112:Src/usbd_desc.c **** 
 113:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
 114:Src/usbd_desc.c **** 
 115:Src/usbd_desc.c **** /* USER CODE END 0 */
 116:Src/usbd_desc.c **** 
 117:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
 118:Src/usbd_desc.c ****   * @brief Private macros.
 119:Src/usbd_desc.c ****   * @{
 120:Src/usbd_desc.c ****   */
 121:Src/usbd_desc.c **** 
 122:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
 123:Src/usbd_desc.c **** 
 124:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
 125:Src/usbd_desc.c **** 
 126:Src/usbd_desc.c **** /**
 127:Src/usbd_desc.c ****   * @}
 128:Src/usbd_desc.c ****   */
 129:Src/usbd_desc.c **** 
 130:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 131:Src/usbd_desc.c ****   * @brief Private functions declaration.
 132:Src/usbd_desc.c ****   * @{
 133:Src/usbd_desc.c ****   */
 134:Src/usbd_desc.c **** 
 135:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 136:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 137:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 138:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 139:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 140:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 141:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 142:Src/usbd_desc.c **** 
 143:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
ARM GAS  /tmp/cc3yWBbK.s 			page 4


 144:Src/usbd_desc.c **** uint8_t * USBD_FS_USRStringDesc(USBD_SpeedTypeDef speed, uint8_t idx, uint16_t *length);
 145:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */
 146:Src/usbd_desc.c **** 
 147:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 148:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 149:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 150:Src/usbd_desc.c **** 
 151:Src/usbd_desc.c **** /**
 152:Src/usbd_desc.c ****   * @}
 153:Src/usbd_desc.c ****   */
 154:Src/usbd_desc.c **** 
 155:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 156:Src/usbd_desc.c ****   * @brief Private variables.
 157:Src/usbd_desc.c ****   * @{
 158:Src/usbd_desc.c ****   */
 159:Src/usbd_desc.c **** 
 160:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 161:Src/usbd_desc.c **** {
 162:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 163:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 164:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 165:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 166:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 167:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 168:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 169:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 170:Src/usbd_desc.c **** , USBD_FS_USR_BOSDescriptor
 171:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 172:Src/usbd_desc.c **** };
 173:Src/usbd_desc.c **** 
 174:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 175:Src/usbd_desc.c ****   #pragma data_alignment=4
 176:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 177:Src/usbd_desc.c **** /** USB standard device descriptor. */
 178:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 179:Src/usbd_desc.c **** {
 180:Src/usbd_desc.c ****   0x12,                       /*bLength */
 181:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 182:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 183:Src/usbd_desc.c ****   0x01,                       /*bcdUSB */ /* changed to USB version 2.01
 184:Src/usbd_desc.c ****                                              in order to support LPM L1 suspend
 185:Src/usbd_desc.c ****                                              resume test of USBCV3.0*/
 186:Src/usbd_desc.c **** #else
 187:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 188:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 189:Src/usbd_desc.c ****   0x02,
 190:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 191:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 192:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 193:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 194:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 195:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 196:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 197:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 198:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 199:Src/usbd_desc.c ****   0x02,
 200:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
ARM GAS  /tmp/cc3yWBbK.s 			page 5


 201:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 202:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 203:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 204:Src/usbd_desc.c **** };
 205:Src/usbd_desc.c **** 
 206:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 207:Src/usbd_desc.c **** /** BOS descriptor. */
 208:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 209:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 210:Src/usbd_desc.c ****   #pragma data_alignment=4
 211:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 212:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 213:Src/usbd_desc.c **** {
 214:Src/usbd_desc.c ****   0x5,
 215:Src/usbd_desc.c ****   USB_DESC_TYPE_BOS,
 216:Src/usbd_desc.c ****   0xC,
 217:Src/usbd_desc.c ****   0x0,
 218:Src/usbd_desc.c ****   0x1,  /* 1 device capability*/
 219:Src/usbd_desc.c ****         /* device capability*/
 220:Src/usbd_desc.c ****   0x7,
 221:Src/usbd_desc.c ****   USB_DEVICE_CAPABITY_TYPE,
 222:Src/usbd_desc.c ****   0x2,
 223:Src/usbd_desc.c ****   0x2,  /* LPM capability bit set*/
 224:Src/usbd_desc.c ****   0x0,
 225:Src/usbd_desc.c ****   0x0,
 226:Src/usbd_desc.c ****   0x0
 227:Src/usbd_desc.c **** };
 228:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 229:Src/usbd_desc.c **** 
 230:Src/usbd_desc.c **** /**
 231:Src/usbd_desc.c ****   * @}
 232:Src/usbd_desc.c ****   */
 233:Src/usbd_desc.c **** 
 234:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 235:Src/usbd_desc.c ****   * @brief Private variables.
 236:Src/usbd_desc.c ****   * @{
 237:Src/usbd_desc.c ****   */
 238:Src/usbd_desc.c **** 
 239:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 240:Src/usbd_desc.c ****   #pragma data_alignment=4
 241:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 242:Src/usbd_desc.c **** 
 243:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 244:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 245:Src/usbd_desc.c **** {
 246:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 247:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 248:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 249:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 250:Src/usbd_desc.c **** };
 251:Src/usbd_desc.c **** 
 252:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 253:Src/usbd_desc.c ****   #pragma data_alignment=4
 254:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 255:Src/usbd_desc.c **** /* Internal string descriptor. */
 256:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 257:Src/usbd_desc.c **** 
ARM GAS  /tmp/cc3yWBbK.s 			page 6


 258:Src/usbd_desc.c **** /**
 259:Src/usbd_desc.c ****   * @}
 260:Src/usbd_desc.c ****   */
 261:Src/usbd_desc.c **** 
 262:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 263:Src/usbd_desc.c ****   * @brief Private functions.
 264:Src/usbd_desc.c ****   * @{
 265:Src/usbd_desc.c ****   */
 266:Src/usbd_desc.c **** 
 267:Src/usbd_desc.c **** /**
 268:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 269:Src/usbd_desc.c ****   * @param  speed : Current device speed
 270:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 271:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 272:Src/usbd_desc.c ****   */
 273:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 274:Src/usbd_desc.c **** {
  30              		.loc 1 274 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
 275:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  36              		.loc 1 275 0
  37 0000 1223     		movs	r3, #18
  38 0002 0B80     		strh	r3, [r1]	@ movhi
 276:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 277:Src/usbd_desc.c **** }
  39              		.loc 1 277 0
  40 0004 0048     		ldr	r0, .L2
  41              	.LVL1:
  42 0006 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0008 00000000 		.word	.LANCHOR0
  47              		.cfi_endproc
  48              	.LFE124:
  50              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  51              		.align	2
  52              		.global	USBD_FS_LangIDStrDescriptor
  53              		.thumb
  54              		.thumb_func
  56              	USBD_FS_LangIDStrDescriptor:
  57              	.LFB125:
 278:Src/usbd_desc.c **** 
 279:Src/usbd_desc.c **** /**
 280:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 281:Src/usbd_desc.c ****   * @param  speed : Current device speed
 282:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 283:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 284:Src/usbd_desc.c ****   */
 285:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 286:Src/usbd_desc.c **** {
  58              		.loc 1 286 0
  59              		.cfi_startproc
ARM GAS  /tmp/cc3yWBbK.s 			page 7


  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL2:
 287:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  64              		.loc 1 287 0
  65 0000 0423     		movs	r3, #4
  66 0002 0B80     		strh	r3, [r1]	@ movhi
 288:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 289:Src/usbd_desc.c **** }
  67              		.loc 1 289 0
  68 0004 0048     		ldr	r0, .L5
  69              	.LVL3:
  70 0006 7047     		bx	lr
  71              	.L6:
  72              		.align	2
  73              	.L5:
  74 0008 00000000 		.word	.LANCHOR1
  75              		.cfi_endproc
  76              	.LFE125:
  78              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
  79              		.align	2
  80              		.global	USBD_FS_ProductStrDescriptor
  81              		.thumb
  82              		.thumb_func
  84              	USBD_FS_ProductStrDescriptor:
  85              	.LFB126:
 290:Src/usbd_desc.c **** 
 291:Src/usbd_desc.c **** /**
 292:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 293:Src/usbd_desc.c ****   * @param  speed : Current device speed
 294:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 295:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 296:Src/usbd_desc.c ****   */
 297:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 298:Src/usbd_desc.c **** {
  86              		.loc 1 298 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL4:
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
  96 0002 0A46     		mov	r2, r1
 299:Src/usbd_desc.c ****   if(speed == 0)
  97              		.loc 1 299 0
  98 0004 20B9     		cbnz	r0, .L8
 300:Src/usbd_desc.c ****   {
 301:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
  99              		.loc 1 301 0
 100 0006 0549     		ldr	r1, .L11
 101              	.LVL5:
 102 0008 0548     		ldr	r0, .L11+4
 103              	.LVL6:
ARM GAS  /tmp/cc3yWBbK.s 			page 8


 104 000a FFF7FEFF 		bl	USBD_GetString
 105              	.LVL7:
 106 000e 03E0     		b	.L9
 107              	.LVL8:
 108              	.L8:
 302:Src/usbd_desc.c ****   }
 303:Src/usbd_desc.c ****   else
 304:Src/usbd_desc.c ****   {
 305:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 109              		.loc 1 305 0
 110 0010 0249     		ldr	r1, .L11
 111              	.LVL9:
 112 0012 0348     		ldr	r0, .L11+4
 113              	.LVL10:
 114 0014 FFF7FEFF 		bl	USBD_GetString
 115              	.LVL11:
 116              	.L9:
 306:Src/usbd_desc.c ****   }
 307:Src/usbd_desc.c ****   return USBD_StrDesc;
 308:Src/usbd_desc.c **** }
 117              		.loc 1 308 0
 118 0018 0048     		ldr	r0, .L11
 119 001a 08BD     		pop	{r3, pc}
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 001c 00000000 		.word	USBD_StrDesc
 124 0020 00000000 		.word	.LC0
 125              		.cfi_endproc
 126              	.LFE126:
 128              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 129              		.align	2
 130              		.global	USBD_FS_ManufacturerStrDescriptor
 131              		.thumb
 132              		.thumb_func
 134              	USBD_FS_ManufacturerStrDescriptor:
 135              	.LFB127:
 309:Src/usbd_desc.c **** 
 310:Src/usbd_desc.c **** /**
 311:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 312:Src/usbd_desc.c ****   * @param  speed : Current device speed
 313:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 314:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 315:Src/usbd_desc.c ****   */
 316:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 317:Src/usbd_desc.c **** {
 136              		.loc 1 317 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL12:
 141 0000 10B5     		push	{r4, lr}
 142              	.LCFI1:
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 4, -8
 145              		.cfi_offset 14, -4
 318:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
ARM GAS  /tmp/cc3yWBbK.s 			page 9


 146              		.loc 1 318 0
 147 0002 044C     		ldr	r4, .L15
 148 0004 0A46     		mov	r2, r1
 149 0006 2146     		mov	r1, r4
 150              	.LVL13:
 151 0008 0348     		ldr	r0, .L15+4
 152              	.LVL14:
 153 000a FFF7FEFF 		bl	USBD_GetString
 154              	.LVL15:
 319:Src/usbd_desc.c ****   return USBD_StrDesc;
 320:Src/usbd_desc.c **** }
 155              		.loc 1 320 0
 156 000e 2046     		mov	r0, r4
 157 0010 10BD     		pop	{r4, pc}
 158              	.L16:
 159 0012 00BF     		.align	2
 160              	.L15:
 161 0014 00000000 		.word	USBD_StrDesc
 162 0018 18000000 		.word	.LC1
 163              		.cfi_endproc
 164              	.LFE127:
 166              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 167              		.align	2
 168              		.global	USBD_FS_SerialStrDescriptor
 169              		.thumb
 170              		.thumb_func
 172              	USBD_FS_SerialStrDescriptor:
 173              	.LFB128:
 321:Src/usbd_desc.c **** 
 322:Src/usbd_desc.c **** /**
 323:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 324:Src/usbd_desc.c ****   * @param  speed : Current device speed
 325:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 326:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 327:Src/usbd_desc.c ****   */
 328:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 329:Src/usbd_desc.c **** {
 174              		.loc 1 329 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL16:
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 184 0002 0A46     		mov	r2, r1
 330:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 185              		.loc 1 330 0
 186 0004 20B9     		cbnz	r0, .L18
 331:Src/usbd_desc.c ****   {
 332:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 187              		.loc 1 332 0
 188 0006 0549     		ldr	r1, .L21
 189              	.LVL17:
 190 0008 0548     		ldr	r0, .L21+4
ARM GAS  /tmp/cc3yWBbK.s 			page 10


 191              	.LVL18:
 192 000a FFF7FEFF 		bl	USBD_GetString
 193              	.LVL19:
 194 000e 03E0     		b	.L19
 195              	.LVL20:
 196              	.L18:
 333:Src/usbd_desc.c ****   }
 334:Src/usbd_desc.c ****   else
 335:Src/usbd_desc.c ****   {
 336:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 197              		.loc 1 336 0
 198 0010 0249     		ldr	r1, .L21
 199              	.LVL21:
 200 0012 0348     		ldr	r0, .L21+4
 201              	.LVL22:
 202 0014 FFF7FEFF 		bl	USBD_GetString
 203              	.LVL23:
 204              	.L19:
 337:Src/usbd_desc.c ****   }
 338:Src/usbd_desc.c ****   return USBD_StrDesc;
 339:Src/usbd_desc.c **** }
 205              		.loc 1 339 0
 206 0018 0048     		ldr	r0, .L21
 207 001a 08BD     		pop	{r3, pc}
 208              	.L22:
 209              		.align	2
 210              	.L21:
 211 001c 00000000 		.word	USBD_StrDesc
 212 0020 2C000000 		.word	.LC2
 213              		.cfi_endproc
 214              	.LFE128:
 216              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 217              		.align	2
 218              		.global	USBD_FS_ConfigStrDescriptor
 219              		.thumb
 220              		.thumb_func
 222              	USBD_FS_ConfigStrDescriptor:
 223              	.LFB129:
 340:Src/usbd_desc.c **** 
 341:Src/usbd_desc.c **** /**
 342:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 343:Src/usbd_desc.c ****   * @param  speed : Current device speed
 344:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 345:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 346:Src/usbd_desc.c ****   */
 347:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 348:Src/usbd_desc.c **** {
 224              		.loc 1 348 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL24:
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3yWBbK.s 			page 11


 234 0002 0A46     		mov	r2, r1
 349:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 235              		.loc 1 349 0
 236 0004 20B9     		cbnz	r0, .L24
 350:Src/usbd_desc.c ****   {
 351:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 237              		.loc 1 351 0
 238 0006 0549     		ldr	r1, .L27
 239              	.LVL25:
 240 0008 0548     		ldr	r0, .L27+4
 241              	.LVL26:
 242 000a FFF7FEFF 		bl	USBD_GetString
 243              	.LVL27:
 244 000e 03E0     		b	.L25
 245              	.LVL28:
 246              	.L24:
 352:Src/usbd_desc.c ****   }
 353:Src/usbd_desc.c ****   else
 354:Src/usbd_desc.c ****   {
 355:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 247              		.loc 1 355 0
 248 0010 0249     		ldr	r1, .L27
 249              	.LVL29:
 250 0012 0348     		ldr	r0, .L27+4
 251              	.LVL30:
 252 0014 FFF7FEFF 		bl	USBD_GetString
 253              	.LVL31:
 254              	.L25:
 356:Src/usbd_desc.c ****   }
 357:Src/usbd_desc.c ****   return USBD_StrDesc;
 358:Src/usbd_desc.c **** }
 255              		.loc 1 358 0
 256 0018 0048     		ldr	r0, .L27
 257 001a 08BD     		pop	{r3, pc}
 258              	.L28:
 259              		.align	2
 260              	.L27:
 261 001c 00000000 		.word	USBD_StrDesc
 262 0020 3C000000 		.word	.LC3
 263              		.cfi_endproc
 264              	.LFE129:
 266              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 267              		.align	2
 268              		.global	USBD_FS_InterfaceStrDescriptor
 269              		.thumb
 270              		.thumb_func
 272              	USBD_FS_InterfaceStrDescriptor:
 273              	.LFB130:
 359:Src/usbd_desc.c **** 
 360:Src/usbd_desc.c **** /**
 361:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 362:Src/usbd_desc.c ****   * @param  speed : Current device speed
 363:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 364:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 365:Src/usbd_desc.c ****   */
 366:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 367:Src/usbd_desc.c **** {
ARM GAS  /tmp/cc3yWBbK.s 			page 12


 274              		.loc 1 367 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL32:
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 284 0002 0A46     		mov	r2, r1
 368:Src/usbd_desc.c ****   if(speed == 0)
 285              		.loc 1 368 0
 286 0004 20B9     		cbnz	r0, .L30
 369:Src/usbd_desc.c ****   {
 370:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 287              		.loc 1 370 0
 288 0006 0549     		ldr	r1, .L33
 289              	.LVL33:
 290 0008 0548     		ldr	r0, .L33+4
 291              	.LVL34:
 292 000a FFF7FEFF 		bl	USBD_GetString
 293              	.LVL35:
 294 000e 03E0     		b	.L31
 295              	.LVL36:
 296              	.L30:
 371:Src/usbd_desc.c ****   }
 372:Src/usbd_desc.c ****   else
 373:Src/usbd_desc.c ****   {
 374:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 297              		.loc 1 374 0
 298 0010 0249     		ldr	r1, .L33
 299              	.LVL37:
 300 0012 0348     		ldr	r0, .L33+4
 301              	.LVL38:
 302 0014 FFF7FEFF 		bl	USBD_GetString
 303              	.LVL39:
 304              	.L31:
 375:Src/usbd_desc.c ****   }
 376:Src/usbd_desc.c ****   return USBD_StrDesc;
 377:Src/usbd_desc.c **** }
 305              		.loc 1 377 0
 306 0018 0048     		ldr	r0, .L33
 307 001a 08BD     		pop	{r3, pc}
 308              	.L34:
 309              		.align	2
 310              	.L33:
 311 001c 00000000 		.word	USBD_StrDesc
 312 0020 48000000 		.word	.LC4
 313              		.cfi_endproc
 314              	.LFE130:
 316              		.comm	USBD_StrDesc,512,4
 317              		.global	USBD_LangIDDesc
 318              		.global	USBD_FS_DeviceDesc
 319              		.global	FS_Desc
 320              		.section	.data.FS_Desc,"aw",%progbits
 321              		.align	2
ARM GAS  /tmp/cc3yWBbK.s 			page 13


 324              	FS_Desc:
 325 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 326 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 327 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 328 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 329 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 330 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 331 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 332              		.section	.rodata.str1.4,"aMS",%progbits,1
 333              		.align	2
 334              	.LC0:
 335 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 335      32205669 
 335      72747561 
 335      6C20436F 
 335      6D506F72 
 336 0016 0000     		.space	2
 337              	.LC1:
 338 0018 53544D69 		.ascii	"STMicroelectronics\000"
 338      63726F65 
 338      6C656374 
 338      726F6E69 
 338      637300
 339 002b 00       		.space	1
 340              	.LC2:
 341 002c 30303030 		.ascii	"00000000001A\000"
 341      30303030 
 341      30303141 
 341      00
 342 0039 000000   		.space	3
 343              	.LC3:
 344 003c 43444320 		.ascii	"CDC Config\000"
 344      436F6E66 
 344      696700
 345 0047 00       		.space	1
 346              	.LC4:
 347 0048 43444320 		.ascii	"CDC Interface\000"
 347      496E7465 
 347      72666163 
 347      6500
 348              		.section	.data.USBD_LangIDDesc,"aw",%progbits
 349              		.align	2
 350              		.set	.LANCHOR1,. + 0
 353              	USBD_LangIDDesc:
 354 0000 04       		.byte	4
 355 0001 03       		.byte	3
 356 0002 09       		.byte	9
 357 0003 04       		.byte	4
 358              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
 359              		.align	2
 360              		.set	.LANCHOR0,. + 0
 363              	USBD_FS_DeviceDesc:
 364 0000 12       		.byte	18
 365 0001 01       		.byte	1
 366 0002 00       		.byte	0
 367 0003 02       		.byte	2
 368 0004 02       		.byte	2
ARM GAS  /tmp/cc3yWBbK.s 			page 14


 369 0005 02       		.byte	2
 370 0006 00       		.byte	0
 371 0007 40       		.byte	64
 372 0008 83       		.byte	-125
 373 0009 04       		.byte	4
 374 000a 40       		.byte	64
 375 000b 57       		.byte	87
 376 000c 00       		.byte	0
 377 000d 02       		.byte	2
 378 000e 01       		.byte	1
 379 000f 02       		.byte	2
 380 0010 03       		.byte	3
 381 0011 01       		.byte	1
 382              		.text
 383              	.Letext0:
 384              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 385              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 386              		.file 4 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 387              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 388              		.file 6 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/cc3yWBbK.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 usbd_desc.c
     /tmp/cc3yWBbK.s:22     .text.USBD_FS_DeviceDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:27     .text.USBD_FS_DeviceDescriptor:00000000 USBD_FS_DeviceDescriptor
     /tmp/cc3yWBbK.s:46     .text.USBD_FS_DeviceDescriptor:00000008 $d
     /tmp/cc3yWBbK.s:51     .text.USBD_FS_LangIDStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:56     .text.USBD_FS_LangIDStrDescriptor:00000000 USBD_FS_LangIDStrDescriptor
     /tmp/cc3yWBbK.s:74     .text.USBD_FS_LangIDStrDescriptor:00000008 $d
     /tmp/cc3yWBbK.s:79     .text.USBD_FS_ProductStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:84     .text.USBD_FS_ProductStrDescriptor:00000000 USBD_FS_ProductStrDescriptor
     /tmp/cc3yWBbK.s:123    .text.USBD_FS_ProductStrDescriptor:0000001c $d
                            *COM*:00000200 USBD_StrDesc
     /tmp/cc3yWBbK.s:129    .text.USBD_FS_ManufacturerStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:134    .text.USBD_FS_ManufacturerStrDescriptor:00000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/cc3yWBbK.s:161    .text.USBD_FS_ManufacturerStrDescriptor:00000014 $d
     /tmp/cc3yWBbK.s:167    .text.USBD_FS_SerialStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:172    .text.USBD_FS_SerialStrDescriptor:00000000 USBD_FS_SerialStrDescriptor
     /tmp/cc3yWBbK.s:211    .text.USBD_FS_SerialStrDescriptor:0000001c $d
     /tmp/cc3yWBbK.s:217    .text.USBD_FS_ConfigStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:222    .text.USBD_FS_ConfigStrDescriptor:00000000 USBD_FS_ConfigStrDescriptor
     /tmp/cc3yWBbK.s:261    .text.USBD_FS_ConfigStrDescriptor:0000001c $d
     /tmp/cc3yWBbK.s:267    .text.USBD_FS_InterfaceStrDescriptor:00000000 $t
     /tmp/cc3yWBbK.s:272    .text.USBD_FS_InterfaceStrDescriptor:00000000 USBD_FS_InterfaceStrDescriptor
     /tmp/cc3yWBbK.s:311    .text.USBD_FS_InterfaceStrDescriptor:0000001c $d
     /tmp/cc3yWBbK.s:353    .data.USBD_LangIDDesc:00000000 USBD_LangIDDesc
     /tmp/cc3yWBbK.s:363    .data.USBD_FS_DeviceDesc:00000000 USBD_FS_DeviceDesc
     /tmp/cc3yWBbK.s:324    .data.FS_Desc:00000000 FS_Desc
     /tmp/cc3yWBbK.s:321    .data.FS_Desc:00000000 $d
     /tmp/cc3yWBbK.s:333    .rodata.str1.4:00000000 $d
     /tmp/cc3yWBbK.s:349    .data.USBD_LangIDDesc:00000000 $d
     /tmp/cc3yWBbK.s:359    .data.USBD_FS_DeviceDesc:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBD_GetString
